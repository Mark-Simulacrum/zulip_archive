[
    {
        "content": "<p>Hey all! The edition working group has noted that <a href=\"https://github.com/rust-lang/rust/issues/86516\">https://github.com/rust-lang/rust/issues/86516</a> is a blocker to stabilizing the edition infrastructure, and hasn't yet been discussed by the lang team. I've nominated for lang next week, but wanted to post here in case we can get some early async feedback to streamline the meeting. (Or, perhaps, folks agree with things as-is, though I have some potential blockers in my latest comment).</p>\n<p>cc <span class=\"user-mention\" data-user-id=\"310399\">@Mara</span> <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span></p>",
        "id": 249225367,
        "sender_full_name": "simulacrum",
        "timestamp": 1628769722
    },
    {
        "content": "<p><em>waves</em></p>",
        "id": 249316757,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1628823527
    },
    {
        "content": "<p>I've helped out with some of the implementation work on this (a bugfix and the draft stabilization PR).</p>",
        "id": 249317138,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1628823926
    },
    {
        "content": "<p><code>--force-lint-level</code> seems like more work to implement, but it's probably cleaner than the current layout.</p>",
        "id": 249317146,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1628823950
    },
    {
        "content": "<p>I'm concerned over the current divergence between <code>force-warn</code> and <code>forbid</code>. It's not great from a teachability perspective, since <code>force-warn</code> just seems to have a bunch of weird exceptions.</p>",
        "id": 249317335,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1628824033
    },
    {
        "content": "<p>It seems to me that the problem here is that this was designed mainly to fulfill the needs of the edition migration, rather than with general use in mind. It seems like we've ended up with something that fulfills the needs of this specific use-case without being coherent with the rest of the lint design.</p>",
        "id": 249317481,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1628824204
    },
    {
        "content": "<p>In that sense, I think it's good that this has made its way to t-lang.</p>",
        "id": 249317501,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1628824223
    },
    {
        "content": "<p>I know the edition is coming up, but we shouldn't be stabilizing something for general usage if it's going to be a mess for future generations.</p>",
        "id": 249317529,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1628824281
    },
    {
        "content": "<p>Y'all are pretty experienced at making sure additions are coherent.</p>",
        "id": 249317543,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1628824303
    },
    {
        "content": "<p>IMO it would be better to make it an internal use only thing than stabilizing something that's not really ready yet.</p>",
        "id": 249317749,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1628824501
    },
    {
        "content": "<p>That said, these are just my thoughts, and I'm happy to go along with whatever ends up being decided.</p>",
        "id": 249318525,
        "sender_full_name": "inquisitivecrystal",
        "timestamp": 1628825339
    },
    {
        "content": "<blockquote>\n<p>That's not ideal; the semantics I'd expect are \"at least a warning\", not downgrading deny to warn.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> following up to your comment on github, I'm curious if you agree that the behavior you suggest should also mean renaming the option to <code>--min-lint-level lint=warn</code> or something like that. Otherwise, it seems like <code>--force-warn</code> specifically indicates <em>both sides</em> capping (see my comment - <a href=\"https://github.com/rust-lang/rust/issues/86516#issuecomment-900502233\">https://github.com/rust-lang/rust/issues/86516#issuecomment-900502233</a>).</p>",
        "id": 249853974,
        "sender_full_name": "simulacrum",
        "timestamp": 1629295516
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"224872\">@rylev</span> since it'll matter for your PR as well, though as mentioned I can invest in this too</p>",
        "id": 249854019,
        "sender_full_name": "simulacrum",
        "timestamp": 1629295536
    },
    {
        "content": "<p>I don't want to bikeshed naming until we figure out if those are the semantics we want. Personally, I feel like either name would be fine.</p>",
        "id": 249888615,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1629309775
    },
    {
        "content": "<p>(btw the topic links to the wrong issue)</p>",
        "id": 249888758,
        "sender_full_name": "RalfJ",
        "timestamp": 1629309839
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"417924\">inquisitivecrystal</span> <a href=\"#narrow/stream/213817-t-lang/topic/force-warn.20.2385616/near/249317481\">said</a>:</p>\n<blockquote>\n<p>It seems to me that the problem here is that this was designed mainly to fulfill the needs of the edition migration, rather than with general use in mind. It seems like we've ended up with something that fulfills the needs of this specific use-case without being coherent with the rest of the lint design.</p>\n</blockquote>\n<p>This is definitely true: I'm not sure why we should try to design something more general here</p>",
        "id": 249890630,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629310620
    },
    {
        "content": "<p>I don't feel like there's a desire to \"force warn\" in other contexts</p>",
        "id": 249890696,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629310650
    },
    {
        "content": "<p>I guess I don't really expect to ever <em>teach</em> anyone about force-warn</p>",
        "id": 249890744,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629310672
    },
    {
        "content": "<p>Edition migration and forward-compatibility warnings, and similar. I can think of cases where I want to get specific warnings even in my dependencies, by asking for them.</p>",
        "id": 249896980,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1629313284
    },
    {
        "content": "<p>That seems fine, but that seems like a separable thing</p>",
        "id": 249903546,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629316585
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> I agree we may not want a general design, but then it feels like it might be good to rename the option to something edition specific (or otherwise obscure), rather than using potentially valuable namespace. But maybe that's not a big concern.</p>",
        "id": 249906280,
        "sender_full_name": "simulacrum",
        "timestamp": 1629317976
    },
    {
        "content": "<p>Certainly we should decide which, because if it's just for the edition, we can likely stabilize exactly what we have now even though it doesn't match (potentially) expected behavior in a number of cases, such as what Josh noted earlier... it works for edition and maybe that's enough.</p>\n<p>But if we want something more general, it feels like there's some design space to work out and maybe (more) sync discussion time necessary.</p>",
        "id": 249906472,
        "sender_full_name": "simulacrum",
        "timestamp": 1629318069
    },
    {
        "content": "<p>It definitely feels like we have different goals in mind for this feature across different people, and no shared document with those goals enumerated, so it'll be quite difficult to design a solution in that space :)</p>",
        "id": 249906715,
        "sender_full_name": "simulacrum",
        "timestamp": 1629318189
    },
    {
        "content": "<p>this doesn't seem edition specific</p>",
        "id": 249908729,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629319287
    },
    {
        "content": "<p>it does just what it says, it makes the lint warn</p>",
        "id": 249908738,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629319294
    },
    {
        "content": "<p>maybe I'm missing where it doesn't match expectations</p>",
        "id": 249908763,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629319311
    },
    {
        "content": "<p>The design doc + motivation was here <a href=\"https://github.com/rust-lang/compiler-team/issues/434\">https://github.com/rust-lang/compiler-team/issues/434</a></p>",
        "id": 249908930,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629319395
    },
    {
        "content": "<p>note that it's an MCP, because I didn't thnk of this as a language thing, but like a \"tooling interop\" feature</p>",
        "id": 249908945,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629319406
    },
    {
        "content": "<p>along those lines, I think it's fine to rename it, I wouldn't expect any users to use it</p>",
        "id": 249908982,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629319431
    },
    {
        "content": "<p>but I <em>slightly</em> object to a naming that ties it to the edition -- I think it's tied to cargo fix, perhaps?</p>",
        "id": 249909005,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629319442
    },
    {
        "content": "<p>(I was actually surprised to discuss this in the lang team, I would have thought it's more a compiler team thing)</p>",
        "id": 249909098,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629319481
    },
    {
        "content": "<p>(But it seemed harmless enough)</p>",
        "id": 249909111,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629319487
    },
    {
        "content": "<p>\"make the lint warn\" is not what <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> wanted - <a href=\"https://github.com/rust-lang/rust/issues/86516#issuecomment-901046511\">https://github.com/rust-lang/rust/issues/86516#issuecomment-901046511</a></p>",
        "id": 249909317,
        "sender_full_name": "simulacrum",
        "timestamp": 1629319599
    },
    {
        "content": "<p>(I'm reading <a href=\"https://github.com/rust-lang/rust/issues/86516\">#86516</a> now)</p>",
        "id": 249909326,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629319603
    },
    {
        "content": "<p>Yeah, I think Josh doesn't want what Josh wants</p>",
        "id": 249909347,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629319610
    },
    {
        "content": "<p>But regardless, the name seems accurate to its semantics to me</p>",
        "id": 249909373,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629319626
    },
    {
        "content": "<p>That is: <em>it forces a warning</em></p>",
        "id": 249909380,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629319630
    },
    {
        "content": "<p>(it's not a \"min lint level\")</p>",
        "id": 249909393,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629319637
    },
    {
        "content": "<p>I don't think a min lint level is necessarily useful</p>",
        "id": 249909407,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629319646
    },
    {
        "content": "<p>but if we do want that, we could add it later</p>",
        "id": 249909414,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629319650
    },
    {
        "content": "<p>I see that Ryan misspoke in the meeting, which is good, because  I was mildly surprised</p>",
        "id": 249909444,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629319672
    },
    {
        "content": "<p>Right, in which case the current behavior is fine as-implemented, and we can move ahead. But the FCP was based on a somewhat flawed understanding (since the discussion in-meeting, was min lint level).</p>",
        "id": 249909456,
        "sender_full_name": "simulacrum",
        "timestamp": 1629319679
    },
    {
        "content": "<p>I do think that forcing a warning has various uses for cargo fix though</p>",
        "id": 249909486,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629319683
    },
    {
        "content": "<p>I see</p>",
        "id": 249909533,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629319692
    },
    {
        "content": "<p>It seems like <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> should speak to whether that changes his opinion</p>",
        "id": 249909575,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629319712
    },
    {
        "content": "<p>I'm reading the last few comments more closely</p>",
        "id": 249909624,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629319744
    },
    {
        "content": "<p>I would like to better understand why a min lint level is useful</p>",
        "id": 249909689,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629319793
    },
    {
        "content": "<p>(we have it, in some sense, with forbid, but only for the \"deny\" level)</p>",
        "id": 249909705,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629319801
    },
    {
        "content": "<p>The main use case I know is having tooling that wants to get access to all the warnings and things -- this would be useful for forwards-compatibilit warnings in general, so that we can warn about them.</p>",
        "id": 249909819,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629319856
    },
    {
        "content": "<p>(This is desirable for forwards-compatibility warnings in the original sense of the term: things which will stop compiling or change semantics. Not the expanded definition it has come to mean, which covers opt-in things like editions)</p>",
        "id": 249909871,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629319894
    },
    {
        "content": "<p>But for that, force-warn seems exactly right, since cargo wants to collect the warnings and print them out</p>",
        "id": 249909892,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629319907
    },
    {
        "content": "<p>For example, force-warn is not useful if you want to fail your build on those lints, right? So if we think the more general --force-$level is useful, then --force-$level might be a bad name for it, and --force-warn will look awkward</p>",
        "id": 249910031,
        "sender_full_name": "simulacrum",
        "timestamp": 1629319966
    },
    {
        "content": "<p>Why would you want to fail your build on those lints?</p>",
        "id": 249910213,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629320058
    },
    {
        "content": "<p>Regardless, I don't think we would want to use the name \"force\" for that</p>",
        "id": 249910271,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629320089
    },
    {
        "content": "<p>if we wanted to generalize \"forbid(lint)\" to be short for \"set-min-level lint=deny\", I wouldn't call it \"force\"</p>",
        "id": 249910319,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629320123
    },
    {
        "content": "<p>I could imagine deny-unsafe folks wanting this</p>",
        "id": 249910344,
        "sender_full_name": "cuviper",
        "timestamp": 1629320141
    },
    {
        "content": "<p>they have forbid for that</p>",
        "id": 249910356,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629320149
    },
    {
        "content": "<p>sure, though note that forbid and set-min-level differ in that one of these is affected by cap-lints and the other is not</p>",
        "id": 249910359,
        "sender_full_name": "simulacrum",
        "timestamp": 1629320150
    },
    {
        "content": "<p>it sounds like what people might want is the ability to control cap-lints in cargo</p>",
        "id": 249910438,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629320173
    },
    {
        "content": "<p>though I kind of think they are wrong to want that :)</p>",
        "id": 249910460,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629320183
    },
    {
        "content": "<p>but I can see a use case for it</p>",
        "id": 249910497,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629320202
    },
    {
        "content": "<p>(certainly being able to override it doesn't seem <em>too</em> terrible, but it starts to really mess with our composition system and semver rules)</p>",
        "id": 249910545,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629320234
    },
    {
        "content": "<p>(but if you're the application, and you bring it on yourself, that seems ok)</p>",
        "id": 249910571,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629320248
    },
    {
        "content": "<p>I wouldn't want to let arbitrary libraries set those policies</p>",
        "id": 249910590,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629320258
    },
    {
        "content": "<p>I think generally there are many use cases and not all of them are solvable with the tools we have today nicely (e.g., maybe -Dwarnings is bad, you actually want to tell <em>Cargo</em> to fail the build; rustc doesn't need to know in some sense, so that Cargo could keep going for example through all your crates).</p>\n<p>But ultimately it seems like the more holistic design shouldn't block this particular feature; we likely want to hear back from <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> at least and then proceed with stabilization as-is if we just want to hit the edition timeline. I don't think we can achieve a more holistic review of the design space for \"what can you do with lints and how to fix problems we have today\"; that also doesn't seem terribly important.</p>",
        "id": 249910753,
        "sender_full_name": "simulacrum",
        "timestamp": 1629320340
    },
    {
        "content": "<p>I agree with that</p>",
        "id": 249910817,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629320368
    },
    {
        "content": "<p>I'd be ok with a less obvious name, too</p>",
        "id": 249910842,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629320383
    },
    {
        "content": "<p>I also suspect we could tweak the semantics of this feature and ... nobody would notice :)</p>",
        "id": 249910949,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629320410
    },
    {
        "content": "<p>but that's dangerous :)</p>",
        "id": 249910989,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629320422
    },
    {
        "content": "<p>I think CLI options are sufficiently obscure that nobody really cares too much about naming; I originally only objected because I thought it didn't actually force warnings, but given that's what it does seems OK.</p>",
        "id": 249911040,
        "sender_full_name": "simulacrum",
        "timestamp": 1629320440
    },
    {
        "content": "<p>I'm trying to remember why we even thought we needed this</p>",
        "id": 249911054,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629320444
    },
    {
        "content": "<p>is it <code>#![allow(warnings)]</code></p>",
        "id": 249911162,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629320498
    },
    {
        "content": "<blockquote>\n<p>The problem is that these warnings, if they already exist, may be marked a #[allow] in various code bases</p>\n</blockquote>\n<p>This is the suggested motivation</p>",
        "id": 249911172,
        "sender_full_name": "simulacrum",
        "timestamp": 1629320502
    },
    {
        "content": "<p>or I guess that there were also some existing warnings that \"gained\" migrations</p>",
        "id": 249911189,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629320514
    },
    {
        "content": "<p>that people might have silenced</p>",
        "id": 249911196,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629320517
    },
    {
        "content": "<p>It's not clear to me that we shouldn't be passing --give-me-suggestions=&lt;lint group&gt; or something to rustc, so that the warnings are emitted in fix mode (potentially w/o cargo rendering them)</p>",
        "id": 249911324,
        "sender_full_name": "simulacrum",
        "timestamp": 1629320574
    },
    {
        "content": "<p>e.g., kinda like the rust-analyzer 'helps' work where it'll ask you to edit stuff inline, but you may never want to see it as a warning on the CLI</p>",
        "id": 249911371,
        "sender_full_name": "simulacrum",
        "timestamp": 1629320606
    },
    {
        "content": "<p>that kind of sounds like an alternate name for this feature?</p>",
        "id": 249911398,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629320624
    },
    {
        "content": "<p>I'm not sure what's the difference</p>",
        "id": 249911405,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629320628
    },
    {
        "content": "<p>or is that a real thing :)</p>",
        "id": 249911432,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629320641
    },
    {
        "content": "<p>No, slightly different behavior: it would, for example, only emit the lints as json-lines, so you don't get them rendered in normal usage</p>",
        "id": 249911498,
        "sender_full_name": "simulacrum",
        "timestamp": 1629320666
    },
    {
        "content": "<p>in any case, I agree that the goal of this was to kind of <em>circumvent</em> the lint level system</p>",
        "id": 249911503,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629320670
    },
    {
        "content": "<p>which is why I mildly object to trying to integrate it into that system :)</p>",
        "id": 249911515,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629320679
    },
    {
        "content": "<p>yes, but this option is only meant to be used by tooling -- I assume <code>cargo fix</code> takes json output too</p>",
        "id": 249911550,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629320703
    },
    {
        "content": "<p>Right, cargo always puts rustc in json mode</p>",
        "id": 249911568,
        "sender_full_name": "simulacrum",
        "timestamp": 1629320717
    },
    {
        "content": "<p>I just mean that what we kinda want it feels like is <code>--you-are-cargo-fix</code></p>",
        "id": 249911592,
        "sender_full_name": "simulacrum",
        "timestamp": 1629320738
    },
    {
        "content": "<p>and basically 'only stable for cargo', in some sense</p>",
        "id": 249911615,
        "sender_full_name": "simulacrum",
        "timestamp": 1629320753
    },
    {
        "content": "<p>that would be fine, but we don't have a way to do that</p>",
        "id": 249911666,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629320764
    },
    {
        "content": "<p>I guess I would be happy with a \"stable option\" that is documented as \"doing what cargo fix needs it to do\"</p>",
        "id": 249911704,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629320785
    },
    {
        "content": "<p>Sure, I mean, ultimately, maybe the question is moot and force-warn as-is seems good enough</p>",
        "id": 249911751,
        "sender_full_name": "simulacrum",
        "timestamp": 1629320815
    },
    {
        "content": "<p>I'm going to stop responding because I guess that at the end of the day I don't care too much, I just don't want to hold up the edition on this basis</p>",
        "id": 249911802,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629320851
    },
    {
        "content": "<p>So I'm ok with other people putting in effort so long as it gets done :P</p>",
        "id": 249911818,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629320862
    },
    {
        "content": "<p>I'm happy with status quo getting stabilized too.</p>",
        "id": 249911844,
        "sender_full_name": "simulacrum",
        "timestamp": 1629320880
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span> Why do you think I don't want what I think I want? ;)</p>",
        "id": 249922755,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1629328136
    },
    {
        "content": "<p>hehe</p>",
        "id": 249922780,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629328168
    },
    {
        "content": "<p>I want to hear why you think you want it</p>",
        "id": 249922788,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629328176
    },
    {
        "content": "<p>For clarification: are you saying I don't actually want that because of some unforseen consequence, or just that it doesn't seem needed and we have something that'll do for the edition?</p>",
        "id": 249922863,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1629328213
    },
    {
        "content": "<p>The former, probably. I think you are trying to determine whether dependencies may have \"future incompatibility\" problems, right?</p>",
        "id": 249923123,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629328509
    },
    {
        "content": "<p>But also: I think that I'd rather just discuss more extended use cases separately and not necessarily make this flag try to serve them, unless we think we can resolve that discussion quite quickly.</p>",
        "id": 249923139,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629328535
    },
    {
        "content": "<p>Future incompatibility or other kinds of warnings, yes.</p>",
        "id": 249925441,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1629330467
    },
    {
        "content": "<p>What do you think is the undesirable effect of making it an \"at least warn\"?</p>",
        "id": 249925504,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1629330498
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> I think what you <em>really want</em> is something more like what <span class=\"user-mention\" data-user-id=\"116083\">@pnkfelix</span>'s RFC described: to have cargo collect those warnings for you and present a \"tidy report\" that indicates which of your dependencies have unfixed future compatibility warnings, along with suggestions when you could perhaps do an upgrade</p>",
        "id": 249925914,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629330859
    },
    {
        "content": "<p>(and perhaps with the option to see the details)</p>",
        "id": 249925923,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629330870
    },
    {
        "content": "<p>for that purpose, force-warn as designed is probably pretty decent, actually</p>",
        "id": 249925944,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629330903
    },
    {
        "content": "<p>just FYI, as I mentioned in the issue, I tried to transition the future-incompatibility stuff to use force-warn, and it didn't work out. It ended up having some difficult edge cases, and ended up with more complexity than the current system.  I wouldn't consider that as a use case here, as I don't think it is a good approach.</p>",
        "id": 249926055,
        "sender_full_name": "Eric Huss",
        "timestamp": 1629330995
    },
    {
        "content": "<p>Alright. I do still think demoting a deny to a warn isn't ideal behavior of the new option, and I think that \"at least warn\" is still the behavior I would prefer, but I also don't want a last minute monkey wrench in the edition development.</p>",
        "id": 249930888,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1629335887
    },
    {
        "content": "<p>OK -- I think the next step then is to land the stabilization. Given the unclear state prior to the meeting, do we think it makes sense to restart FCP? I know Niko + Josh are aware of the new state, but I think <span class=\"user-mention\" data-user-id=\"125270\">@scottmcm</span> also checked their box with the old understanding that it was a cap on one side, not both, as is accurate.</p>",
        "id": 249931233,
        "sender_full_name": "simulacrum",
        "timestamp": 1629336333
    },
    {
        "content": "<p>I'm fine with the \"exactly warn\" semantics, though it might make sense to rename it to something longer if this is mostly just for cargo fix and might not have exactly the semantics we'd prefer.</p>",
        "id": 249938557,
        "sender_full_name": "scottmcm",
        "timestamp": 1629344751
    },
    {
        "content": "<p>(Honestly since it's a compiler flag, not something in code, I'm kinda in the \"whatever compiler/cargo/etc wants to maintain is fine by me\" camp.)</p>",
        "id": 249938622,
        "sender_full_name": "scottmcm",
        "timestamp": 1629344811
    },
    {
        "content": "<p>maybe <code>--force-warn-for-cargo-fix</code>  :)</p>",
        "id": 250005433,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629388119
    },
    {
        "content": "<p>Yeah.  Anything that's not taking up space that people might want to use for something else.  Then it's at worst just clutter.</p>",
        "id": 250027653,
        "sender_full_name": "scottmcm",
        "timestamp": 1629397845
    },
    {
        "content": "<p>(to be honest I’m with <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> here: I am surprised to hear that this will demote a deny to a warn; from the discussion, I had interpreted the proposal to be about min-lint levels. So from what I’m hearing here, I guess its both a min-lint-level and a cap-lints at the same time.)</p>",
        "id": 250030092,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629398945
    },
    {
        "content": "<p>but I also do not think my surprise at this is a reason to hold things up. I trust you all to select the semantics that makes sense for this.</p>",
        "id": 250030155,
        "sender_full_name": "pnkfelix",
        "timestamp": 1629398974
    },
    {
        "content": "<p>Is it logistically <em>hard</em> to make it a minimum and not a maximum?</p>",
        "id": 250030258,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1629399011
    },
    {
        "content": "<p>Ryan says it is, I haven't looked too much</p>",
        "id": 250030815,
        "sender_full_name": "simulacrum",
        "timestamp": 1629399252
    },
    {
        "content": "<p>but the code is pretty messy around this area, so I can definitely believe it</p>",
        "id": 250030839,
        "sender_full_name": "simulacrum",
        "timestamp": 1629399261
    },
    {
        "content": "<p>It feels like something that needs a motivated individual to look at the overall situation and try to find a model that people can understand better.  Right now it seems like it's grown a bunch of useful features, but with non-obvious interactions -- like what would cap-lints allow but force-warn something even mean?</p>",
        "id": 250034131,
        "sender_full_name": "scottmcm",
        "timestamp": 1629400291
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"125270\">scottmcm</span> <a href=\"#narrow/stream/213817-t-lang/topic/force-warn.20.2385616/near/250034131\">said</a>:</p>\n<blockquote>\n<p>It feels like something that needs a motivated individual to look at the overall situation and try to find a model that people can understand better.  Right now it seems like it's grown a bunch of useful features, but with non-obvious interactions -- like what would cap-lints allow but force-warn something even mean?</p>\n</blockquote>\n<p>I think this is an option, but I don't think we currently have time for that if we want to hit the 17 day timeline -- it seems like a larger task: design work, consensus, implementation</p>",
        "id": 250034771,
        "sender_full_name": "simulacrum",
        "timestamp": 1629400495
    },
    {
        "content": "<p>And the lint system is already sufficiently edge-case-y that I'm not sure a coherent small edit is possible without some pretty extensive thinking; it's why adding force-warn as-is without deltas is not really terrible.</p>",
        "id": 250034911,
        "sender_full_name": "simulacrum",
        "timestamp": 1629400542
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"116122\">simulacrum</span> <a href=\"#narrow/stream/213817-t-lang/topic/force-warn.20.2385616/near/250034771\">said</a>:</p>\n<blockquote>\n<p>it seems like a larger task: design work, consensus, implementation</p>\n</blockquote>\n<p>Completely agreed.  I didn't mean to suggest that that should in any way block the important \"this is what we need for cargo fix\" work.</p>",
        "id": 250044017,
        "sender_full_name": "scottmcm",
        "timestamp": 1629404484
    },
    {
        "content": "<p>definitely the motivation for this feature was like \"uhh, this problem is complicated, let's do something that lets cargo fix work and which is an easy layer atop other rules\"</p>",
        "id": 250159818,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1629486500
    }
]