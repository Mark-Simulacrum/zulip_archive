[
    {
        "content": "<p>Is the output from <code>Formatter::debug_struct</code> and similar considered stable? All I see in documentation is that derived implementations are not.</p>",
        "id": 210355568,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1600327390
    },
    {
        "content": "<p>Nope</p>",
        "id": 210357015,
        "sender_full_name": "lzutao",
        "timestamp": 1600328563
    },
    {
        "content": "<p>In general, debug presentation is considered unstable between rust version.</p>",
        "id": 210357096,
        "sender_full_name": "lzutao",
        "timestamp": 1600328640
    },
    {
        "content": "<p>Has there ever been a situation where the representation has actually changed? Setting aside additions like non-exhaustive structs, which would require a change to the definition itself.</p>",
        "id": 210358401,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1600329430
    },
    {
        "content": "<p>yeah, we changed the output for <code>MutexGuard</code> in the past (and I think we probably also changed a lot of other things, but that is the only PR I remember rn)</p>",
        "id": 210358943,
        "sender_full_name": "lcnr",
        "timestamp": 1600329771
    },
    {
        "content": "<p>Only reason I ask is because I have manually implemented <code>Debug</code> for a packed struct, and have just added a test for it to CI (for the purpose of test coverage). Given its composition amounts to two named integer fields in a named struct, I would presume that wouldn't really change. But I suppose if it does, it's trivial enough to fix.</p>",
        "id": 210359178,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1600329943
    },
    {
        "content": "<p>The pretty debug printing of structs was once changed to add trailing commas.</p>",
        "id": 210369932,
        "sender_full_name": "bjorn3",
        "timestamp": 1600337190
    },
    {
        "content": "<p>I don't recall it ever happening for integers, though I could imagine changes potentially happening at some point to show 134217728 as <code>134_217_728</code> or adaptively as <code>0x0800_0000</code> or something some day.  But you're not the only person to have written such a test, and I agree that this is a place I wouldn't feel bad about \"well, maybe I'll have to change this test in the future\".</p>\n<p>Aside: I think <code>Debug</code> and <code>Formatter</code> are the domain of <a class=\"stream\" data-stream-id=\"219381\" href=\"/#narrow/stream/219381-t-libs\">#t-libs</a> , not lang.</p>",
        "id": 210417719,
        "sender_full_name": "scottmcm",
        "timestamp": 1600361622
    },
    {
        "content": "<blockquote>\n<p>Aside: I think Debug and Formatter are the domain of #t-libs , not lang.</p>\n</blockquote>\n<p>well, you can argue that's <em>because</em> they're not stable ;)</p>",
        "id": 210417868,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600361690
    },
    {
        "content": "<p>as in, knowing whether this is <a class=\"stream\" data-stream-id=\"213817\" href=\"/#narrow/stream/213817-t-lang\">#t-lang</a> or <a class=\"stream\" data-stream-id=\"219381\" href=\"/#narrow/stream/219381-t-libs\">#t-libs</a> requires first knowing the answer to the question</p>",
        "id": 210417900,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600361708
    },
    {
        "content": "<p>No, it's always a libs concern imo. Not language surface area.</p>",
        "id": 210417976,
        "sender_full_name": "simulacrum",
        "timestamp": 1600361741
    },
    {
        "content": "<p>Yeah, with my lang hat on, I can't think of <em>any</em> reason why the impls of Debug and Formatter would be within lang team scope.</p>",
        "id": 210429026,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1600366596
    },
    {
        "content": "<p>Whoops, sorry about the wrong team :) Joys of the Rust community is you get an answer either way &lt;3</p>",
        "id": 210484634,
        "sender_full_name": "Jacob Pratt",
        "timestamp": 1600412376
    }
]