[
    {
        "content": "<p>Hello, may i ask a language design question here?</p>",
        "id": 180890767,
        "sender_full_name": "Charles Lew",
        "timestamp": 1573871038
    },
    {
        "content": "<p>I believe currently tuples are the only structural typing types in the language, and the API surface for tuples is especially lacking.</p>",
        "id": 180890807,
        "sender_full_name": "Charles Lew",
        "timestamp": 1573871049
    },
    {
        "content": "<p>Both 'creating' tuples from code and 'reflection' on the internal structure of tuples are not satisfying.</p>",
        "id": 180890831,
        "sender_full_name": "Charles Lew",
        "timestamp": 1573871128
    },
    {
        "content": "<p>The <code>Fn*</code> series traits have long been blocking on this affair settled, with the consideration of supporting variadic arguments.</p>",
        "id": 180890963,
        "sender_full_name": "Charles Lew",
        "timestamp": 1573871293
    },
    {
        "content": "<p>I've beening thinking, whether allowing <em>all</em> structural typing values as arguments of Fn* traits, and design some minimal reflection-like API for all structural typing values is feasible. This will unblock the <code>Fn*</code> traits stablization, i think.</p>",
        "id": 180891118,
        "sender_full_name": "Charles Lew",
        "timestamp": 1573871546
    }
]