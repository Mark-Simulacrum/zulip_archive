[
    {
        "content": "<p>Hey, so I found <a href=\"https://internals.rust-lang.org/t/allow-constructing-non-exhaustive-structs-using-default-default/13868\">https://internals.rust-lang.org/t/allow-constructing-non-exhaustive-structs-using-default-default/13868</a> , and seems like there's a lot of lang planning around record initialization syntax (and defaults), and there are a bunch of compat hazards.</p>\n<p>OTOH, I don't see any similar issue around <code>non_exhaustive</code> allowing record initialization: is there a holdup here? does an RFC need to be written? TBH I consider this a bug in the <code>non_exhaustive</code> feature.</p>\n<p>cc <span class=\"user-mention\" data-user-id=\"119031\">@Esteban KÃ¼ber</span></p>",
        "id": 278607974,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1649707058
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"132040\">@Manish Goregaokar</span> I believe that there are two holdups:</p>",
        "id": 278615263,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1649710463
    },
    {
        "content": "<p>First, this potentially interacts with defaults, and there are some complex interactions between defaults, initialization, and non_exhaustive, to the point where I think there needs to be a clear story for how those three fit together rather than trying to solve one of them in isolation. (We don't have to <em>fix</em> them all simultaneously, but the solution for one needs to make us feel confident in forwards-compatibility with what we may want to do with the others.)</p>",
        "id": 278615408,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1649710542
    },
    {
        "content": "<p>Second, the handling of non_exhaustive interacts with privacy, and there's disagreement about how initialization interacts with a struct that has private fields, and whether that should differ for code that has those fields visible vs code that doesn't. And in particular, that applies even for a struct that <em>currently</em> has only public fields, because in theory non_exhaustive could let you add a private field.</p>",
        "id": 278615526,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1649710585
    },
    {
        "content": "<p>I personally currently feel that you should never be able to write an initializer from scratch (as opposed to one with a base struct like <code>..Default::default()</code> or <code>..some_value</code>) for a struct that has private fields. I know that others disagree on that point, and feel that it should be possible to construct a struct that has private fields under some circumstances, such as if those private fields have defaults (which raises questions like \"who are those defaults visible to\").</p>",
        "id": 278616017,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1649710811
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"132040\">Manish Goregaokar</span> <a href=\"#narrow/stream/213817-t-lang/topic/record.20initialization.20syntax.20with.20non_exhaustive/near/278607974\">said</a>:</p>\n<blockquote>\n<p>OTOH, I don't see any similar issue around <code>non_exhaustive</code> allowing record initialization: is there a holdup here? does an RFC need to be written? TBH I consider this a bug in the <code>non_exhaustive</code> feature.</p>\n</blockquote>\n<p>I'm not sure exactly what you mean by \"record initialization\" here.  Is that something different from FRU?  Something specific to field-defaults?</p>",
        "id": 278637872,
        "sender_full_name": "scottmcm",
        "timestamp": 1649727169
    },
    {
        "content": "<p>no, i just mean FRU</p>",
        "id": 278714652,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1649779586
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"132040\">@Manish Goregaokar</span> <a href=\"https://github.com/rust-lang/lang-team/issues/143\">https://github.com/rust-lang/lang-team/issues/143</a> needs a new owner; interested?</p>",
        "id": 278724117,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1649784030
    },
    {
        "content": "<p>i don't think i have time to do it myself, unfortunately</p>",
        "id": 278725309,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1649784608
    },
    {
        "content": "<p>Do you know someone who might have the bandwidth to own it?</p>",
        "id": 278725355,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1649784630
    },
    {
        "content": "<p>i was def interested in working on a more scoped thing that's just non_exhaustive + FRU but this seems to be a larger design space</p>",
        "id": 278725356,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1649784630
    },
    {
        "content": "<p>unsure!</p>",
        "id": 278725380,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1649784642
    },
    {
        "content": "<p>i'll ask around but unlikely</p>",
        "id": 278725595,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1649784728
    }
]