[
    {
        "content": "<p>The <code>typeof</code> keyword has been reserved for a while: <a href=\"https://github.com/rust-lang/rust/issues/3228\">https://github.com/rust-lang/rust/issues/3228</a></p>\n<p>I wan't to help get this across the finish line - what would I have to do? Is it just an RFC blocking it?</p>",
        "id": 205617756,
        "sender_full_name": "chabing",
        "timestamp": 1596216452
    },
    {
        "content": "<p>I'd say it's more than that</p>",
        "id": 205619981,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596217636
    },
    {
        "content": "<p>also a bit of \"do we want this\" and some implementation issues around it</p>",
        "id": 205619991,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596217644
    },
    {
        "content": "<p>work on const generics probably helps iron some of those out, though</p>",
        "id": 205620001,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1596217652
    },
    {
        "content": "<p>I personally do want it. I don't know if there are objections from others.</p>",
        "id": 205620220,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1596217775
    },
    {
        "content": "<p>I think that once we have abstract type, we'll end up with a typeof-hack, and should thus probably just make it for real.</p>",
        "id": 205843280,
        "sender_full_name": "scottmcm",
        "timestamp": 1596486358
    },
    {
        "content": "<p>Or some version of \"my impl Foo is the same as that other library method's impl Foo\", at least.</p>",
        "id": 205843414,
        "sender_full_name": "scottmcm",
        "timestamp": 1596486417
    },
    {
        "content": "<p>So like how the generic matrix add output is the add output of the component type in a new matrix of the same size?</p>",
        "id": 205845626,
        "sender_full_name": "Lokathor",
        "timestamp": 1596487662
    }
]