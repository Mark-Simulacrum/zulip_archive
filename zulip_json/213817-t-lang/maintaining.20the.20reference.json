[
    {
        "content": "<p>So <span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> was raising with me the question of how best to maintain the reference. I definitely think that we should be taking a more active maintaince role here -- I'm curious <span class=\"user-group-mention\" data-user-group-id=\"1977\">@T-lang</span> to hear any thoughts about this. In my ideal world, we'd be doing more work to actively complete the reference as well as maintain it.</p>",
        "id": 194983636,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587585509
    },
    {
        "content": "<p>One thing I could see doing, for example, is making it part of the duty of membership in t-lang to review PRs</p>",
        "id": 194983676,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587585525
    },
    {
        "content": "<p>e.g., we could setup high-five</p>",
        "id": 194983683,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587585528
    },
    {
        "content": "<p>I certainly don't ind reviewing reference PRs.</p>",
        "id": 194984078,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1587585681
    },
    {
        "content": "<p>Seems like there are two separate issues as well: who will handle the current gaps between the reference and the Rust language, and who will take responsibility for adding <em>new</em> things to the reference when we change the language.</p>",
        "id": 194984132,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1587585716
    },
    {
        "content": "<p>Yes.</p>",
        "id": 194984179,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587585724
    },
    {
        "content": "<p>Yea, there are various degrees of things that would be helpful:</p>\n<ul>\n<li>People to review PRs.</li>\n<li>People responding to and triaging issues.</li>\n<li>People working on bugs, inaccuracies.</li>\n<li>People working on big projects (new content).</li>\n</ul>\n<p>I'd also like to talk about the permissions on the repo itself. Right now I can't merge my own changes, so I'm reluctant to even work on formatting fixes if nobody can approve them. Some options here:</p>\n<ul>\n<li>Add more people to the team, and give them write permissions.</li>\n<li>Remove branch protections so I can just merge my own small changes (not sure how people feel about that).</li>\n<li>Switch to homu (or bors-ng?), and just give all of t-lang approval (this might be my preferred approach, though my success in getting things like this done is poor).</li>\n</ul>",
        "id": 194997809,
        "sender_full_name": "Eric Huss",
        "timestamp": 1587593655
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> so I think we ought to create a wg-reference or something to manage the permissions, and give that group write access, and create a highfive. We can make a stream, too. The biggest thing to think about is who will \"lead\" the group, and how much active work we want to put into that.</p>",
        "id": 195001399,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1587596334
    },
    {
        "content": "<p>There's already a <code>reference</code> team at <a href=\"https://github.com/rust-lang/team/blob/master/teams/reference.toml\" title=\"https://github.com/rust-lang/team/blob/master/teams/reference.toml\">https://github.com/rust-lang/team/blob/master/teams/reference.toml</a>, and is a \"subteam\" of lang.  I'm uncertain how this is currently connected to github permissions (I'm under the impression it is not connected).  I'm also unsure what \"subteam\" actually means (like does it automatically give lang members r+ rights if we had bors set up?).</p>",
        "id": 195002153,
        "sender_full_name": "Eric Huss",
        "timestamp": 1587596861
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> yes, that does not appear to be sync'd with github, we should fix that. The general procedure these days is to try and avoid giving access rights to individuals, only to teams. I suspect we want to give write access to both lang + this group</p>",
        "id": 195433580,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588001158
    },
    {
        "content": "<p>I'm cc'ing <span class=\"user-mention\" data-user-id=\"228912\">@James Munns</span> and <span class=\"user-mention\" data-user-id=\"215333\">@Florian Gilcher</span> into this conversation, as it's relevant to Sealed Rust</p>",
        "id": 195608757,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1588099427
    },
    {
        "content": "<p>when it comes to MIR semantics and unsafe code concerns, I could also help with reference maintenance</p>",
        "id": 195803446,
        "sender_full_name": "RalfJ",
        "timestamp": 1588229516
    }
]