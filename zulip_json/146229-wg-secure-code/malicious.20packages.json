[
    {
        "content": "<p>interesting story here <a href=\"https://blog.reversinglabs.com/blog/mining-for-malicious-ruby-gems\" title=\"https://blog.reversinglabs.com/blog/mining-for-malicious-ruby-gems\">https://blog.reversinglabs.com/blog/mining-for-malicious-ruby-gems</a></p>",
        "id": 194548624,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1587221934
    },
    {
        "content": "<p>Curious. With how accessible large-scale <a href=\"http://crates.io\" title=\"http://crates.io\">crates.io</a> analysis turned out to be, it should not be hard to build similar detection ourselves.</p>",
        "id": 194549855,
        "sender_full_name": "Shnatsel",
        "timestamp": 1587223482
    },
    {
        "content": "<p>Making this particularly interesting is the frequent discrepancy between executable name and <a href=\"http://crates.io\" title=\"http://crates.io\">crates.io</a> name for binaries. For example, the correct way to install <code>fd</code> is <code>cargo install fd-find</code>, and for <code>rg</code> it's <code>cargo install ripgrep</code>. This is just asking for malicious squatting.</p>",
        "id": 194550050,
        "sender_full_name": "Shnatsel",
        "timestamp": 1587223687
    },
    {
        "content": "<p>also, discrepancy between the code in the referenced repository, and the actual tarball downloaded by cargo</p>",
        "id": 194585352,
        "sender_full_name": "RalfJ",
        "timestamp": 1587283706
    },
    {
        "content": "<p>I've long wondered if there's a good way to automatically check the <a href=\"http://crates.io\" title=\"http://crates.io\">crates.io</a> tarball against a tag on the git side, maybe award some kind of badge on the websites when they match or so</p>",
        "id": 194585370,
        "sender_full_name": "RalfJ",
        "timestamp": 1587283748
    },
    {
        "content": "<p>right now I wouldnt even know how to get hold of that tarball easily. when I want to check crate sources I click the \"repo\" link on <a href=\"http://crates.io\" title=\"http://crates.io\">crates.io</a> and hope they match...</p>",
        "id": 194585382,
        "sender_full_name": "RalfJ",
        "timestamp": 1587283785
    },
    {
        "content": "<p>having a \"download\" link might be a start</p>",
        "id": 194585419,
        "sender_full_name": "RalfJ",
        "timestamp": 1587283808
    },
    {
        "content": "<p>Another interesting thing would be if the original and normalized <code>Cargo.toml</code> are equivalent.</p>",
        "id": 194586222,
        "sender_full_name": "bjorn3",
        "timestamp": 1587285312
    },
    {
        "content": "<p>What do you mean by \"normalized <code>Cargo.toml</code>\" ?</p>",
        "id": 194598670,
        "sender_full_name": "Shnatsel",
        "timestamp": 1587304266
    },
    {
        "content": "<p>In the <code>.crate</code> file, there is a file <code>Cargo.toml.orig</code>, which is the original <code>Cargo.toml</code> file, but also a <code>Cargo.toml</code> file that is derived from the original by normalizing it. It starts with:</p>\n<div class=\"codehilite\"><pre><span></span># THIS FILE IS AUTOMATICALLY GENERATED BY CARGO\n#\n# When uploading crates to the registry Cargo will automatically\n# &quot;normalize&quot; Cargo.toml files for maximal compatibility\n# with all versions of Cargo and also rewrite `path` dependencies\n# to registry (e.g., crates.io) dependencies\n#\n# If you believe there&#39;s an error in this file please file an\n# issue against the rust-lang/cargo repository. If you&#39;re\n# editing this file be aware that the upstream Cargo.toml\n# will likely look very different (and much more reasonable)\n</pre></div>",
        "id": 194598897,
        "sender_full_name": "bjorn3",
        "timestamp": 1587304591
    }
]