[
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> and maybe others:</p>\n<p>I have a question. I am working on <a href=\"https://github.com/salsa-rs/salsa\" target=\"_blank\" title=\"https://github.com/salsa-rs/salsa\">salsa</a> some in my spare time, which is a re-implementation of the incremental infrastructure from the compiler. It uses some read-write locks and a bit of error-prone logic that I've already gotten wrong a few times -- basically I have to reason about \"all possible interleavings\" which is hard to do. After the latest bug, I wanted to try and get more systematic in my approach. I can try to work this out on pen+paper (and probably will), but I was wondering if there is a nice \"lightweight\" tool that would let me try to encode the states I think and help me to reason about the interleavings. It feels like something that I ought to be able to use... I don't know ... Coq for or something. =)</p>",
        "id": 136720077,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1540832656
    },
    {
        "content": "<p>I put this in this area because this feels like the sort of thing secure code might also want to do...</p>",
        "id": 136720090,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1540832676
    },
    {
        "content": "<p>...I know for Rayon I've often wanted to do similar things, though in that case I am reasoning about unsafe code, which makes things all the more fun.</p>",
        "id": 136720101,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1540832689
    },
    {
        "content": "<p>oh hey I see a similar topic <code>correctness proofs</code>...</p>",
        "id": 136720120,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1540832710
    },
    {
        "content": "<p>if you ask me I'll tell you you don't want to think about interleavings. instead you want to think about ownership, in the sense of separation logic. :D</p>",
        "id": 136725916,
        "sender_full_name": "RalfJ",
        "timestamp": 1540838063
    },
    {
        "content": "<p>reasoning about concurrent code by looking at interleavings is like reasoning about sequential code by considering assembly-level details like registers. it works, if you are willing to suffer, but you really ought to work with a higher-level abstraction if you can (and most of the time, you can).</p>",
        "id": 136725992,
        "sender_full_name": "RalfJ",
        "timestamp": 1540838149
    },
    {
        "content": "<p>but unfortunately I don't know much about tools for doing this kind of reasoning. If you want to do it in Coq, sure, there are some frameworks you can use (and I am author of one of them), but that's pretty complex stuff and takes a long time to get into</p>",
        "id": 136726109,
        "sender_full_name": "RalfJ",
        "timestamp": 1540838269
    },
    {
        "content": "<p>there are some tools but I am not deeply familiar with any of them</p>",
        "id": 136726156,
        "sender_full_name": "RalfJ",
        "timestamp": 1540838286
    },
    {
        "content": "<p>but what about asking in the wg-verification gitter at <a href=\"https://gitter.im/rust-lang/wg-verification\" target=\"_blank\" title=\"https://gitter.im/rust-lang/wg-verification\">https://gitter.im/rust-lang/wg-verification</a> ? some of these tools' authors are there :P</p>",
        "id": 136726173,
        "sender_full_name": "RalfJ",
        "timestamp": 1540838318
    },
    {
        "content": "<blockquote>\n<p>if you ask me I'll tell you you don't want to think about interleavings. instead you want to think about ownership, in the sense of separation logic. :D</p>\n</blockquote>\n<p>You're not wrong about this, and it is kind of what I've been doing -- I basically want to show that the \"ownership model\" I have in my head is correctly implemented, I guess.. I have to think about it. To be honest talking about \"tools\" is the wrong thing, I should start by just writing in English the protocol which I'm sure will help 100x</p>",
        "id": 136727232,
        "sender_full_name": "nikomatsakis",
        "timestamp": 1540839336
    },
    {
        "content": "<p>bonus points if you use separation logic instead of English :)</p>",
        "id": 136728648,
        "sender_full_name": "RalfJ",
        "timestamp": 1540840740
    }
]