[
    {
        "content": "<p>I hope this is the right place for this question.</p>\n<p><a href=\"https://users.rust-lang.org/t/best-practices-fault-injection-resistant-rust-code/73378\">https://users.rust-lang.org/t/best-practices-fault-injection-resistant-rust-code/73378</a></p>",
        "id": 276449615,
        "sender_full_name": "Nihal Pasham",
        "timestamp": 1648114099
    },
    {
        "content": "<p>That's a really tricky topic, particularly if you're concerned with double fault injection</p>",
        "id": 276625436,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1648218040
    },
    {
        "content": "<p>as the typical advice is \"add another check to ensure the original operation was performed correctly\" which can be bypassed in the event of a double fault</p>",
        "id": 276625498,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1648218078
    },
    {
        "content": "<p>which was common advice for deterministic signature algorithms</p>",
        "id": 276625543,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1648218104
    },
    {
        "content": "<p>the best advice I have is to avoid deterministic algorithms in settings where fault injection is a threat</p>",
        "id": 276625662,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1648218153
    },
    {
        "content": "<p>an approach sometimes referred to as \"added entropy\"</p>",
        "id": 276625821,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1648218234
    },
    {
        "content": "<p>that won't help avoid bypassing signature verification, but it will help prevent leaking the private key if you're generating signatures</p>",
        "id": 276625990,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1648218306
    },
    {
        "content": "<p>see also: random blinding, which is nice in a belt-and-suspenders capacity. it generally fails if it's the only line of defense</p>",
        "id": 276626069,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1648218344
    },
    {
        "content": "<p>beyond those sorts of things, unfortunately a lot of the countermeasures are covered by patents <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span></p>",
        "id": 276626143,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1648218366
    },
    {
        "content": "<p>off topic - sled has a really good article about using the fail crate (<a href=\"http://docs.rs/fail\">docs.rs/fail</a>) at <a href=\"https://sled.rs/errors\">https://sled.rs/errors</a></p>",
        "id": 276637010,
        "sender_full_name": "pinkforest(she/her)",
        "timestamp": 1648222680
    },
    {
        "content": "<p>it's not really what you are looking or a magical thing but it does help exotic bugs jumps out to test a lot of difficult to test scenarios out and make sure they are handled correctly</p>",
        "id": 276637387,
        "sender_full_name": "pinkforest(she/her)",
        "timestamp": 1648222842
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"132721\">Tony Arcieri</span> <a href=\"#narrow/stream/146229-wg-secure-code/topic/Best.20practices.20-.20fault.20injection.20resistant.20rust-code/near/276625662\">said</a>:</p>\n<blockquote>\n<p>the best advice I have is to avoid deterministic algorithms in settings where fault injection is a threat</p>\n</blockquote>\n<p>Makes sense.  I've leveraged things like</p>\n<div class=\"codehilite\"><pre><span></span><code>- adding extra random delays to reduce temporal determinism\n- adding sequences of redundant but dependent checks via `inline-assembly` to bypass compiler optimizations.\n</code></pre></div>\n\n<p>This solves some of my concerns but I don't think its scalable (owing to the problem being a moving target with so many components).</p>",
        "id": 276994713,
        "sender_full_name": "Nihal Pasham",
        "timestamp": 1648555559
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"132721\">Tony Arcieri</span> <a href=\"#narrow/stream/146229-wg-secure-code/topic/Best.20practices.20-.20fault.20injection.20resistant.20rust-code/near/276626069\">said</a>:</p>\n<blockquote>\n<p>see also: random blinding, which is nice in a belt-and-suspenders capacity. it generally fails if it's the only line of defense</p>\n</blockquote>\n<p>this sounds interesting.</p>",
        "id": 276994862,
        "sender_full_name": "Nihal Pasham",
        "timestamp": 1648555620
    }
]