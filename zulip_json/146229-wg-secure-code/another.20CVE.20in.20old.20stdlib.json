[
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/issues/53566\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/53566\">https://github.com/rust-lang/rust/issues/53566</a> - this is yet another case of a standard library bug that should have gotten a CVE, but didn't. I've notified the security team and they replied (again) that they don't support old Rusts, and do not intend to do anything about it. So I've applied for a CVE myself.<br>\nIt affects 1.18.0 onwards and was fixed just recently, in 1.30.0. The same attack vector causes a stack overflow on 1.17.0.</p>",
        "id": 159289286,
        "sender_full_name": "Shnatsel",
        "timestamp": 1551038441
    },
    {
        "content": "<p>Seems like a good arguments for getting these into rustsec. Where did we land on that <span class=\"user-mention\" data-user-id=\"132721\">@Tony Arcieri</span> ?</p>",
        "id": 159289344,
        "sender_full_name": "Alex Gaynor",
        "timestamp": 1551038554
    },
    {
        "content": "<p>derp guess I haven't been keeping up here</p>",
        "id": 159298693,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1551045430
    },
    {
        "content": "<p>uhh I think we're mostly at consensus that it's a reasonable enough idea, and you cataloguing the known ones in a GH issue and... that's it</p>",
        "id": 159298705,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1551045459
    },
    {
        "content": "<p>next steps are how to represent them, whether we should distinguish e.g. std vs rustc vs (core? alloc?)</p>",
        "id": 159298755,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1551045486
    },
    {
        "content": "<p>and what the schema should be</p>",
        "id": 159298759,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1551045505
    },
    {
        "content": "<p>Fortunately a binary scanner is dead simple because rustc already encodes its version and LLVM version in everything it builds. UNfortunately, there is no way to tell if a particular function is used or not in an optimized binary, so we'll be showing false positives most of the time, by design. Also, linux distros cherry-pick fixes to earlier versions sometimes, further confusing everything.</p>",
        "id": 159299305,
        "sender_full_name": "Shnatsel",
        "timestamp": 1551046394
    }
]