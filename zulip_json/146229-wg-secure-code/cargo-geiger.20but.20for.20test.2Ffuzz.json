[
    {
        "content": "<p>Howdy; I'm trying to find a tool like geiger but for testing/fuzzing. Seems like something that should exist, but I'm not finding it. I would imagine this as, say, something that runs tests on and collects coverage data for all dependencies with given features and checks for the presence of fuzzers (not sure how one would evaluate this effectively, esp. without corpus; maybe fuzzer code size/lib code size ratio?). I found <a href=\"https://github.com/Relrin/cargo-test-all\">cargo-test-all</a> but it's not quite what I'm looking for and it's completely unmaintained.</p>\n<p>Is this something that the working group has considered making? I'd pursue this on my own, but I'm just one person with a 50-hour work week and not a whole lot of cargo knowledge <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 271723704,
        "sender_full_name": "Addison Crump",
        "timestamp": 1644721558
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"376571\">@Addison Crump</span> <code>cargo fuzz coverage</code> provides fuzzing coverage information. Sadly <code>cargo fuzz</code> puts the corpus directory in the <code>.gitignore</code> by default, so the fuzzing results don't get checked in and every fuzzing session ends up being run from scratch, so coverage is 0 until you actually run the fuzzer (and then it's worse than if we started from a corpus of valid files).</p>\n<p>The implementation doesn't sound terribly complex; just get the list of all the dependencies using <code>cargo metadata</code>, download them from <a href=\"http://crates.io\">crates.io</a> using <code>ureq</code> (you don't need a library, the paths are very predictable) and then run <code>cargo test</code> with the <a href=\"https://blog.rust-lang.org/inside-rust/2020/11/12/source-based-code-coverage.html\">shiny new source-based coverage enabled</a>. This sounds like it would be a 50-line shell script, ignoring the aggregation/post-processing of the results.</p>",
        "id": 272879319,
        "sender_full_name": "Shnatsel",
        "timestamp": 1645571019
    }
]