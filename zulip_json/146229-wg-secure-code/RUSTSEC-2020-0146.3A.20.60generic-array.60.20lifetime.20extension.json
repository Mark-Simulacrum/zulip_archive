[
    {
        "content": "<p>Oof, this one is gonna be \"fun\": <a href=\"https://rustsec.org/advisories/RUSTSEC-2020-0146.html\">https://rustsec.org/advisories/RUSTSEC-2020-0146.html</a></p>",
        "id": 228241279,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1614609678
    },
    {
        "content": "<p>namely because of <a href=\"https://crates.io/crates/as-slice\">https://crates.io/crates/as-slice</a></p>",
        "id": 228241365,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1614609705
    },
    {
        "content": "<p><a href=\"https://github.com/japaric/as-slice/blob/master/Cargo.toml#L12-L15\">https://github.com/japaric/as-slice/blob/master/Cargo.toml#L12-L15</a></p>",
        "id": 228241462,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1614609728
    },
    {
        "content": "<p><code>as-slice</code> is used by <code>heapless</code> which is used by... pretty much the entire Rust embedded ecosystem</p>",
        "id": 228241512,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1614609748
    },
    {
        "content": "<p>also RUSTSEC-2020-0145</p>",
        "id": 228242119,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1614609951
    },
    {
        "content": "<p>cortex-m 0.7 no longer pulls in as-slice at least</p>",
        "id": 228242665,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1614610137
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"132721\">Tony Arcieri</span> <a href=\"#narrow/stream/146229-wg-secure-code/topic/RUSTSEC-2020-0146.3A.20.60generic-array.60.20lifetime.20extension/near/228241279\">said</a>:</p>\n<blockquote>\n<p>Oof, this one is gonna be \"fun\": <a href=\"https://rustsec.org/advisories/RUSTSEC-2020-0146.html\">https://rustsec.org/advisories/RUSTSEC-2020-0146.html</a></p>\n</blockquote>\n<p>no kidding <a href=\"https://github.com/rust-lang/docs.rs/runs/2006983845?check_suite_focus=true\">https://github.com/rust-lang/docs.rs/runs/2006983845?check_suite_focus=true</a></p>",
        "id": 228291024,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614626760
    },
    {
        "content": "<p>is there a <code>cargo audit --summary</code> option? I want to see just the critical warnings and not the dependency tree</p>",
        "id": 228291449,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614626907
    },
    {
        "content": "<p>nope, although that sounds like an interesting suggestion</p>",
        "id": 228308880,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1614633935
    },
    {
        "content": "<p>This is an area where I feel conflicted about the infectious nature of audits. Yes, the root problem is real and serious, but it doesn't mean every use was actually hitting that problem.</p>",
        "id": 228317783,
        "sender_full_name": "cuviper",
        "timestamp": 1614637590
    },
    {
        "content": "<p>It's possible to use the old <code>arr!</code> in a sound way, or you might not have been using the macro at all.</p>",
        "id": 228317996,
        "sender_full_name": "cuviper",
        "timestamp": 1614637684
    },
    {
        "content": "<p>personally I don't mind, the one that annoys me is build-dependencies</p>",
        "id": 228318689,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614637983
    },
    {
        "content": "<p>I know exactly the inputs and outputs to the script, if it hasn't broken yet it's unlikely to break</p>",
        "id": 228318737,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614638000
    },
    {
        "content": "<p>It seems like the \"boundary\" of advisories could be shrunk from the crate level to a specific API level by having some logic to analyze crates depending on the vulnerable one to see if they actually use the bad bit</p>",
        "id": 228410660,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1614692511
    },
    {
        "content": "<blockquote>\n<p>It seems like the \"boundary\" of advisories could be shrunk from the crate level to a specific API level by having some logic to analyze crates depending on the vulnerable one to see if they actually use the bad bit</p>\n</blockquote>\n<p>This is certainly true (the advisory format contains information for this sort of checking), but it's worth noting there are cases where the list is nonexhaustive.</p>\n<p>concretely, I remember when I filed the issues around a few ncurses wrappers, i found 4 or 5 serious issues in around 15 minutes. at that point i ended up deciding i didn't have time for it, and just filed the ones that were there, noting that there were very likely more and that some interested party should do a more thorough audit.</p>\n<p>i guess in an ideal world i'd have done that audit, but given that the maintainer was uninterested in fixing the issues, not a lot of motivation to do so...</p>",
        "id": 228412225,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1614693133
    },
    {
        "content": "<p>there could be an <code>exhaustive = true</code> field in the advisory maybe</p>",
        "id": 228416165,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614694666
    },
    {
        "content": "<p>I'm not convinced this is <em>worth</em> doing btw, but it does sound really cool <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 228416259,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1614694690
    },
    {
        "content": "<p>Sure yeah it definitely wouldn't always be possible but I think the scope of an issue is often pretty contained</p>",
        "id": 228420367,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1614696077
    },
    {
        "content": "<p>particularly for a case like this, where I'd expect almost all of the reasons you end up with generic-array in your dep graph are contexts that don't use the array macro at all</p>",
        "id": 228420467,
        "sender_full_name": "Steven Fackler",
        "timestamp": 1614696119
    },
    {
        "content": "<p>yeah, i actually think almost every case <em>is</em> amenable to that kind of checking, i only brought it up so the cases where it's not aren't forgotten.</p>",
        "id": 228425249,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1614697763
    },
    {
        "content": "<p>we've talked about false positive elimination for many years: <a href=\"https://github.com/RustSec/cargo-audit/issues/21\">https://github.com/RustSec/cargo-audit/issues/21</a></p>",
        "id": 228437403,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1614701848
    },
    {
        "content": "<p>see also this Zulip stream: <a href=\"#narrow/stream/146229-wg-secure-code/topic/Paper.3A.20Pr.C3.A4zi.3A.20Call-based.20Dependency.20Networks\">https://rust-lang.zulipchat.com/#narrow/stream/146229-wg-secure-code/topic/Paper.3A.20Pr.C3.A4zi.3A.20Call-based.20Dependency.20Networks</a></p>",
        "id": 228437649,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1614701904
    },
    {
        "content": "<p>we may have a practical path towards doing so soon</p>",
        "id": 228437685,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1614701911
    },
    {
        "content": "<p>we track the paths to affected functions in some advisories (although they're not yet validated)</p>",
        "id": 228437861,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1614701945
    },
    {
        "content": "<p>This advisory got switched to a warning instead of a hard error: <a href=\"https://github.com/RustSec/advisory-db/pull/788\">https://github.com/RustSec/advisory-db/pull/788</a><br>\nI didn't see any rationale provided, so I've opened a PR to revert it: <a href=\"https://github.com/RustSec/advisory-db/pull/792\">https://github.com/RustSec/advisory-db/pull/792</a><br>\nInput on whether this should be a warning or an error is welcome.</p>",
        "id": 228438561,
        "sender_full_name": "Shnatsel",
        "timestamp": 1614702137
    },
    {
        "content": "<p>The author of the PR making this a warning doesn't seem to have a strong preference either way, so I've just reverted it back to an error.</p>",
        "id": 228446978,
        "sender_full_name": "Shnatsel",
        "timestamp": 1614705075
    },
    {
        "content": "<p>This is not the first time people get confused by the <code>informational=\"unsound\"</code> field, we really need to document it better</p>",
        "id": 228451558,
        "sender_full_name": "Shnatsel",
        "timestamp": 1614706553
    },
    {
        "content": "<p>PRs accepted <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 228452562,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1614706889
    }
]