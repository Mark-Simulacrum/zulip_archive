[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"132721\">@Tony Arcieri</span> can you do an absicca release and then bump the absiscca and failure versions in cargo-audit? I think that'll reduce the number of copies of syn/quote/proc-macro2 that get compiled, which should help with build speed</p>",
        "id": 178039849,
        "sender_full_name": "Alex Gaynor",
        "timestamp": 1570976326
    },
    {
        "content": "<p>I'm happy to do the PRs for cargo-audit, but obviously I can't do an absicca release</p>",
        "id": 178039857,
        "sender_full_name": "Alex Gaynor",
        "timestamp": 1570976349
    },
    {
        "content": "<p>yeah I've been planning on it. there are a few other things I want to get in there</p>",
        "id": 178039859,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1570976352
    },
    {
        "content": "<p>just been updating all of my other pre-1.0 custom derive stuff</p>",
        "id": 178039867,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1570976376
    },
    {
        "content": "<p>Just realized we also need gumpdrop-derive, which doesn't have a release that uses the 1.0 family. Left a comment asking them for it.</p>",
        "id": 178039932,
        "sender_full_name": "Alex Gaynor",
        "timestamp": 1570976482
    },
    {
        "content": "<p>yeah that just got a PR to bump it</p>",
        "id": 178040074,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1570976758
    },
    {
        "content": "<p>which I've also been waiting on</p>",
        "id": 178040114,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1570976765
    },
    {
        "content": "<p>The PR was merged, so I left a comment asking about a release.</p>",
        "id": 178040138,
        "sender_full_name": "Alex Gaynor",
        "timestamp": 1570976850
    },
    {
        "content": "<p>gumdrop release out!</p>",
        "id": 178045350,
        "sender_full_name": "Alex Gaynor",
        "timestamp": 1570985412
    },
    {
        "content": "<p>woop</p>",
        "id": 178045880,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1570986243
    },
    {
        "content": "<p>ok, this gets rid of all of the pre-1.0 proc macro crates: <a href=\"https://github.com/iqlusioninc/abscissa/pull/141\" target=\"_blank\" title=\"https://github.com/iqlusioninc/abscissa/pull/141\">https://github.com/iqlusioninc/abscissa/pull/141</a></p>",
        "id": 178050092,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1570992725
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/U3PPpohurNZlinG-FbkMbEP4/Screenshot-2019-10-13-at-3.28.58-PM.png\" target=\"_blank\" title=\"Screenshot-2019-10-13-at-3.28.58-PM.png\">Screenshot-2019-10-13-at-3.28.58-PM.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/U3PPpohurNZlinG-FbkMbEP4/Screenshot-2019-10-13-at-3.28.58-PM.png\" target=\"_blank\" title=\"Screenshot-2019-10-13-at-3.28.58-PM.png\"><img src=\"/user_uploads/4715/U3PPpohurNZlinG-FbkMbEP4/Screenshot-2019-10-13-at-3.28.58-PM.png\"></a></div><p>I did a <code>cargo +nightly build -Z timings --release</code> on cargo-audit <code>master</code>. That's the build graph, filtered to only crates that took &gt;15 seconds to compile. It looks like getting down to only a single version of the proc macro crates will help a lot, but there's some other crates that still take a ton of time to compile.</p>",
        "id": 178051501,
        "sender_full_name": "Alex Gaynor",
        "timestamp": 1570995011
    },
    {
        "content": "<p>heh, wow @ <code>darling_core</code> taking longer than <code>serde_derive</code></p>",
        "id": 178051837,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1570995660
    },
    {
        "content": "<p>wonder why</p>",
        "id": 178051845,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1570995666
    },
    {
        "content": "<p>I feel like both of them are at 10x what I'd like :-)</p>",
        "id": 178051901,
        "sender_full_name": "Alex Gaynor",
        "timestamp": 1570995741
    },
    {
        "content": "<p><a href=\"https://github.com/RustSec/cargo-audit/pull/154\" target=\"_blank\" title=\"https://github.com/RustSec/cargo-audit/pull/154\">https://github.com/RustSec/cargo-audit/pull/154</a></p>",
        "id": 178052971,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1570997481
    },
    {
        "content": "<p>ok, v0.10.0 is out w\\ the upgrades <a href=\"https://crates.io/crates/cargo-audit\" target=\"_blank\" title=\"https://crates.io/crates/cargo-audit\">https://crates.io/crates/cargo-audit</a></p>",
        "id": 178062188,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1571013501
    },
    {
        "content": "<p>At long last I've turned <a href=\"https://github.com/Shnatsel/rust-audit\" target=\"_blank\" title=\"https://github.com/Shnatsel/rust-audit\">https://github.com/Shnatsel/rust-audit</a> into an RFC against Cargo: <a href=\"https://github.com/rust-lang/rfcs/pull/2801\" target=\"_blank\" title=\"https://github.com/rust-lang/rfcs/pull/2801\">https://github.com/rust-lang/rfcs/pull/2801</a></p>",
        "id": 179755498,
        "sender_full_name": "Shnatsel",
        "timestamp": 1572802035
    },
    {
        "content": "<p>Cool! I left a few comments</p>",
        "id": 179756114,
        "sender_full_name": "Alex Gaynor",
        "timestamp": 1572803125
    },
    {
        "content": "<p>Great comments, thanks a lot!</p>",
        "id": 179756447,
        "sender_full_name": "Shnatsel",
        "timestamp": 1572803651
    },
    {
        "content": "<p>Hmm, I wonder if I can abuse my access at Google to get Go developers to chime in on what has and hasn't worked for them with this metadata</p>",
        "id": 179756460,
        "sender_full_name": "Shnatsel",
        "timestamp": 1572803694
    },
    {
        "content": "<p>awesome</p>",
        "id": 179757293,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1572804872
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127617\">@Shnatsel</span> when I was at Square we had a tool like this for Ruby applications. It found all Gemfile.lock files on production servers/containers, audited them against RubySec, and then auto-filed VULN tickets against the app owners</p>",
        "id": 179760856,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1572810932
    },
    {
        "content": "<p>tickets also auto-closed when the apps were updated</p>",
        "id": 179760915,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1572810965
    },
    {
        "content": "<p>I am not familiar with the Ruby software distribution model. Is that file necessary to run the program?</p>",
        "id": 179761046,
        "sender_full_name": "Shnatsel",
        "timestamp": 1572811156
    },
    {
        "content": "<p>it's the most common way of managing Ruby apps. not completely necessary but definitely the most popular</p>",
        "id": 179761147,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1572811306
    },
    {
        "content": "<p>So it was a distinct file you had to ship, but it was typical for it to be shipped. Cool! Could you add this as a comment on the PR?</p>",
        "id": 179761209,
        "sender_full_name": "Shnatsel",
        "timestamp": 1572811365
    },
    {
        "content": "<p>If Go had a vuln db, and I had a lot more free time, I'd probably write something at $work that scanned docker images for binaries with embedded go.mod info, did a vuln check on them, and then filed tickets if either a) that image was :latest, or b) there was anything in the container orchestration system using that image.</p>",
        "id": 179761242,
        "sender_full_name": "Alex Gaynor",
        "timestamp": 1572811407
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127617\">@Shnatsel</span> yeah sure. you can imagine it sort of like a runtime Cargo.lock</p>",
        "id": 179761434,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1572811695
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"132721\">@Tony Arcieri</span> could you chime in on the reproducible builds angle in <a href=\"https://github.com/rust-lang/rfcs/pull/2801\" target=\"_blank\" title=\"https://github.com/rust-lang/rfcs/pull/2801\">https://github.com/rust-lang/rfcs/pull/2801</a> ?</p>",
        "id": 179767129,
        "sender_full_name": "Shnatsel",
        "timestamp": 1572821656
    },
    {
        "content": "<p><code>Cargo.lock</code> should be deterministic for a given toolchain and index state, I think...</p>",
        "id": 179767158,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1572821749
    },
    {
        "content": "<p>I'm playing around with trying to make a reproducible build tool based on Rustwide</p>",
        "id": 179767207,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1572821785
    },
    {
        "content": "<p>Eh, I don't think I can vouch for Cargo.lock having stable sort order</p>",
        "id": 179767208,
        "sender_full_name": "Shnatsel",
        "timestamp": 1572821791
    },
    {
        "content": "<p>For reproducible builds this seems to be both a blessing (the info is right there in the binary) and a curse (the info itself is hard to make reproducible) - and there are concerns around the crate coming from one registry or another and that evaluating to different metadata</p>",
        "id": 179767225,
        "sender_full_name": "Shnatsel",
        "timestamp": 1572821851
    },
    {
        "content": "<p>I mean, if anything...</p>",
        "id": 179767229,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1572821863
    },
    {
        "content": "<p>reproducing a build needs Cargo.lock</p>",
        "id": 179767230,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1572821870
    },
    {
        "content": "<p>you can't reproduce a build without it</p>",
        "id": 179767231,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1572821878
    },
    {
        "content": "<p>as an input</p>",
        "id": 179767271,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1572821887
    },
    {
        "content": "<p>so if anything it's a helpful forensic artifact for reproducing builds! <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span></p>",
        "id": 179767277,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1572821939
    },
    {
        "content": "<p>Some are calling for including <code>(crate-name, version, hash)</code> only without the source URL of any kind. Do you think including registry URL or git repo url is helpful, or hinders reproducibility?</p>",
        "id": 179767346,
        "sender_full_name": "Shnatsel",
        "timestamp": 1572822059
    },
    {
        "content": "<p>the git repo stuff should allow you to reproduce the build still, if you have access to the repo and the relevant commits are still there</p>",
        "id": 179767428,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1572822229
    },
    {
        "content": "<p><code>Cargo.lock</code> encodes all of the commit hashes for each package</p>",
        "id": 179767449,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1572822243
    },
    {
        "content": "<p>I guess this is about commit hash only vs repo url as well</p>",
        "id": 179767487,
        "sender_full_name": "Shnatsel",
        "timestamp": 1572822269
    },
    {
        "content": "<p>I think they might be a bit... entangled</p>",
        "id": 179767503,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1572822310
    },
    {
        "content": "<p>uuh, repo url is not included in the hash</p>",
        "id": 179767615,
        "sender_full_name": "Shnatsel",
        "timestamp": 1572822489
    },
    {
        "content": "<p>here's an example:</p>",
        "id": 179767703,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1572822643
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>[[package]]\nname = &quot;libra-config&quot;\nversion = &quot;0.1.0&quot;\nsource = &quot;git+https://github.com/libra/libra.git?rev=66734424#667344248287a1647f42a793e92414853a5fa335&quot;\n</pre></div>",
        "id": 179767704,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1572822648
    },
    {
        "content": "<p>also trying to redact Cargo.lock all gets very tricky with v1 vs v2, heh</p>",
        "id": 179767720,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1572822702
    },
    {
        "content": "<p>What's v1 vs v2?</p>",
        "id": 179767839,
        "sender_full_name": "Shnatsel",
        "timestamp": 1572822887
    },
    {
        "content": "<p>Darn, embedding paths is getting really thorny really quickly. Maybe I should just make it an optional, off-by default thing. This way enterprise can enforce it and use it, and everybody else enjoys no-info-leaks.</p>",
        "id": 179767913,
        "sender_full_name": "Shnatsel",
        "timestamp": 1572822980
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/cargo/pull/7070\" target=\"_blank\" title=\"https://github.com/rust-lang/cargo/pull/7070\">https://github.com/rust-lang/cargo/pull/7070</a></p>",
        "id": 179767990,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1572823182
    },
    {
        "content": "<p>shipped in 1.38 I think?</p>",
        "id": 179768036,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1572823255
    },
    {
        "content": "<p>OIC. Thanks for the input on the thread!<br>\nWe got a response from a Rust team member too, encouraging on the basic direction but with a lot of valid points about the weaknesses of the current proposal. <br>\nThey all seem to be actionable, so I'll try to iterate on the RFC and request another round of review. Any help is appreciated, just brainstorming solutions for those points would be great.</p>",
        "id": 179851002,
        "sender_full_name": "Shnatsel",
        "timestamp": 1572886233
    }
]