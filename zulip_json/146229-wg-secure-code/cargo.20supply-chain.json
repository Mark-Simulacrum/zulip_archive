[
    {
        "content": "<p>So I had an idea, and <span class=\"user-mention\" data-user-id=\"229913\">@HeroicKatora</span> was kind enough to prototype it: <a href=\"https://github.com/HeroicKatora/cargo-supply-chain/\">https://github.com/HeroicKatora/cargo-supply-chain/</a><br>\nIt's a tool to list all the people you implicitly trust through the dependency tree - i.e. all the people with publishing permissions on <a href=\"http://crates.io\">crates.io</a><br>\nRight now it lists authors from <code>cargo metadata</code>, but I'm working on actual <a href=\"http://crates.io\">crates.io</a> querying as we speak. I'll be moving this under secure-code-wg Github org shortly.</p>",
        "id": 212178699,
        "sender_full_name": "Shnatsel",
        "timestamp": 1601741825
    },
    {
        "content": "<p><a href=\"https://github.com/rust-secure-code/cargo-supply-chain\">https://github.com/rust-secure-code/cargo-supply-chain</a><br>\nIt works! It actually works! And provides breakdowns both by owner and by crate.</p>",
        "id": 212586028,
        "sender_full_name": "Shnatsel",
        "timestamp": 1602088946
    },
    {
        "content": "<p>Any tips on how to make it a Cargo plugin, so it can be run as <code>cargo supply-chain</code> instead of <code>cargo-supply-chain</code>? I don't understand how <code>cargo geiger</code>, <code>cargo bloat</code>, <code>cargo audit</code> etc do that, and google search is failing me.</p>",
        "id": 212586367,
        "sender_full_name": "Shnatsel",
        "timestamp": 1602089123
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127617\">@Shnatsel</span> you just put it in <code>PATH</code> and cargo will run it automatically if there's no builtin command with the same name</p>",
        "id": 212586510,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602089178
    },
    {
        "content": "<p>but see <a href=\"#narrow/stream/246057-t-cargo/topic/Custom.20subcommand.20that.20can.20be.20used.20with.20or.20without.20cargo.3F\">https://rust-lang.zulipchat.com/#narrow/stream/246057-t-cargo/topic/Custom.20subcommand.20that.20can.20be.20used.20with.20or.20without.20cargo.3F</a></p>",
        "id": 212586535,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1602089190
    },
    {
        "content": "<p>OIC, thanks!</p>",
        "id": 212586645,
        "sender_full_name": "Shnatsel",
        "timestamp": 1602089249
    },
    {
        "content": "<p>It works, yay! Thanks for the tip!</p>",
        "id": 212587575,
        "sender_full_name": "Shnatsel",
        "timestamp": 1602089669
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127617\">@Shnatsel</span> neat. I do that stuff manually in <code>abscissa</code> today:</p>",
        "id": 212598250,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1602094679
    },
    {
        "content": "<p><a href=\"https://github.com/iqlusioninc/abscissa#depencencies\">https://github.com/iqlusioninc/abscissa#depencencies</a></p>",
        "id": 212598314,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1602094695
    },
    {
        "content": "<p>In the course of this project I've unearthed a number of deficiencies in how <a href=\"http://crates.io\">crates.io</a> handles access permissions:</p>\n<ol>\n<li>Github teams are black boxes, and the member list is impossible to obtain without an explicit OAuth permission.</li>\n<li>Outstanding publisher invitations are impossible to list</li>\n<li>Outstanding publisher invitations are impossible to revoke</li>\n<li>Outstanding publisher invitations never expire</li>\n</ol>",
        "id": 212608354,
        "sender_full_name": "Shnatsel",
        "timestamp": 1602099228
    },
    {
        "content": "<p>And until a few days ago that wasn't even properly tracked in the bug tracker. There are issues now:<br>\n<a href=\"https://github.com/rust-lang/crates.io/issues/2868\">https://github.com/rust-lang/crates.io/issues/2868</a><br>\n<a href=\"https://github.com/rust-lang/crates.io/issues/2869\">https://github.com/rust-lang/crates.io/issues/2869</a></p>",
        "id": 212609352,
        "sender_full_name": "Shnatsel",
        "timestamp": 1602099715
    },
    {
        "content": "<p>I wonder if I can assemble a project group to address it. How does one start a project group, again?</p>",
        "id": 212609452,
        "sender_full_name": "Shnatsel",
        "timestamp": 1602099752
    },
    {
        "content": "<p>asking #t-cargo seems like a start. I've had similar concerns, especially with proposals like <a href=\"https://github.com/rust-lang/crates.io/issues/326\">https://github.com/rust-lang/crates.io/issues/326</a> which would further expand the complexity</p>",
        "id": 212616813,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1602103510
    },
    {
        "content": "<p>I feel that fixing invites is the easiest thing to do, so that's where we should start. I see <a href=\"http://crates.io\">crates.io</a> team has their official channel on Discord, so I've asked there. Let's see if I can get anyone interested with the prospect of external contributors doing most of the work (I hope to get some from the tool announcement)</p>",
        "id": 212617180,
        "sender_full_name": "Shnatsel",
        "timestamp": 1602103730
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127617\">@Shnatsel</span> this is something it might be interesting to add to future versions of <code>cargo supply-chain</code>: <a href=\"https://internals.rust-lang.org/t/making-crates-io-verify-code-against-repository/14075/2?u=bascule\">https://internals.rust-lang.org/t/making-crates-io-verify-code-against-repository/14075/2?u=bascule</a></p>",
        "id": 226884881,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1613684177
    },
    {
        "content": "<p><code>cargo supply-chain</code> led to a conversation with the Rust Security Response team as well as the <a href=\"http://crates.io\">crates.io</a> team. As a result, the issue with owner invitations on <a href=\"http://crates.io\">crates.io</a> never expiring is now fixed: <a href=\"https://github.com/rust-lang/crates.io/issues/2869\">https://github.com/rust-lang/crates.io/issues/2869</a><br>\nI'm told the other issue posted above is being worked on.</p>",
        "id": 237186004,
        "sender_full_name": "Shnatsel",
        "timestamp": 1620058022
    },
    {
        "content": "<p>I've been working on <a href=\"https://github.com/rust-secure-code/cargo-supply-chain\"><code>cargo supply-chain</code></a> again. The notable recent additions are:</p>\n<ul>\n<li>JSON output support</li>\n<li>When downloading the cache, the download size is reduced from ~350Mb to ~60Mb</li>\n<li>Nice progress bars instead of ad-hoc progress reporting or no feedback at all</li>\n</ul>",
        "id": 237186541,
        "sender_full_name": "Shnatsel",
        "timestamp": 1620058255
    },
    {
        "content": "<p>I'm also considering adding a diff-friendly output mode.<br>\nRegular:</p>\n<div class=\"codehilite\"><pre><span></span><code>The following crates will be ignored because they come from a local directory:\n - cargo-supply-chain\n\nUsing cached data. Cache age: 1 day\n\nDependency crates with the people and teams that can publish them to crates.io:\n\n1. libc: team &quot;github:rust-lang:libc&quot;, team &quot;github:rust-lang:libs&quot;, JohnTitor, alexcrichton, gnzlbg, huonw, joshtriplett, rust-lang-owner\n2. unicode-bidi: team &quot;github:servo:cargo-publish&quot;, SimonSapin, behnam, larsbergstrom, mbrubeck, metajack\n3. core-foundation: team &quot;github:servo:cargo-publish&quot;, larsbergstrom, mbrubeck, metajack, pcwalton\n...\n</code></pre></div>\n<p>Diff-friendly:</p>\n<div class=\"codehilite\"><pre><span></span><code>The following crates will be ignored because they come from a local directory:\n - cargo-supply-chain\n\nUsing cached data. Cache age: 1 day\nadler: jonas-schievink\nautocfg: cuviper, matklad\nbase64: alicemaz, marshallpierce\n...\n</code></pre></div>\n<p>and everything other than the list of crates with owners goes to stderr, not stdout.</p>",
        "id": 237186718,
        "sender_full_name": "Shnatsel",
        "timestamp": 1620058352
    },
    {
        "content": "<p>PR for diff-friendly output: <a href=\"https://github.com/rust-secure-code/cargo-supply-chain/pull/62\">https://github.com/rust-secure-code/cargo-supply-chain/pull/62</a><br>\n<strong>I'd appreciate any thoughts on this.</strong> Good/bad idea? Better ways to do it?</p>",
        "id": 237186787,
        "sender_full_name": "Shnatsel",
        "timestamp": 1620058402
    }
]