[
    {
        "content": "<p>Me auditing <code>libflate</code> and bragging about it has set off a chain of events that led to discovery of UB in <code>spin</code> crate (used by <code>lazy_static</code> in <code>#[no_std]</code> mode) plus a hopefully safer rewrite, discovery of UB in <code>image</code> as well as further audit of <code>minix_oxide</code> and <code>reqwest</code> that's currently ongoing.<br>\nThis was made possible by <span class=\"user-mention\" data-user-id=\"224471\">@Lokathor</span> creating a <code>#black_magic</code> channel in Rust community Discord (<a href=\"https://bit.ly/rust-community\" target=\"_blank\" title=\"https://bit.ly/rust-community\">https://bit.ly/rust-community</a>) which attracted people who know UB when they see it. This looks like a solid start for the \"safety effort similar to libs blitz\" goal for this year.<br>\nSadly I will not be able to lead that charge for much longer because I have a month of being mostly if not totally offline ahead of me, but I'm really glad to see that it's happening.</p>",
        "id": 169736181,
        "sender_full_name": "Shnatsel",
        "timestamp": 1562361235
    },
    {
        "content": "<p>And by the way, the new rewritten <code>spin</code> crate could use an audit.<br>\nPR: <a href=\"https://github.com/mvdnes/spin-rs/pull/66\" target=\"_blank\" title=\"https://github.com/mvdnes/spin-rs/pull/66\">https://github.com/mvdnes/spin-rs/pull/66</a> <br>\nCode without the annoying diffs: <a href=\"https://github.com/64/spin-rs/blob/master/src/rw_lock.rs\" target=\"_blank\" title=\"https://github.com/64/spin-rs/blob/master/src/rw_lock.rs\">https://github.com/64/spin-rs/blob/master/src/rw_lock.rs</a></p>",
        "id": 169736236,
        "sender_full_name": "Shnatsel",
        "timestamp": 1562361297
    },
    {
        "content": "<p>The libs-blitz-like effort could use some organizational resources - mostly a structured(ish) guide to doing it plus a way for people to claim crates for audit to avoid duplication of effort and also a way to track results. The results will be very helpful to inform clippy lints and/or new safe abstractions.</p>",
        "id": 169736391,
        "sender_full_name": "Shnatsel",
        "timestamp": 1562361515
    },
    {
        "content": "<p>cargo crev might be an interesting way to track progress</p>",
        "id": 169736419,
        "sender_full_name": "simulacrum",
        "timestamp": 1562361577
    },
    {
        "content": "<p>Yeah, I thought of that already. Maybe not track as it's ongoing, but record the results of you analysis in crev - definitely.</p>",
        "id": 169736556,
        "sender_full_name": "Shnatsel",
        "timestamp": 1562361747
    },
    {
        "content": "<p>actually I should record the fact that I cleansed libflate of unsafety in crev</p>",
        "id": 169736660,
        "sender_full_name": "Shnatsel",
        "timestamp": 1562361950
    },
    {
        "content": "<p>and file RustSec advisories too</p>",
        "id": 169736703,
        "sender_full_name": "Shnatsel",
        "timestamp": 1562361966
    },
    {
        "content": "<p>nice</p>",
        "id": 169769804,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1562424419
    },
    {
        "content": "<p>so wait, safe <code>libflate</code> needs <code>Vec::append_from_within</code> or not?</p>",
        "id": 169770845,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1562426191
    },
    {
        "content": "<p>It does need it. I've just copied the implementation from RFC into a crate, so the unsafe block is now in a crate instead of libflate itself.</p>",
        "id": 169771052,
        "sender_full_name": "Shnatsel",
        "timestamp": 1562426559
    },
    {
        "content": "<p>aah</p>",
        "id": 169771067,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1562426616
    },
    {
        "content": "<p>the other missing part is safely creating a CString from <code>Vec&lt;NonZeroU8&gt;</code></p>",
        "id": 169773361,
        "sender_full_name": "Shnatsel",
        "timestamp": 1562430854
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"132721\">@Tony Arcieri</span> could you create a repo called \"safety blitz\" under the WG? We'll use the issue tracker mostly, to keep track of which crates were audited and which still need auditing. And if they can't be made unsafe-free, what's stopping them</p>",
        "id": 169822061,
        "sender_full_name": "Shnatsel",
        "timestamp": 1562525525
    },
    {
        "content": "<p>I cannot create repos due to legal restrictions</p>",
        "id": 169822080,
        "sender_full_name": "Shnatsel",
        "timestamp": 1562525558
    },
    {
        "content": "<p>Looks like I've started <a href=\"https://github.com/rust-secure-code/wg/issues/19\" target=\"_blank\" title=\"https://github.com/rust-secure-code/wg/issues/19\">https://github.com/rust-secure-code/wg/issues/19</a> without really intending to</p>",
        "id": 169822157,
        "sender_full_name": "Shnatsel",
        "timestamp": 1562525724
    },
    {
        "content": "<p>safety 'blitz' implies some sort of temporary project, maybe there's a better name?</p>",
        "id": 169822651,
        "sender_full_name": "Matt Taylor",
        "timestamp": 1562526617
    },
    {
        "content": "<p>It was kind of intended to be temporary - we audit the key crates of the ecosystem, remove unsafety from them and add clippy lints or safe abstractions that allow doing the same things safely where it wasn't possible before. That should prevent any further unsafety creep. Moreover, many of these abstractions have already landed, like to_bytes/from_bytes, and crates just need to be brought up to date.</p>",
        "id": 169822816,
        "sender_full_name": "Shnatsel",
        "timestamp": 1562526896
    },
    {
        "content": "<p>fair enough</p>",
        "id": 169823189,
        "sender_full_name": "Matt Taylor",
        "timestamp": 1562527484
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"132721\">@Tony Arcieri</span> ping? Any updates on this?</p>",
        "id": 170632809,
        "sender_full_name": "Shnatsel",
        "timestamp": 1562851987
    },
    {
        "content": "<p>ohai, whoops <a href=\"https://github.com/rust-secure-code/safety-blitz\" target=\"_blank\" title=\"https://github.com/rust-secure-code/safety-blitz\">https://github.com/rust-secure-code/safety-blitz</a></p>",
        "id": 170635703,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1562853825
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127617\">@Shnatsel</span> I have been informed \"blitz\" as a name did not go over well for the \"libs blitz\" and perhaps we should select something different</p>",
        "id": 170640191,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1562856565
    },
    {
        "content": "<p>safety dance? <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 170640207,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1562856577
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/4GZbrnUqxMSOshj8Tu6bqLYc/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/4GZbrnUqxMSOshj8Tu6bqLYc/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/4715/4GZbrnUqxMSOshj8Tu6bqLYc/pasted_image.png\"></a></div>",
        "id": 170640361,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1562856656
    },
    {
        "content": "<p>I have been told to ask #community-team for help on Discord if we have trouble coming up with a name</p>",
        "id": 170640970,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1562857032
    },
    {
        "content": "<p>heh, eh. yeah, hi!</p>",
        "id": 170640994,
        "sender_full_name": "Florian Gilcher",
        "timestamp": 1562857052
    },
    {
        "content": "<p>also you can just ask any question here</p>",
        "id": 170641013,
        "sender_full_name": "Florian Gilcher",
        "timestamp": 1562857069
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 170641020,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1562857076
    },
    {
        "content": "<p>Also, with these kinds of projects: habitually ping the community team to help you in marketing :). That's what we're there for!</p>",
        "id": 170642176,
        "sender_full_name": "Florian Gilcher",
        "timestamp": 1562857773
    },
    {
        "content": "<p>yes, thank you!</p>",
        "id": 170643007,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1562858280
    },
    {
        "content": "<p>I have tentatively renamed the repo to <code>safety-dance</code> and I guess I'll see what <span class=\"user-mention\" data-user-id=\"127617\">@Shnatsel</span> thinks</p>",
        "id": 170643095,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1562858318
    },
    {
        "content": "<p>IDK, I have an image of dance in programming as something negative. Like, writing boilerplate or some such.</p>",
        "id": 170676343,
        "sender_full_name": "Shnatsel",
        "timestamp": 1562882248
    },
    {
        "content": "<p>Also apologies for my low participation lately, I'm currently traveling</p>",
        "id": 170676410,
        "sender_full_name": "Shnatsel",
        "timestamp": 1562882284
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127617\">@Shnatsel</span> #community-team (on Discord) has offered to help pick a name if you don't like <code>safety-dance</code></p>",
        "id": 170680503,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1562886086
    },
    {
        "content": "<p>For me, \"dance\" is actually somewhat appropriate, given the circuitous coding that is sometimes necessary to avoid momentary exposure to UB. But I think of it more like dancing on hot coals, because of the difficulty in determining the steps needed to get safely from the starting point to the finish line.</p>",
        "id": 170683277,
        "sender_full_name": "Tom Phinney",
        "timestamp": 1562889356
    },
    {
        "content": "<p>how about: safety-survey, unsafety-purge, safety-audit, safety-probe, safety-review</p>",
        "id": 170790140,
        "sender_full_name": "Matt Taylor",
        "timestamp": 1563024910
    },
    {
        "content": "<p>+1 for unsafety-purge or safety-review. For me, the terms survey, audit and probe all have somewhat inaccurate connotations.</p>",
        "id": 170790425,
        "sender_full_name": "Tom Phinney",
        "timestamp": 1563025379
    },
    {
        "content": "<p>I defer to the community team on this.</p>",
        "id": 170795547,
        "sender_full_name": "Shnatsel",
        "timestamp": 1563034152
    },
    {
        "content": "<p>I've described the effort in more detail in #community-team on the official Rust Discord, waiting for their input</p>",
        "id": 170797755,
        "sender_full_name": "Shnatsel",
        "timestamp": 1563037821
    },
    {
        "content": "<p>this is neat <span class=\"user-mention\" data-user-id=\"132362\">@Joshua Liebow-Feeser</span> <a href=\"https://www.reddit.com/r/rust/comments/cfh8la/thinking_of_using_unsafe_try_this_instead/\" target=\"_blank\" title=\"https://www.reddit.com/r/rust/comments/cfh8la/thinking_of_using_unsafe_try_this_instead/\">https://www.reddit.com/r/rust/comments/cfh8la/thinking_of_using_unsafe_try_this_instead/</a></p>",
        "id": 171333918,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1563640682
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 171339373,
        "sender_full_name": "Joshua Liebow-Feeser",
        "timestamp": 1563650693
    }
]