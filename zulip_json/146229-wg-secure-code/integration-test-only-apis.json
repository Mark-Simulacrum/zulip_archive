[
    {
        "content": "<p>We need a mechanism to expose APIs to integration tests (not within-module unit tests, but the tests under tests/ parallel to src/) that aren't publicly exposed elsewhere. <span class=\"user-mention\" data-user-id=\"132721\">@Tony Arcieri</span> gave one use case in integer-overflow (mocking APIs) and also kindly demonstrated the flaw in the most common workaround for this missing feature: making such APIs available only in debug mode, and running tests only in debug mode, not <code>test --release</code>.</p>",
        "id": 148340498,
        "sender_full_name": "briansmith",
        "timestamp": 1543195943
    },
    {
        "content": "<p>I also have a need for such test-only APIs, not only exposed to my own integration tests, but also the integration tests to the users of my crates.</p>",
        "id": 148340503,
        "sender_full_name": "briansmith",
        "timestamp": 1543195983
    },
    {
        "content": "<p>In particular, it is very convenient to be able to swap out a a good PRNG for a deterministic one for fuzzing, known-answer tests, and other tests, but we don't generally want the PRNG to be swapped out in non-test situations.</p>",
        "id": 148340510,
        "sender_full_name": "briansmith",
        "timestamp": 1543196039
    },
    {
        "content": "<blockquote>\n<p>In particular, it is very convenient to be able to swap out a a good PRNG for a deterministic one for fuzzing, known-answer tests, and other tests, but we don't generally want the PRNG to be swapped out in non-test situations.</p>\n</blockquote>\n<p>In case you didn't know about honggfuzz, it has an attribute for exactly that: <a href=\"https://github.com/rust-fuzz/honggfuzz-rs#conditional-compilation\" target=\"_blank\" title=\"https://github.com/rust-fuzz/honggfuzz-rs#conditional-compilation\">https://github.com/rust-fuzz/honggfuzz-rs#conditional-compilation</a></p>",
        "id": 148361648,
        "sender_full_name": "brycx",
        "timestamp": 1543231900
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133214\">@briansmith</span> you probably thought of feature flags, but I'm still curious why they are not good enough?</p>",
        "id": 148362145,
        "sender_full_name": "RalfJ",
        "timestamp": 1543232569
    },
    {
        "content": "<p>in my case, I'm using feature flags, but there's a feature I want to make sure is <strong>never</strong> used in a <code>release</code> build</p>",
        "id": 148371426,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1543243598
    },
    {
        "content": "<p>Just like Tony, I want to make sure the feature is never used in non-test situations. The whole point of the API is to be secure and this extension point totally breaks the guarantee of security.</p>",
        "id": 148387105,
        "sender_full_name": "briansmith",
        "timestamp": 1543257134
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"133214\">@briansmith</span> if the integration test feature is enabled, you could print out warnings (so a human can see), kill the current process after a short time (so a headless daemon can't last very long), or refuse to run if the current environment isn't a dev environment (e.g. current directory tree has a Cargo.toml, current process tree has <code>cargo</code>).</p>",
        "id": 148388411,
        "sender_full_name": "Zach Reizner",
        "timestamp": 1543258095
    },
    {
        "content": "<blockquote>\n<p>In case you didn't know about honggfuzz, it has an attribute for exactly that: <a href=\"https://github.com/rust-fuzz/honggfuzz-rs#conditional-compilation\" target=\"_blank\" title=\"https://github.com/rust-fuzz/honggfuzz-rs#conditional-compilation\">https://github.com/rust-fuzz/honggfuzz-rs#conditional-compilation</a></p>\n</blockquote>\n<p>Actually that's supported by all three Rust fuzzers: cargo-fuzz, <a href=\"http://afl.rs\" target=\"_blank\" title=\"http://afl.rs\">afl.rs</a>, honggfuzz-rs.</p>",
        "id": 148403312,
        "sender_full_name": "Shnatsel",
        "timestamp": 1543271268
    }
]