[
    {
        "content": "<p>Somebody managed to bootstrap rustc from mrustc. It's not fully reproducible yet, but definitely a step in the right direction. <a href=\"https://www.gnu.org/software/guix/blog/2018/bootstrapping-rust/\" target=\"_blank\" title=\"https://www.gnu.org/software/guix/blog/2018/bootstrapping-rust/\">https://www.gnu.org/software/guix/blog/2018/bootstrapping-rust/</a></p>",
        "id": 151798219,
        "sender_full_name": "Joshua Liebow-Feeser",
        "timestamp": 1544815493
    },
    {
        "content": "<p>neat</p>",
        "id": 151799171,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1544816272
    },
    {
        "content": "<p>also re: the overall topic, if anyone knows the state of <code>rustc</code> in that regard, I'm curious</p>",
        "id": 151799227,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1544816293
    },
    {
        "content": "<p>They discuss it briefly in the blog post</p>",
        "id": 151799247,
        "sender_full_name": "Joshua Liebow-Feeser",
        "timestamp": 1544816314
    },
    {
        "content": "<p>\"Rust takes reproducible builds seriously, but there are some reproducibility problems left in earlier compilers that pop up very sporadically (mostly because of LLVM, and some because of Rust hashtable poisoning). Help wanted, especially from LLVM people!\"</p>",
        "id": 151799272,
        "sender_full_name": "Joshua Liebow-Feeser",
        "timestamp": 1544816340
    },
    {
        "content": "<p>more specifically I'd be curious about a QEMU (or otherwise) recipe which, given a cargo project, always produces the same binary, byte-for-byte</p>",
        "id": 151799284,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1544816350
    },
    {
        "content": "<p>Anyone familiar with <code>reprotest</code>?</p>",
        "id": 154524210,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1546796237
    },
    {
        "content": "<p>it looks very interesting but I can't find any information about it</p>",
        "id": 154524216,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1546796249
    },
    {
        "content": "<p>here's something using it <a href=\"https://github.com/kpcyrd/sniffglue/blob/master/ci/reprotest.sh\" target=\"_blank\" title=\"https://github.com/kpcyrd/sniffglue/blob/master/ci/reprotest.sh\">https://github.com/kpcyrd/sniffglue/blob/master/ci/reprotest.sh</a></p>",
        "id": 154524263,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1546796290
    },
    {
        "content": "<p>I guess it's this? <a href=\"https://pypi.org/project/reprotest/\" target=\"_blank\" title=\"https://pypi.org/project/reprotest/\">https://pypi.org/project/reprotest/</a></p>",
        "id": 154524269,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1546796314
    },
    {
        "content": "<p>Question: if I make a binary with a Cargo.lock in the repo, and then publish that binary to <a href=\"http://crates.io\" target=\"_blank\" title=\"http://crates.io\">crates.io</a>, does that Cargo.lock propagate to users, or whenever someone types <code>cargo install my-program</code> they actually get latest semver-compatible versions?</p>",
        "id": 154534529,
        "sender_full_name": "Shnatsel",
        "timestamp": 1546815117
    },
    {
        "content": "<p>You can't publish binaries to <a href=\"http://crates.io\" target=\"_blank\" title=\"http://crates.io\">crates.io</a> at all, can you? I'd assume any <code>Cargo.lock</code> you have around is ignored.</p>",
        "id": 154534639,
        "sender_full_name": "Alex Gaynor",
        "timestamp": 1546815253
    },
    {
        "content": "<p>Right. I meant executables that are built from source on the user's machine. So Cargo.lock is not included in the upload to <a href=\"http://crates.io\" target=\"_blank\" title=\"http://crates.io\">crates.io</a>?</p>",
        "id": 154535061,
        "sender_full_name": "Shnatsel",
        "timestamp": 1546815991
    },
    {
        "content": "<p>no, it can't be because Cargo.lock's resolution depends on the constraints of all of the other dependencies</p>",
        "id": 154577503,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1546875514
    },
    {
        "content": "<p>You can definitely publish binary components in crates, without source code. It is done by some crates. The only requirement is that your Cargo.toml must generate something; you can include whatever else you want.</p>",
        "id": 156336727,
        "sender_full_name": "briansmith",
        "timestamp": 1547775174
    },
    {
        "content": "<p>so like, I can have a binary embedded, a hello world source code, a <a href=\"http://build.rs\" target=\"_blank\" title=\"http://build.rs\">build.rs</a> that copies my binary to target/release, and everything is fine and dandy and I can push that to <a href=\"http://crates.io\" target=\"_blank\" title=\"http://crates.io\">crates.io</a>?</p>",
        "id": 156336933,
        "sender_full_name": "Shnatsel",
        "timestamp": 1547775430
    },
    {
        "content": "<p>I don't know about that. Probably your <a href=\"http://build.rs\" target=\"_blank\" title=\"http://build.rs\">build.rs</a> has to build an executable. But you can have another executable included that it copies to the output and executes, I think.</p>",
        "id": 156337014,
        "sender_full_name": "briansmith",
        "timestamp": 1547775514
    },
    {
        "content": "<p>ewww, gross</p>",
        "id": 156337021,
        "sender_full_name": "Shnatsel",
        "timestamp": 1547775532
    },
    {
        "content": "<p>I know you can have binary libraries (*.a) that you ship in your crate, for example.</p>",
        "id": 156337035,
        "sender_full_name": "briansmith",
        "timestamp": 1547775552
    },
    {
        "content": "<p>on the other hand, I don't know what I expected</p>",
        "id": 156337040,
        "sender_full_name": "Shnatsel",
        "timestamp": 1547775561
    },
    {
        "content": "<p>My understanding is that the new golang build/module system will require that what is in github matches what you have.</p>",
        "id": 156337049,
        "sender_full_name": "briansmith",
        "timestamp": 1547775600
    },
    {
        "content": "<p>But, even then, I don't know if it lets you put your *.a and *.exe files in github and then says \"OK\". I'm guessing not.</p>",
        "id": 156337111,
        "sender_full_name": "briansmith",
        "timestamp": 1547775629
    },
    {
        "content": "<p>I will bypass any heuristics they make up</p>",
        "id": 156337187,
        "sender_full_name": "Shnatsel",
        "timestamp": 1547775752
    },
    {
        "content": "<p>the only thing that could sorta-reliably stop it is manual review</p>",
        "id": 156337194,
        "sender_full_name": "Shnatsel",
        "timestamp": 1547775768
    },
    {
        "content": "<p>there are like</p>",
        "id": 156347190,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1547792057
    },
    {
        "content": "<p>two concurrent threads I was trying to get to cross streams, heh</p>",
        "id": 156347193,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1547792064
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127617\">@Shnatsel</span>'s embedding Cargo.lock and such in binaries</p>",
        "id": 156347198,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1547792086
    },
    {
        "content": "<p>and this one: <a href=\"https://github.com/rust-lang/cargo/issues/5654\" target=\"_blank\" title=\"https://github.com/rust-lang/cargo/issues/5654\">https://github.com/rust-lang/cargo/issues/5654</a></p>",
        "id": 156347209,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1547792119
    },
    {
        "content": "<p>because I think you can take <span class=\"user-mention\" data-user-id=\"127617\">@Shnatsel</span>'s thing and put it in a crate and solve ^^^ problem</p>",
        "id": 156347212,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1547792149
    },
    {
        "content": "<p>anyone familiar with <code>guix challenge</code>? <a href=\"https://www.gnu.org/software/guix/manual/en/html_node/Invoking-guix-challenge.html\" target=\"_blank\" title=\"https://www.gnu.org/software/guix/manual/en/html_node/Invoking-guix-challenge.html\">https://www.gnu.org/software/guix/manual/en/html_node/Invoking-guix-challenge.html</a></p>",
        "id": 156637578,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1548189682
    },
    {
        "content": "<p>Well, I made a repo/crate for this: <a href=\"https://github.com/rust-secure-code/cargo-repro\" target=\"_blank\" title=\"https://github.com/rust-secure-code/cargo-repro\">https://github.com/rust-secure-code/cargo-repro</a></p>",
        "id": 165980837,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1558196341
    },
    {
        "content": "<p>it doesn't do anything yet <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 165980846,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1558196347
    },
    {
        "content": "<p>would love to gather input here: <a href=\"https://github.com/rust-secure-code/cargo-repro/issues/3\" target=\"_blank\" title=\"https://github.com/rust-secure-code/cargo-repro/issues/3\">https://github.com/rust-secure-code/cargo-repro/issues/3</a></p>",
        "id": 165980849,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1558196364
    },
    {
        "content": "<p>Nice! I just came back from vacation. Just some questions to get a good feeling for the goal of this tool (I might have missed some prior conversations here and there :))</p>\n<p>Is it used to check if packages are the same (as in: project code and .zip archives downloaded from <a href=\"http://crates.io\" target=\"_blank\" title=\"http://crates.io\">crates.io</a>) or to check if binaries are the same? Or even mixes between them? (Like to check if an archive outputs the same binary?)</p>\n<p>Of course I guess checking binaries really depends on the compiler that is used right?</p>",
        "id": 166077889,
        "sender_full_name": "DevQps",
        "timestamp": 1558352812
    },
    {
        "content": "<p>to me it's two parts:</p>",
        "id": 166087074,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1558360724
    },
    {
        "content": "<p>1) building binaries which are reproducible, and gathering the necessary environmental information to reproduce them. the former part is largely just <code>cargo build --locked</code> but I think such a tool should try to collect any potential sources of nondeterminism and potentially encode them into the resulting binary</p>",
        "id": 166087220,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1558360821
    },
    {
        "content": "<p>2) verifying a build is actually reproducible, given the source tree it was built from as a cargo project. there's <code>reprotest</code> for this, but it's a bit cumbersome to use and also trying to be a general purpose reproducible build utility</p>",
        "id": 166087289,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1558360868
    },
    {
        "content": "<p>mostly the problem to me is reproducible builds in Rust right now seem pretty cargo cult and I haven't even gotten one to work myself yet, so I'd like a tool that at least encodes the \"recipe\" for doing so somewhere other than a bunch of forum posts and GitHub issues</p>",
        "id": 166087381,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1558360925
    },
    {
        "content": "<p>\"cargo cult\" yeesh unintentional pun <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span></p>",
        "id": 166087393,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1558360939
    },
    {
        "content": "<p>some very, very preliminary functionality in this PR: <a href=\"https://github.com/rust-secure-code/cargo-repro/pull/5\" target=\"_blank\" title=\"https://github.com/rust-secure-code/cargo-repro/pull/5\">https://github.com/rust-secure-code/cargo-repro/pull/5</a></p>",
        "id": 173040536,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1565629371
    },
    {
        "content": "<p>so we're working on something... mildly ambitious in this department <a href=\"https://github.com/iqlusioninc/synchronicity\" target=\"_blank\" title=\"https://github.com/iqlusioninc/synchronicity\">https://github.com/iqlusioninc/synchronicity</a></p>",
        "id": 182400303,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1575328952
    },
    {
        "content": "<p>tl;dr: Rustwide + Libra = cryptographic proofs of BFT consensus around reproducible builds</p>",
        "id": 182400336,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1575329000
    },
    {
        "content": "<p>some interesting stuff here re: reproducing rustc <a href=\"https://github.com/rust-lang/rust/issues/34902#issuecomment-562698593\" target=\"_blank\" title=\"https://github.com/rust-lang/rust/issues/34902#issuecomment-562698593\">https://github.com/rust-lang/rust/issues/34902#issuecomment-562698593</a></p>",
        "id": 182810802,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1575670926
    },
    {
        "content": "<p>The README for Synchronicity does not describe what problem does it solve</p>",
        "id": 183096073,
        "sender_full_name": "Shnatsel",
        "timestamp": 1576007941
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127617\">@Shnatsel</span> the general notion of the property is \"binary transparency\", but I think it provides something a bit stronger</p>",
        "id": 183329427,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1576213928
    },
    {
        "content": "<p>I can perhaps make a note of it</p>",
        "id": 183329438,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1576213953
    },
    {
        "content": "<p>When I read that README I don't understand what use cases that enables. I guess with this tool a few companies can get together, build all crates on <a href=\"http://crates.io\" target=\"_blank\" title=\"http://crates.io\">crates.io</a> and then tell if the build is reproducible or not, and if yes what the hash is? And ideally I'd be able to get a build environment these guys use and obtain a binary with the same hash myself? This I get. But, what problem does <em>that</em> solve?</p>",
        "id": 183352819,
        "sender_full_name": "Shnatsel",
        "timestamp": 1576238953
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127617\">@Shnatsel</span> aah, the main use would be binary releases of crates that could be validated in some way, or a global build cache</p>",
        "id": 183386335,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1576262257
    },
    {
        "content": "<p>I should probably write a blog post</p>",
        "id": 183386348,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1576262266
    },
    {
        "content": "<p>or a few bullet points in the readme on what use cases that enables</p>",
        "id": 183386425,
        "sender_full_name": "Shnatsel",
        "timestamp": 1576262294
    },
    {
        "content": "<p>our real goal is to have an excuse to play with HotStuffBFT at the moment, so it’s a bit of a hammer in search of nails 😅</p>",
        "id": 183386437,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1576262304
    },
    {
        "content": "<p>and yeah sure</p>",
        "id": 183386449,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1576262315
    },
    {
        "content": "<p>or a “Why does this help?” section</p>",
        "id": 183386471,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1576262329
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"127617\">@Shnatsel</span> how's this <a href=\"https://github.com/iqlusioninc/synchronicity/pull/18/files\" target=\"_blank\" title=\"https://github.com/iqlusioninc/synchronicity/pull/18/files\">https://github.com/iqlusioninc/synchronicity/pull/18/files</a></p>",
        "id": 183674071,
        "sender_full_name": "Tony Arcieri",
        "timestamp": 1576605960
    },
    {
        "content": "<p>Probably too technical to actually get people excited about it, but good as a first pass</p>",
        "id": 183680736,
        "sender_full_name": "Shnatsel",
        "timestamp": 1576610154
    }
]