[
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"244816\">@CreepySkeleton</span> It's me.</p>",
        "id": 185862062,
        "sender_full_name": "pksunkara",
        "timestamp": 1579209731
    },
    {
        "content": "<p>Thatâ€™s a cool handle!</p>",
        "id": 185888436,
        "sender_full_name": "Yerkebulan Tulibergenov",
        "timestamp": 1579237785
    },
    {
        "content": "<p>Hi there! I'll be monitoring this thread for the next six hours, feel free to ask</p>",
        "id": 185905697,
        "sender_full_name": "CreepySkeleton",
        "timestamp": 1579258950
    },
    {
        "content": "<p>So, I saw your message on one of the github issues that we want to combine the efforts for clap_derive and structopt. I completely agree with that. Let's consider it clap v3 release. Do you have any things you want to add to roadmap?</p>",
        "id": 185934041,
        "sender_full_name": "pksunkara",
        "timestamp": 1579279687
    },
    {
        "content": "<p>And also is there any document where we can tell people why clap_derive is better than structopt?</p>",
        "id": 185934075,
        "sender_full_name": "pksunkara",
        "timestamp": 1579279706
    },
    {
        "content": "<p>yes, there are some thing I would like to change</p>\n<p><code>no_version</code>. It's like fifth leg for a dog, I really regret we've come up with this decision. I would love to replace it with \"no version bu default\" behavior along with explicit <code>#[clap(version)]</code> if user wants it to be derived from <code>Cargo.toml</code></p>",
        "id": 185935013,
        "sender_full_name": "CreepySkeleton",
        "timestamp": 1579280142
    },
    {
        "content": "<p>Just like #[structopt(about/author)] work</p>",
        "id": 185935103,
        "sender_full_name": "CreepySkeleton",
        "timestamp": 1579280180
    },
    {
        "content": "<p>The second thing is - structopt uses one big trait for everything. It involves it's own drawbacks, like it is possible to flatten an enum (erroneously) , see <a href=\"https://github.com/TeXitoi/structopt/issues/328\" target=\"_blank\" title=\"https://github.com/TeXitoi/structopt/issues/328\">https://github.com/TeXitoi/structopt/issues/328</a></p>",
        "id": 185935356,
        "sender_full_name": "CreepySkeleton",
        "timestamp": 1579280320
    },
    {
        "content": "<p>This is how I would like it to work <a href=\"https://github.com/TeXitoi/structopt/issues/328#issuecomment-574188743\" target=\"_blank\" title=\"https://github.com/TeXitoi/structopt/issues/328#issuecomment-574188743\">https://github.com/TeXitoi/structopt/issues/328#issuecomment-574188743</a></p>",
        "id": 185935431,
        "sender_full_name": "CreepySkeleton",
        "timestamp": 1579280356
    },
    {
        "content": "<p>The third thing - structopt desperately needs refactoring. The current code is nothing more than a big batch of function calling each other is non-obvious ways, I would very much like it to build a parse tree, transform it to AST and then generate the result.</p>",
        "id": 185935887,
        "sender_full_name": "CreepySkeleton",
        "timestamp": 1579280595
    },
    {
        "content": "<p>It would also allow us to organize the code in <em>passes</em>, like \"parsing\", \"transforming\", \"generic stuff\", \"generation\". The passes are isolated from each other, each pass does well-defined set of things, producing the result. Right now, when you want to change something you have double check whether it can possibly interfere with some other part of code.</p>",
        "id": 185936184,
        "sender_full_name": "CreepySkeleton",
        "timestamp": 1579280759
    },
    {
        "content": "<p>It would also allow use to report error not just one-by-run, but a bunch of errors simultaneously</p>",
        "id": 185936363,
        "sender_full_name": "CreepySkeleton",
        "timestamp": 1579280860
    },
    {
        "content": "<p>I really hate this unfamiliar keyboard, lots of types <span aria-label=\"frown\" class=\"emoji emoji-1f641\" role=\"img\" title=\"frown\">:frown:</span></p>",
        "id": 185936447,
        "sender_full_name": "CreepySkeleton",
        "timestamp": 1579280903
    },
    {
        "content": "<p>TYPOS</p>",
        "id": 185936452,
        "sender_full_name": "CreepySkeleton",
        "timestamp": 1579280908
    },
    {
        "content": "<p>About the documenting part - well, we need two things here</p>",
        "id": 185936515,
        "sender_full_name": "CreepySkeleton",
        "timestamp": 1579280948
    },
    {
        "content": "<p>First - we need to proofread the existing documentation, it's organized quite poorly</p>",
        "id": 185936571,
        "sender_full_name": "CreepySkeleton",
        "timestamp": 1579280988
    },
    {
        "content": "<p>Also, I don't think that one big <a href=\"http://docs.rs\" target=\"_blank\" title=\"http://docs.rs\">docs.rs</a> page is a good place for proc-macros documentation, see <a href=\"https://github.com/TeXitoi/structopt/issues/319\" target=\"_blank\" title=\"https://github.com/TeXitoi/structopt/issues/319\">https://github.com/TeXitoi/structopt/issues/319</a></p>",
        "id": 185936686,
        "sender_full_name": "CreepySkeleton",
        "timestamp": 1579281036
    },
    {
        "content": "<p>The second thing is obvious - \"Moving from StructOpt to Clap_derive\" guide, it has yet to be written. I would really love some help at this part since my English is far from perfect</p>",
        "id": 185936947,
        "sender_full_name": "CreepySkeleton",
        "timestamp": 1579281186
    },
    {
        "content": "<p>Well, that's about it. Everything else can be done after the release, I guesss</p>",
        "id": 185937085,
        "sender_full_name": "CreepySkeleton",
        "timestamp": 1579281259
    },
    {
        "content": "<p>End we will need to import the recent commits from structopt too <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 185937451,
        "sender_full_name": "CreepySkeleton",
        "timestamp": 1579281515
    },
    {
        "content": "<p>It looks like @kbknapp supports my \"few separate traits\" approach <a href=\"https://github.com/clap-rs/clap_derive/issues/1#issuecomment-343762115\" target=\"_blank\" title=\"https://github.com/clap-rs/clap_derive/issues/1#issuecomment-343762115\">https://github.com/clap-rs/clap_derive/issues/1#issuecomment-343762115</a></p>",
        "id": 185937922,
        "sender_full_name": "CreepySkeleton",
        "timestamp": 1579281877
    },
    {
        "content": "<p>(I know, 2 years old, but still)</p>",
        "id": 185937981,
        "sender_full_name": "CreepySkeleton",
        "timestamp": 1579281913
    },
    {
        "content": "<p>Oh yes, I have some concerns about <code>parse_*</code> functions being <code>inherent</code>. This is quite a footgun loaded and ready to go off since users may want to add such a methods for themselves. It would clash with the generated ones.  Maybe some sort of <code>Parse</code> trait?</p>",
        "id": 185938532,
        "sender_full_name": "CreepySkeleton",
        "timestamp": 1579282265
    },
    {
        "content": "<p>Also, we will need to settle down the organizational stuff with <code>wg-cli</code>? Who's gonna maintain the <code>clap_derive</code> repo (I would  volunteer , maybe @TexIToi would too).</p>",
        "id": 185938685,
        "sender_full_name": "CreepySkeleton",
        "timestamp": 1579282376
    },
    {
        "content": "<p>Also, what do you think about <a href=\"https://github.com/TeXitoi/structopt/issues/79\" target=\"_blank\" title=\"https://github.com/TeXitoi/structopt/issues/79\">https://github.com/TeXitoi/structopt/issues/79</a> ?</p>",
        "id": 185938904,
        "sender_full_name": "CreepySkeleton",
        "timestamp": 1579282544
    },
    {
        "content": "<p>OK, it's getting late, so I'm out. I'll try to be there tomorrow at 8AM UTC</p>",
        "id": 185939333,
        "sender_full_name": "CreepySkeleton",
        "timestamp": 1579282806
    },
    {
        "content": "<p>I am readying a PR to get clap_derive merged into clap using cargo workspaces. So, we will have one big monorepo and all of us would maintain the single repo.</p>",
        "id": 185945767,
        "sender_full_name": "pksunkara",
        "timestamp": 1579287442
    },
    {
        "content": "<p>Regarding <a href=\"https://github.com/TeXitoi/structopt/issues/79\" target=\"_blank\" title=\"https://github.com/TeXitoi/structopt/issues/79\">https://github.com/TeXitoi/structopt/issues/79</a>, IMO we should implement <code>HashMap&lt;K, V&gt;</code> support in Clap for arguments.</p>",
        "id": 185945885,
        "sender_full_name": "pksunkara",
        "timestamp": 1579287521
    },
    {
        "content": "<p>Regarding <code>parse_*</code>, can't we create something like <code>#[clap(parse = \"from_str\")</code> for all the inherent functions and <code>#[clap(parse = parse_custom)</code> for user defined functions? That way, they won't clash with user defined ones. I think a <code>Parse</code> trait is too much here.</p>",
        "id": 185946230,
        "sender_full_name": "pksunkara",
        "timestamp": 1579287765
    },
    {
        "content": "<p>I am not seriously thrilled about the idea of separate traits. I made comments on the issue you linked.</p>",
        "id": 185946724,
        "sender_full_name": "pksunkara",
        "timestamp": 1579288139
    },
    {
        "content": "<p>Regarding <em>passes</em>, Absolutely. We can actually do it once we merge clap_derive into clap. I will help with that. Let's talk about this when we chat on call.</p>",
        "id": 185947965,
        "sender_full_name": "pksunkara",
        "timestamp": 1579289034
    },
    {
        "content": "<p>Also, look at this issue, <a href=\"https://github.com/clap-rs/clap/issues/1634\" target=\"_blank\" title=\"https://github.com/clap-rs/clap/issues/1634\">https://github.com/clap-rs/clap/issues/1634</a></p>",
        "id": 185989447,
        "sender_full_name": "pksunkara",
        "timestamp": 1579342875
    },
    {
        "content": "<p>Just caught up with this conversation. Just waiting on a few things and will get clap 3.0 beta out after that. So try and if possible get your changes in before that <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span> Thnaks</p>",
        "id": 185990591,
        "sender_full_name": "DPC",
        "timestamp": 1579345217
    },
    {
        "content": "<p>Sure, just a little question - when is exactly \"before that\"? <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 185992355,
        "sender_full_name": "CreepySkeleton",
        "timestamp": 1579348359
    },
    {
        "content": "<p>The problem with <code>#[structopt(parse)]</code> is that there's already such magical method with different semantics. Could you please elaborate on why <code>Parse</code> trait is not good? AFAIK, it's just an extra <code>use clap::Parse;</code> from user perspective?</p>",
        "id": 185992813,
        "sender_full_name": "CreepySkeleton",
        "timestamp": 1579349275
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"244816\">@CreepySkeleton</span> i could give a timeframe, but then I already gave a timeframe 3-4 times and it is hard to meet timeframes in OSS world :P So preferably, let's strive for a beta by the end of this month <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span> thanks</p>",
        "id": 186003587,
        "sender_full_name": "DPC",
        "timestamp": 1579367745
    },
    {
        "content": "<p>@DPC Sounds good</p>",
        "id": 186003651,
        "sender_full_name": "CreepySkeleton",
        "timestamp": 1579367800
    }
]