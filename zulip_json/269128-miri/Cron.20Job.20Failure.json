[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> <span class=\"user-mention\" data-user-id=\"124288\">@oli</span> the Miri cron job build failed. Please investigate!</p>",
        "id": 222967613,
        "sender_full_name": "miri cronjobs",
        "timestamp": 1610783460
    },
    {
        "content": "<p>Yay, it's working. :)</p>",
        "id": 222971474,
        "sender_full_name": "RalfJ",
        "timestamp": 1610789338
    },
    {
        "content": "<p>For a moment I didn't realize it was a bot and was wondering why someone was posting this message <span aria-label=\"laughter tears\" class=\"emoji emoji-1f602\" role=\"img\" title=\"laughter tears\">:laughter_tears:</span></p>",
        "id": 223058555,
        "sender_full_name": "Noah Lev",
        "timestamp": 1610911347
    },
    {
        "content": "<p>:D</p>",
        "id": 223058853,
        "sender_full_name": "RalfJ",
        "timestamp": 1610911792
    },
    {
        "content": "<p>bots aren't as polite as we expect people to be, are they? ;)</p>",
        "id": 223058902,
        "sender_full_name": "RalfJ",
        "timestamp": 1610911811
    },
    {
        "content": "<p>Opened <a href=\"https://github.com/rust-lang/miri/issues/1680\">miri#1680</a> to fix this issue</p>",
        "id": 223061529,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1610915446
    },
    {
        "content": "<p>Wait you actually merged it? <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>",
        "id": 223063595,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1610918295
    },
    {
        "content": "<p>if you want to get something in just cite the CoC! <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 223063746,
        "sender_full_name": "oliver",
        "timestamp": 1610918491
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"255061\">Léo Lanteri Thauvin</span> <a href=\"#narrow/stream/269128-miri/topic/Cron.20Job.20Failure/near/223063595\">said</a>:</p>\n<blockquote>\n<p>Wait you actually merged it? <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span></p>\n</blockquote>\n<p>I mean of course, why wouldn't I? :D</p>",
        "id": 223064042,
        "sender_full_name": "RalfJ",
        "timestamp": 1610918820
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"281739\">oliver</span> <a href=\"#narrow/stream/269128-miri/topic/Cron.20Job.20Failure/near/223063746\">said</a>:</p>\n<blockquote>\n<p>if you want to get something in just cite the CoC! <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>\n</blockquote>\n<p>more importantly, just make it funny :D</p>",
        "id": 223064059,
        "sender_full_name": "RalfJ",
        "timestamp": 1610918837
    },
    {
        "content": "<p>Dear <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> and <span class=\"user-mention\" data-user-id=\"124288\">@oli</span>\\n\\nIt would appear that the Miri cron job build failed. Would you mind investigating this issue?\\n\\nThanks in advance!\\nSincerely,\\nThe Miri Cronjobs Bot</p>",
        "id": 223865005,
        "sender_full_name": "miri cronjobs",
        "timestamp": 1611561862
    },
    {
        "content": "<p>Dear <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> and <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></p>\n<p>It would appear that the Miri cron job build failed. Would you mind investigating this issue?</p>\n<p>Thanks in advance!<br>\nSincerely,<br>\nThe Miri Cronjobs Bot</p>",
        "id": 224004797,
        "sender_full_name": "miri cronjobs",
        "timestamp": 1611646212
    },
    {
        "content": "<p>newlines are working :)</p>",
        "id": 224043218,
        "sender_full_name": "RalfJ",
        "timestamp": 1611670139
    },
    {
        "content": "<p>(also, I took care of the problem)</p>",
        "id": 224043230,
        "sender_full_name": "RalfJ",
        "timestamp": 1611670146
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"374062\">@miri cronjobs</span> good bot :D</p>",
        "id": 224104571,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1611695737
    },
    {
        "content": "<p>Dear <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> and <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></p>\n<p>It would appear that the Miri cron job build failed. Would you mind investigating this issue?</p>\n<p>Thanks in advance!<br>\nSincerely,<br>\nThe Miri Cronjobs Bot</p>",
        "id": 224148035,
        "sender_full_name": "miri cronjobs",
        "timestamp": 1611732838
    },
    {
        "content": "<p>done</p>",
        "id": 224182914,
        "sender_full_name": "RalfJ",
        "timestamp": 1611755484
    },
    {
        "content": "<p>Dear <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> and <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></p>\n<p>It would appear that the Miri cron job build failed. Would you mind investigating this issue?</p>\n<p>Thanks in advance!<br>\nSincerely,<br>\nThe Miri Cronjobs Bot</p>",
        "id": 224629133,
        "sender_full_name": "miri cronjobs",
        "timestamp": 1612078219
    },
    {
        "content": "<p>Dear <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> and <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></p>\n<p>It would appear that the Miri cron job build failed. Would you mind investigating this issue?</p>\n<p>Thanks in advance!<br>\nSincerely,<br>\nThe Miri Cronjobs Bot</p>",
        "id": 225268024,
        "sender_full_name": "miri cronjobs",
        "timestamp": 1612509825
    },
    {
        "content": "<p>(all taken care of)</p>",
        "id": 225414990,
        "sender_full_name": "RalfJ",
        "timestamp": 1612622851
    },
    {
        "content": "<p>Dear <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> and <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></p>\n<p>It would appear that the Miri cron job build failed. Would you mind investigating this issue?</p>\n<p>Thanks in advance!<br>\nSincerely,<br>\nThe Miri Cronjobs Bot</p>",
        "id": 225653024,
        "sender_full_name": "miri cronjobs",
        "timestamp": 1612855623
    },
    {
        "content": "<p>that's done</p>",
        "id": 225664001,
        "sender_full_name": "RalfJ",
        "timestamp": 1612863683
    },
    {
        "content": "<p>Dear <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> and <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></p>\n<p>It would appear that the Miri cron job build failed. Would you mind investigating this issue?</p>\n<p>Thanks in advance!<br>\nSincerely,<br>\nThe Miri Cronjobs Bot</p>",
        "id": 226480145,
        "sender_full_name": "miri cronjobs",
        "timestamp": 1613460235
    },
    {
        "content": "<p>done</p>",
        "id": 226495169,
        "sender_full_name": "RalfJ",
        "timestamp": 1613470620
    },
    {
        "content": "<p>Dear <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> and <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></p>\n<p>It would appear that the Miri cron job build failed. Would you mind investigating this issue?</p>\n<p>Thanks in advance!<br>\nSincerely,<br>\nThe Miri Cronjobs Bot</p>",
        "id": 226773217,
        "sender_full_name": "miri cronjobs",
        "timestamp": 1613632928
    },
    {
        "content": "<p>done</p>",
        "id": 226791415,
        "sender_full_name": "RalfJ",
        "timestamp": 1613644445
    },
    {
        "content": "<p>Dear <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> and <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></p>\n<p>It would appear that the Miri cron job build failed. Would you mind investigating this issue?</p>\n<p>Thanks in advance!<br>\nSincerely,<br>\nThe Miri Cronjobs Bot</p>",
        "id": 227391191,
        "sender_full_name": "miri cronjobs",
        "timestamp": 1614065059
    },
    {
        "content": "<p>Hm, interesting... the toolstate is green but Miri's CI fails?</p>",
        "id": 227395326,
        "sender_full_name": "RalfJ",
        "timestamp": 1614068342
    },
    {
        "content": "<p>Ah, it's a failure only with <code>-Z mir-opt-level=3</code>. Some new MIR optimization landed that masks UB in a compile-fail test.</p>",
        "id": 227395532,
        "sender_full_name": "RalfJ",
        "timestamp": 1614068500
    },
    {
        "content": "<p>done</p>",
        "id": 227395848,
        "sender_full_name": "RalfJ",
        "timestamp": 1614068687
    },
    {
        "content": "<p>Dear <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> and <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></p>\n<p>It would appear that the Miri cron job build failed. Would you mind investigating this issue?</p>\n<p>Thanks in advance!<br>\nSincerely,<br>\nThe Miri Cronjobs Bot</p>",
        "id": 228365212,
        "sender_full_name": "miri cronjobs",
        "timestamp": 1614669903
    },
    {
        "content": "<p>Hm, looks like some MIR optimization (or something else) landed that makes the data race detector fail on some examples... but only with <code>mir-opt-level=3</code></p>",
        "id": 228373882,
        "sender_full_name": "RalfJ",
        "timestamp": 1614674937
    },
    {
        "content": "<p>Could it be <a href=\"https://github.com/rust-lang/rust/issues/80475\">#80475</a>?</p>",
        "id": 228374616,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1614675365
    },
    {
        "content": "<p>I just went over all merges since your last miri up 2 days ago, and nothing stands out</p>",
        "id": 228375184,
        "sender_full_name": "oli",
        "timestamp": 1614675642
    },
    {
        "content": "<p>we have one mir-opt PR that gets rid of storage markers in general, but only if no optimizations are run at all</p>",
        "id": 228375238,
        "sender_full_name": "oli",
        "timestamp": 1614675664
    },
    {
        "content": "<p>the only one that landed yesterday is <a href=\"https://github.com/rust-lang/rust/pull/78360\">https://github.com/rust-lang/rust/pull/78360</a></p>",
        "id": 228375309,
        "sender_full_name": "RalfJ",
        "timestamp": 1614675695
    },
    {
        "content": "<p>but I cannot figure out why that would remove deadlocks from a program...</p>",
        "id": 228375325,
        "sender_full_name": "RalfJ",
        "timestamp": 1614675704
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/269128-miri/topic/Cron.20Job.20Failure/near/228375238\">said</a>:</p>\n<blockquote>\n<p>we have one mir-opt PR that gets rid of storage markers in general, but only if no optimizations are run at all</p>\n</blockquote>\n<p>not sure what you mean, it seems to run as part of <code>optimizations</code>, i.e. only with <code>mir-opt-level</code> &gt; 0?</p>",
        "id": 228375411,
        "sender_full_name": "RalfJ",
        "timestamp": 1614675733
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/269128-miri/topic/Cron.20Job.20Failure/near/228375184\">said</a>:</p>\n<blockquote>\n<p>I just went over all merges since your last miri up 2 days ago, and nothing stands out</p>\n</blockquote>\n<p>this cronjob runs every morning, so only the last 24h are relevant</p>",
        "id": 228375446,
        "sender_full_name": "RalfJ",
        "timestamp": 1614675751
    },
    {
        "content": "<p>E.g. the behavior of this program is changed:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">extern</span><span class=\"w\"> </span><span class=\"k\">crate</span><span class=\"w\"> </span><span class=\"n\">libc</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">rw</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"n\">cell</span>::<span class=\"n\">UnsafeCell</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">libc</span>::<span class=\"n\">PTHREAD_RWLOCK_INITIALIZER</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"fm\">assert_eq!</span><span class=\"p\">(</span><span class=\"n\">libc</span>::<span class=\"n\">pthread_rwlock_rdlock</span><span class=\"p\">(</span><span class=\"n\">rw</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">()),</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">libc</span>::<span class=\"n\">pthread_rwlock_wrlock</span><span class=\"p\">(</span><span class=\"n\">rw</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">());</span><span class=\"w\"> </span><span class=\"c1\">//~ ERROR: deadlock</span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 228375700,
        "sender_full_name": "RalfJ",
        "timestamp": 1614675889
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span> <a href=\"#narrow/stream/269128-miri/topic/Cron.20Job.20Failure/near/228375411\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/269128-miri/topic/Cron.20Job.20Failure/near/228375238\">said</a>:</p>\n<blockquote>\n<p>we have one mir-opt PR that gets rid of storage markers in general, but only if no optimizations are run at all</p>\n</blockquote>\n<p>not sure what you mean, it seems to run as part of <code>optimizations</code>, i.e. only with <code>mir-opt-level</code> &gt; 0?</p>\n</blockquote>\n<p>it's only run if we don't emit lifetime markers to llvm. We only emit lifetime markers to llvm if the -O opt level is 0, llvm opt level is irrelevant</p>",
        "id": 228375706,
        "sender_full_name": "oli",
        "timestamp": 1614675894
    },
    {
        "content": "<p>I tried to diff the MIR but that seems near impossible due to all of that \"scope\" crap</p>",
        "id": 228375743,
        "sender_full_name": "RalfJ",
        "timestamp": 1614675915
    },
    {
        "content": "<p>wait... the MIR is so heavily different?</p>",
        "id": 228375788,
        "sender_full_name": "oli",
        "timestamp": 1614675931
    },
    {
        "content": "<p>oh</p>",
        "id": 228375790,
        "sender_full_name": "oli",
        "timestamp": 1614675932
    },
    {
        "content": "<p>you mean the comments</p>",
        "id": 228375793,
        "sender_full_name": "oli",
        "timestamp": 1614675934
    },
    {
        "content": "<p>just strip them with a <code>//[^\\n]*</code> regex</p>",
        "id": 228375826,
        "sender_full_name": "oli",
        "timestamp": 1614675952
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/269128-miri/topic/Cron.20Job.20Failure/near/228375706\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span> <a href=\"#narrow/stream/269128-miri/topic/Cron.20Job.20Failure/near/228375411\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/269128-miri/topic/Cron.20Job.20Failure/near/228375238\">said</a>:</p>\n<blockquote>\n<p>we have one mir-opt PR that gets rid of storage markers in general, but only if no optimizations are run at all</p>\n</blockquote>\n<p>not sure what you mean, it seems to run as part of <code>optimizations</code>, i.e. only with <code>mir-opt-level</code> &gt; 0?</p>\n</blockquote>\n<p>it's only run if we don't emit lifetime markers to llvm. We only emit lifetime markers to llvm if the -O opt level is 0, llvm opt level is irrelevant</p>\n</blockquote>\n<p>I have no idea what you mean but this is <a href=\"https://github.com/rust-lang/rust/pull/78360/files#diff-8299f830f4c4cd8dff330695a684161c749d092036fad1327a4b4a495e3a6c3cR497\">definitely only run for non-0 mir-opt-level</a></p>",
        "id": 228375829,
        "sender_full_name": "RalfJ",
        "timestamp": 1614675957
    },
    {
        "content": "<p>yes, but the mir opt level is irrelevant</p>",
        "id": 228375923,
        "sender_full_name": "oli",
        "timestamp": 1614675980
    },
    {
        "content": "<p>\"yes its relevant but no its not relevant\"?!?</p>",
        "id": 228375945,
        "sender_full_name": "RalfJ",
        "timestamp": 1614675995
    },
    {
        "content": "<p>what I mean is that this is only affected by the LLVM optimization level</p>",
        "id": 228375977,
        "sender_full_name": "oli",
        "timestamp": 1614676015
    },
    {
        "content": "<p>sec</p>",
        "id": 228375990,
        "sender_full_name": "oli",
        "timestamp": 1614676021
    },
    {
        "content": "<p>it is certainly <em>also</em> affected by the mir opt level</p>",
        "id": 228375996,
        "sender_full_name": "RalfJ",
        "timestamp": 1614676024
    },
    {
        "content": "<p>as I just demonstrated and you said \"yes\"</p>",
        "id": 228376011,
        "sender_full_name": "RalfJ",
        "timestamp": 1614676029
    },
    {
        "content": "<p>so I cannot make sense of your statement</p>",
        "id": 228376023,
        "sender_full_name": "RalfJ",
        "timestamp": 1614676034
    },
    {
        "content": "<p>hold up <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 228376037,
        "sender_full_name": "oli",
        "timestamp": 1614676042
    },
    {
        "content": "<p>it is only run if <code>!tcx.sess.emit_lifetime_markers()</code></p>",
        "id": 228376066,
        "sender_full_name": "oli",
        "timestamp": 1614676065
    },
    {
        "content": "<p>and <code>tcx.sess.emit_lifetime_markers()</code> is true if the llvm-opt-level is 0</p>",
        "id": 228376123,
        "sender_full_name": "oli",
        "timestamp": 1614676084
    },
    {
        "content": "<p>oh</p>",
        "id": 228376203,
        "sender_full_name": "oli",
        "timestamp": 1614676107
    },
    {
        "content": "<p>what does miri do with -O</p>",
        "id": 228376213,
        "sender_full_name": "oli",
        "timestamp": 1614676112
    },
    {
        "content": "<p>since there is no llvm</p>",
        "id": 228376218,
        "sender_full_name": "oli",
        "timestamp": 1614676115
    },
    {
        "content": "<p>/me goes check</p>",
        "id": 228376231,
        "sender_full_name": "oli",
        "timestamp": 1614676120
    },
    {
        "content": "<p>it doesnt do anything</p>",
        "id": 228376436,
        "sender_full_name": "RalfJ",
        "timestamp": 1614676207
    },
    {
        "content": "<p>it sets <code>-Zmir-opt-level=0</code></p>",
        "id": 228376464,
        "sender_full_name": "RalfJ",
        "timestamp": 1614676215
    },
    {
        "content": "<p>IMO it makes little sense that a <em>MIR</em> oprimization would be affected by any other flags^^</p>",
        "id": 228376494,
        "sender_full_name": "RalfJ",
        "timestamp": 1614676226
    },
    {
        "content": "<p>well</p>",
        "id": 228376537,
        "sender_full_name": "oli",
        "timestamp": 1614676252
    },
    {
        "content": "<p>the optimization is not for MIR</p>",
        "id": 228376546,
        "sender_full_name": "oli",
        "timestamp": 1614676260
    },
    {
        "content": "<p>it is for LLVM</p>",
        "id": 228376552,
        "sender_full_name": "oli",
        "timestamp": 1614676263
    },
    {
        "content": "<p>making LLVM faster, because it doesn't have to process useless storage markers</p>",
        "id": 228376577,
        "sender_full_name": "oli",
        "timestamp": 1614676274
    },
    {
        "content": "<p>storage markers/llvm-lifetimes are only useful to LLVM if it optimizes things</p>",
        "id": 228376594,
        "sender_full_name": "oli",
        "timestamp": 1614676290
    },
    {
        "content": "<p>we could make this an optimization not affected by mir-opt-level at all</p>",
        "id": 228376641,
        "sender_full_name": "oli",
        "timestamp": 1614676310
    },
    {
        "content": "<p>but it needs to be active depending on things other than mir-opt-level</p>",
        "id": 228376657,
        "sender_full_name": "oli",
        "timestamp": 1614676322
    },
    {
        "content": "<p>anyway, a quick way to test this is to set -O2 or sth</p>",
        "id": 228376721,
        "sender_full_name": "oli",
        "timestamp": 1614676334
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/269128-miri/topic/Cron.20Job.20Failure/near/228376577\">said</a>:</p>\n<blockquote>\n<p>making LLVM faster, because it doesn't have to process useless storage markers</p>\n</blockquote>\n<p>that sounds like something that is better done during MIR -&gt; LLVM lowering then?</p>",
        "id": 228376846,
        "sender_full_name": "RalfJ",
        "timestamp": 1614676396
    },
    {
        "content": "<p>there's a rather large diff comparing yesterday's nightly with current master: <a href=\"https://pastebin.com/r8b1wbPf\">https://pastebin.com/r8b1wbPf</a></p>",
        "id": 228376985,
        "sender_full_name": "RalfJ",
        "timestamp": 1614676464
    },
    {
        "content": "<p>not just the storage markers, also something with panics seems to have changed</p>",
        "id": 228376998,
        "sender_full_name": "RalfJ",
        "timestamp": 1614676480
    },
    {
        "content": "<p>hmm... that looks like way more than just what happened from yesterday</p>",
        "id": 228377088,
        "sender_full_name": "oli",
        "timestamp": 1614676539
    },
    {
        "content": "<p>the <code>const</code> before function calls is fixed since months</p>",
        "id": 228377100,
        "sender_full_name": "oli",
        "timestamp": 1614676549
    },
    {
        "content": "<p>oh lol</p>",
        "id": 228377283,
        "sender_full_name": "RalfJ",
        "timestamp": 1614676645
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Diff\"><pre><span></span><code><span class=\"gd\">-        _1 = const 0i32;</span>\n<span class=\"gi\">+        _1 = const 0_i32;</span>\n</code></pre></div>",
        "id": 228377289,
        "sender_full_name": "oli",
        "timestamp": 1614676647
    },
    {
        "content": "<p>I used nightly 2020-03-01</p>",
        "id": 228377292,
        "sender_full_name": "RalfJ",
        "timestamp": 1614676649
    },
    {
        "content": "<p>spot the mistake^^</p>",
        "id": 228377297,
        "sender_full_name": "RalfJ",
        "timestamp": 1614676651
    },
    {
        "content": "<p>heh</p>",
        "id": 228377299,
        "sender_full_name": "oli",
        "timestamp": 1614676652
    },
    {
        "content": "<p>man, whatever happened to time</p>",
        "id": 228377311,
        "sender_full_name": "RalfJ",
        "timestamp": 1614676663
    },
    {
        "content": "<p>was just about to say, there's so many differences here</p>",
        "id": 228377312,
        "sender_full_name": "oli",
        "timestamp": 1614676663
    },
    {
        "content": "<p>but it looks indeed like we're missing all storage markers</p>",
        "id": 228377402,
        "sender_full_name": "oli",
        "timestamp": 1614676696
    },
    {
        "content": "<p>yeah the storage markers are the only difference</p>",
        "id": 228377445,
        "sender_full_name": "RalfJ",
        "timestamp": 1614676724
    },
    {
        "content": "<p>miri is passing neither <code>-O</code> nor <code>-g</code> so those flags are at whatever the rustc default is</p>",
        "id": 228377463,
        "sender_full_name": "RalfJ",
        "timestamp": 1614676737
    },
    {
        "content": "<p>yea, I just tracked it through our test suite, and we are at <code>-O0</code> due to the way <code>compiletest</code> parses the flags from <code>cargo test</code></p>",
        "id": 228377689,
        "sender_full_name": "oli",
        "timestamp": 1614676840
    },
    {
        "content": "<p>so... quick fix, use <code>-O1</code></p>",
        "id": 228377708,
        "sender_full_name": "oli",
        "timestamp": 1614676851
    },
    {
        "content": "<p>actually... since we want to make the mir-opt level depend on the -O flag at some point, that may be good to do anyway</p>",
        "id": 228377879,
        "sender_full_name": "oli",
        "timestamp": 1614676928
    },
    {
        "content": "<p>Miri will rely on being able to overwrite that I think</p>",
        "id": 228377949,
        "sender_full_name": "RalfJ",
        "timestamp": 1614676966
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/269128-miri/topic/Cron.20Job.20Failure/near/228377708\">said</a>:</p>\n<blockquote>\n<p>so... quick fix, use <code>-O1</code></p>\n</blockquote>\n<p>as the equivalent of <code>-Zmir-opt-level=3</code>, or where?</p>",
        "id": 228378019,
        "sender_full_name": "RalfJ",
        "timestamp": 1614677010
    },
    {
        "content": "<p>okaaay.... so it seems it's not the storage markers after all^^ at least with toolchain <a href=\"https://github.com/rust-lang/rust/commit/09db05762b283bed62d4f92729cfee4646519833\">09db05762b283bed62d4f92729cfee4646519833</a> miri still works</p>",
        "id": 228378050,
        "sender_full_name": "RalfJ",
        "timestamp": 1614677036
    },
    {
        "content": "<p>oh neat we have git commit links</p>",
        "id": 228378118,
        "sender_full_name": "RalfJ",
        "timestamp": 1614677048
    },
    {
        "content": "<p>oh wait no I am probably testing the wrong thing</p>",
        "id": 228378796,
        "sender_full_name": "RalfJ",
        "timestamp": 1614677364
    },
    {
        "content": "<p>yeah I did, <a href=\"https://github.com/rust-lang/rust/commit/09db05762b283bed62d4f92729cfee4646519833\">09db05762b283bed62d4f92729cfee4646519833</a> is definitely the culprit</p>",
        "id": 228379597,
        "sender_full_name": "RalfJ",
        "timestamp": 1614677694
    },
    {
        "content": "<p>cc <span class=\"user-group-mention\" data-user-group-id=\"1162\">@WG-mir-opt</span> we should probably move faster on having a mir-opt level that is on-by-default for <code>-O</code> builds and not make any mir opts depend on the <code>-O</code> flag directly</p>",
        "id": 228380091,
        "sender_full_name": "oli",
        "timestamp": 1614677919
    },
    {
        "content": "<p>Having these two dimensions works if we just think about LLVM, but breaks down with other backends like miri</p>",
        "id": 228380236,
        "sender_full_name": "oli",
        "timestamp": 1614677983
    },
    {
        "content": "<p>Isn't <code>-Zmir-opt-level=0</code> sufficient for miri in this case? (It disables all MIR optimizations, and this is one of them).</p>",
        "id": 228380486,
        "sender_full_name": "tm",
        "timestamp": 1614678098
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"352985\">@tm</span>  yes but we also run the Miri test suite with mir-opt-level=3</p>",
        "id": 228380643,
        "sender_full_name": "RalfJ",
        "timestamp": 1614678168
    },
    {
        "content": "<p>it is expected that this will mask some UB, but that's still good to know about</p>",
        "id": 228380655,
        "sender_full_name": "RalfJ",
        "timestamp": 1614678177
    },
    {
        "content": "<p>in this case, <em>it makes zero sense</em> that removing these storage markers would make miri fail to detect a deadlock caused by acquiring a lock twice... so something seems very wrong</p>",
        "id": 228380697,
        "sender_full_name": "RalfJ",
        "timestamp": 1614678203
    },
    {
        "content": "<p>Why did it fail to detect a deadlock with storage markers removed?</p>",
        "id": 228380980,
        "sender_full_name": "tm",
        "timestamp": 1614678350
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> do you have the correct MIR diff at hand now?</p>",
        "id": 228381093,
        "sender_full_name": "oli",
        "timestamp": 1614678394
    },
    {
        "content": "<p>maybe the issue is not storage markers but rather other optimizations now behaving differently</p>",
        "id": 228381126,
        "sender_full_name": "oli",
        "timestamp": 1614678419
    },
    {
        "content": "<p>the correct mir diff consists only of storage markers</p>",
        "id": 228381190,
        "sender_full_name": "RalfJ",
        "timestamp": 1614678440
    },
    {
        "content": "<p>ok</p>",
        "id": 228381198,
        "sender_full_name": "oli",
        "timestamp": 1614678446
    },
    {
        "content": "<p>hmm</p>",
        "id": 228381201,
        "sender_full_name": "oli",
        "timestamp": 1614678449
    },
    {
        "content": "<p><a href=\"https://pastebin.com/pK27Mjjc\">https://pastebin.com/pK27Mjjc</a></p>",
        "id": 228381217,
        "sender_full_name": "RalfJ",
        "timestamp": 1614678462
    },
    {
        "content": "<p>that's with mir-opt-level=3 on both sides</p>",
        "id": 228381227,
        "sender_full_name": "RalfJ",
        "timestamp": 1614678472
    },
    {
        "content": "<p>stacked borrows is affected by <code>StorageDead</code>, right?</p>",
        "id": 228381266,
        "sender_full_name": "oli",
        "timestamp": 1614678484
    },
    {
        "content": "<p>StorageDead is basically just a <code>free</code></p>",
        "id": 228381317,
        "sender_full_name": "RalfJ",
        "timestamp": 1614678512
    },
    {
        "content": "<p>It <a href=\"https://github.com/rust-lang/miri/actions/runs/613205361\">https://github.com/rust-lang/miri/actions/runs/613205361</a> CI failure in question?</p>",
        "id": 228381333,
        "sender_full_name": "tm",
        "timestamp": 1614678522
    },
    {
        "content": "<p>yes</p>",
        "id": 228381368,
        "sender_full_name": "RalfJ",
        "timestamp": 1614678544
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/miri/pull/1729\">https://github.com/rust-lang/miri/pull/1729</a> is the hackfix^^</p>",
        "id": 228381407,
        "sender_full_name": "RalfJ",
        "timestamp": 1614678564
    },
    {
        "content": "<p>I'd prefer <code>-O</code> as the hackfix over setting the mir-opt-level to 0</p>",
        "id": 228381573,
        "sender_full_name": "oli",
        "timestamp": 1614678644
    },
    {
        "content": "<p>Maybe I am missing something, but error is still there \"unexpected error: '9:5: 12:6: deadlock: the evaluated program deadlocked\", or does that mean something else?</p>",
        "id": 228381781,
        "sender_full_name": "tm",
        "timestamp": 1614678744
    },
    {
        "content": "<p>oh I feel silly now^^ the UB is still detected, it's just the span is wrong / worse than before</p>",
        "id": 228381820,
        "sender_full_name": "RalfJ",
        "timestamp": 1614678775
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/269128-miri/topic/Cron.20Job.20Failure/near/228381573\">said</a>:</p>\n<blockquote>\n<p>I'd prefer <code>-O</code> as the hackfix over setting the mir-opt-level to 0</p>\n</blockquote>\n<p>setting mir-opt-level=0 is what we do elsewhere</p>",
        "id": 228381882,
        "sender_full_name": "RalfJ",
        "timestamp": 1614678800
    },
    {
        "content": "<p>and IMO we should have a consistent hackfix for this^^</p>",
        "id": 228381909,
        "sender_full_name": "RalfJ",
        "timestamp": 1614678818
    },
    {
        "content": "<p>ok</p>",
        "id": 228381928,
        "sender_full_name": "oli",
        "timestamp": 1614678832
    },
    {
        "content": "<blockquote>\n<p>error: tests/compile-fail/data_race/dealloc_write_race_stack.rs:41: expected error not found: Data race detected between Deallocate on Thread(id = 1) and Write on Thread(id = 2)</p>\n</blockquote>\n<p>this doesn't have its span changed, it's just gone</p>",
        "id": 228381980,
        "sender_full_name": "oli",
        "timestamp": 1614678845
    },
    {
        "content": "<p>That one at least does make sense.</p>",
        "id": 228382046,
        "sender_full_name": "tm",
        "timestamp": 1614678871
    },
    {
        "content": "<p>the span is still there:</p>\n<div class=\"codehilite\"><pre><span></span><code>error: Undefined Behavior: Data race detected between Deallocate on Thread(id = 1) and Write on Thread(id = 2), memory(alloc3269,offset=0,size=8)\n(current vector clock = VClock([4, 7]), conflicting timestamp = VClock([0, 0, 7]))\n   --&gt; /home/r/.rustup/toolchains/miri/lib/rustlib/src/rust/library/std/src/sys_common/backtrace.rs:125:18\n    |\n125 |     let result = f();\n    |                  ^^^ Data race detected between Deallocate on Thread(id = 1) and Write on Thread(id = 2), memory(alloc3269,offset=0,size=8)\n(current vector clock = VClock([4, 7]), conflicting timestamp = VClock([0, 0, 7]))\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information\n\n    = note: inside `std::sys_common::backtrace::__rust_begin_short_backtrace::&lt;[closure@tests/compile-fail/data_race/dealloc_write_race_stack.rs:30:24: 42:10], ()&gt;` at /home/r/.rustup/toolchains/miri/lib/rustlib/src/rust/library/std/src/sys_common/backtrace.rs:125:18\n</code></pre></div>",
        "id": 228382047,
        "sender_full_name": "RalfJ",
        "timestamp": 1614678871
    },
    {
        "content": "<p>it's a very bad span</p>",
        "id": 228382051,
        "sender_full_name": "RalfJ",
        "timestamp": 1614678874
    },
    {
        "content": "<p>soemwhere in libstd</p>",
        "id": 228382056,
        "sender_full_name": "RalfJ",
        "timestamp": 1614678882
    },
    {
        "content": "<p>oooh</p>",
        "id": 228382061,
        "sender_full_name": "oli",
        "timestamp": 1614678886
    },
    {
        "content": "<p><span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span></p>",
        "id": 228382066,
        "sender_full_name": "oli",
        "timestamp": 1614678891
    },
    {
        "content": "<p>deallocation now happens when the stack frame is popped; the span for that is the call site it seems</p>",
        "id": 228382115,
        "sender_full_name": "RalfJ",
        "timestamp": 1614678916
    },
    {
        "content": "<p>which does make a tiny bit of sense I guess?</p>",
        "id": 228382129,
        "sender_full_name": "RalfJ",
        "timestamp": 1614678923
    },
    {
        "content": "<p>yes</p>",
        "id": 228382133,
        "sender_full_name": "oli",
        "timestamp": 1614678926
    },
    {
        "content": "<p>so... the opt is not wrong for miri, but it is not useful either... maybe we should limit the opt to mir-opt-level=1?</p>",
        "id": 228382270,
        "sender_full_name": "oli",
        "timestamp": 1614678997
    },
    {
        "content": "<p>we already do?</p>",
        "id": 228382289,
        "sender_full_name": "RalfJ",
        "timestamp": 1614679013
    },
    {
        "content": "<p>that's what I tried to explain above^^</p>",
        "id": 228382299,
        "sender_full_name": "RalfJ",
        "timestamp": 1614679019
    },
    {
        "content": "<p>no</p>",
        "id": 228382304,
        "sender_full_name": "oli",
        "timestamp": 1614679021
    },
    {
        "content": "<p>I mean. ==1</p>",
        "id": 228382315,
        "sender_full_name": "oli",
        "timestamp": 1614679025
    },
    {
        "content": "<p>not &gt;=1</p>",
        "id": 228382333,
        "sender_full_name": "oli",
        "timestamp": 1614679030
    },
    {
        "content": "<p>no please keep this monotone</p>",
        "id": 228382361,
        "sender_full_name": "RalfJ",
        "timestamp": 1614679053
    },
    {
        "content": "<p>having <em>fewer</em> opts at 1 than at 3 is a disaster waiting to happen^^</p>",
        "id": 228382369,
        "sender_full_name": "RalfJ",
        "timestamp": 1614679062
    },
    {
        "content": "<p>it's specifically a debug-mode optimization</p>",
        "id": 228382378,
        "sender_full_name": "oli",
        "timestamp": 1614679070
    },
    {
        "content": "<p>I'm not sure how else to do it</p>",
        "id": 228382439,
        "sender_full_name": "oli",
        "timestamp": 1614679089
    },
    {
        "content": "<p>it makes debug mode compile faster in llvm</p>",
        "id": 228382463,
        "sender_full_name": "oli",
        "timestamp": 1614679100
    },
    {
        "content": "<p>hm</p>",
        "id": 228382493,
        "sender_full_name": "RalfJ",
        "timestamp": 1614679122
    },
    {
        "content": "<p>but I dont want to have to run miri at opt-levels 0,1,2,3 in the test suite^^</p>",
        "id": 228382543,
        "sender_full_name": "RalfJ",
        "timestamp": 1614679153
    },
    {
        "content": "<p>anyway, better hackfix: <a href=\"https://github.com/rust-lang/miri/pull/1729\">https://github.com/rust-lang/miri/pull/1729</a></p>",
        "id": 228382549,
        "sender_full_name": "RalfJ",
        "timestamp": 1614679157
    },
    {
        "content": "<p>I'd rather not pass <code>-O</code> here; there's no precedent for that in the miri test suite so it just opens an entire new axis of potential confusion</p>",
        "id": 228382747,
        "sender_full_name": "RalfJ",
        "timestamp": 1614679233
    },
    {
        "content": "<p>OTOH I guess that's what <code>cargo miri run --release</code> will do?</p>",
        "id": 228382843,
        "sender_full_name": "RalfJ",
        "timestamp": 1614679267
    },
    {
        "content": "<p>yea, and in our test suite it would happen if we used <code>cargo test --release</code> instead of just <code>cargo test</code></p>",
        "id": 228382913,
        "sender_full_name": "oli",
        "timestamp": 1614679320
    },
    {
        "content": "<p>maybe <a href=\"https://github.com/rust-lang/miri/blob/46a08b72ef98a28a1e5bf205b13c8c54f891497b/ci.sh#L28\">https://github.com/rust-lang/miri/blob/46a08b72ef98a28a1e5bf205b13c8c54f891497b/ci.sh#L28</a> should also add some <code>-O</code> flag (<code>-O99</code>? <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span> ). but then we won't test this combination any more that caused the problem.</p>",
        "id": 228382997,
        "sender_full_name": "RalfJ",
        "timestamp": 1614679340
    },
    {
        "content": "<p><code>-O</code> is without numbers</p>",
        "id": 228383010,
        "sender_full_name": "oli",
        "timestamp": 1614679348
    },
    {
        "content": "<p>it's just <code>-O</code> or not</p>",
        "id": 228383017,
        "sender_full_name": "oli",
        "timestamp": 1614679352
    },
    {
        "content": "<p>ah</p>",
        "id": 228383023,
        "sender_full_name": "RalfJ",
        "timestamp": 1614679355
    },
    {
        "content": "<p>and it's what cargo passes?</p>",
        "id": 228383036,
        "sender_full_name": "RalfJ",
        "timestamp": 1614679362
    },
    {
        "content": "<p>yes</p>",
        "id": 228383044,
        "sender_full_name": "oli",
        "timestamp": 1614679367
    },
    {
        "content": "<p>more fine-grained control via <code>-C</code> flags exist, but... let's ignore that</p>",
        "id": 228383069,
        "sender_full_name": "oli",
        "timestamp": 1614679381
    },
    {
        "content": "<p>^^</p>",
        "id": 228383105,
        "sender_full_name": "RalfJ",
        "timestamp": 1614679389
    },
    {
        "content": "<p>too many variables</p>",
        "id": 228383111,
        "sender_full_name": "RalfJ",
        "timestamp": 1614679393
    },
    {
        "content": "<p>Note that debug/release can already mess up UB detection. If someone was making something critical depend on debug assertions, then miri wouldn't have picked it up</p>",
        "id": 228383159,
        "sender_full_name": "oli",
        "timestamp": 1614679430
    },
    {
        "content": "<p>so technically we already had to run both with <code>-O</code> and without...</p>",
        "id": 228383219,
        "sender_full_name": "oli",
        "timestamp": 1614679448
    },
    {
        "content": "<p>well yeah but that's expected</p>",
        "id": 228383348,
        "sender_full_name": "RalfJ",
        "timestamp": 1614679500
    },
    {
        "content": "<p>I think when I wrote that <code>ci.sh</code> I assumed that <code>mir-opt-level=3</code> would basically imply -O as far as Miri is concerned... and that probably even was true back then^^</p>",
        "id": 228383410,
        "sender_full_name": "RalfJ",
        "timestamp": 1614679528
    },
    {
        "content": "<p>Thanks all and sorry for the fuzz, I should have realized earlier that the span is just different, not gone^^</p>",
        "id": 228384156,
        "sender_full_name": "RalfJ",
        "timestamp": 1614679878
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"124288\">@oli</span> any idea why our test suite output is so horrible? it's really hard to tell which test the error belongs to. it's already not great with compiletest in rustc but somehow this seems worse.</p>",
        "id": 228384225,
        "sender_full_name": "RalfJ",
        "timestamp": 1614679908
    },
    {
        "content": "<p>on CI we set <code>RUST_TEST_NOCAPTURE=1</code>, not sure if that makes it better or worse^^</p>",
        "id": 228384334,
        "sender_full_name": "RalfJ",
        "timestamp": 1614679938
    },
    {
        "content": "<p>and of course <code>RUST_BACKTRACE=1</code>, which annoyingly also applies to compiletest itself it seems? can we somehow set that only for the miri invoked by compiletest?</p>",
        "id": 228384480,
        "sender_full_name": "RalfJ",
        "timestamp": 1614679994
    },
    {
        "content": "<p>it's a mix between getting results immediately and getting results at the end... in other crates I ended up just creating a custom script instead of using the not-horrible-but-not-good-for-anyone compiletest</p>",
        "id": 228384675,
        "sender_full_name": "oli",
        "timestamp": 1614680083
    },
    {
        "content": "<p>but then we'd have to reimplement the rustc error parsing stuff^^</p>",
        "id": 228385001,
        "sender_full_name": "RalfJ",
        "timestamp": 1614680250
    },
    {
        "content": "<p>However, I am surprised that <code>RUST_TEST_NOCAPTURE</code> seems to make basically no difference</p>",
        "id": 228385138,
        "sender_full_name": "RalfJ",
        "timestamp": 1614680326
    },
    {
        "content": "<p>things look the same locally and on CI...</p>",
        "id": 228385148,
        "sender_full_name": "RalfJ",
        "timestamp": 1614680332
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span> <a href=\"#narrow/stream/269128-miri/topic/Cron.20Job.20Failure/near/228385001\">said</a>:</p>\n<blockquote>\n<p>but then we'd have to reimplement the rustc error parsing stuff^^</p>\n</blockquote>\n<p>now that is something we should just move into a separate (stable) crate in the compiler and publish</p>",
        "id": 228385512,
        "sender_full_name": "oli",
        "timestamp": 1614680511
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span> <a href=\"#narrow/stream/269128-miri/topic/Cron.20Job.20Failure/near/228385138\">said</a>:</p>\n<blockquote>\n<p>However, I am surprised that <code>RUST_TEST_NOCAPTURE</code> seems to make basically no difference</p>\n</blockquote>\n<p>I've never used that before, maybe it's the wrong flag?</p>",
        "id": 228385630,
        "sender_full_name": "oli",
        "timestamp": 1614680547
    },
    {
        "content": "<p>no grepping has a hit in compiletest</p>",
        "id": 228385990,
        "sender_full_name": "RalfJ",
        "timestamp": 1614680729
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/269128-miri/topic/Cron.20Job.20Failure/near/228385512\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span> <a href=\"#narrow/stream/269128-miri/topic/Cron.20Job.20Failure/near/228385001\">said</a>:</p>\n<blockquote>\n<p>but then we'd have to reimplement the rustc error parsing stuff^^</p>\n</blockquote>\n<p>now that is something we should just move into a separate (stable) crate in the compiler and publish</p>\n</blockquote>\n<p>there's a \"ui tests for proc macros\" crate, maybe we could use that</p>",
        "id": 228386106,
        "sender_full_name": "RalfJ",
        "timestamp": 1614680779
    },
    {
        "content": "<p>not sure if it does error msg parsing though</p>",
        "id": 228386132,
        "sender_full_name": "RalfJ",
        "timestamp": 1614680790
    },
    {
        "content": "<p>well... <em>do we need it</em>?</p>",
        "id": 228389005,
        "sender_full_name": "oli",
        "timestamp": 1614682183
    },
    {
        "content": "<p>wouldn't ui dumps suffice actually?</p>",
        "id": 228389026,
        "sender_full_name": "oli",
        "timestamp": 1614682194
    },
    {
        "content": "<p>hmm... probably not cross platform though</p>",
        "id": 228389039,
        "sender_full_name": "oli",
        "timestamp": 1614682201
    },
    {
        "content": "<p>ugh</p>",
        "id": 228389042,
        "sender_full_name": "oli",
        "timestamp": 1614682201
    },
    {
        "content": "<p>yeah we'd have to do heavy normalization</p>",
        "id": 228464124,
        "sender_full_name": "RalfJ",
        "timestamp": 1614710983
    },
    {
        "content": "<p>in particular when the span involves libstd code...</p>",
        "id": 228464162,
        "sender_full_name": "RalfJ",
        "timestamp": 1614710998
    },
    {
        "content": "<p>IIUC in <a href=\"https://github.com/rust-lang/rust/issues/82736\">#82736</a>, <code>-Zmir-opt-level=3</code> was bumped to <code>-Zmir-opt-level=4</code>, and <code>-Zmir-opt-level=2</code> was bumped to <code>-Zmir-opt-level=3</code>, but the <code>ci.sh</code> is not changed after <a href=\"https://github.com/rust-lang/miri/issues/1735\">miri#1735</a>. So, out of curiosity, are the tests now run under a lower <code>mir-opt-level</code> that is equivalents to the previous <code>2</code> (or did I misunderstand <a href=\"https://github.com/rust-lang/rust/issues/82736\">#82736</a>)?</p>",
        "id": 229478625,
        "sender_full_name": "hyd-dev",
        "timestamp": 1615297626
    },
    {
        "content": "<p>ah indeed, we need to bump it in miri, too</p>",
        "id": 229479003,
        "sender_full_name": "oli",
        "timestamp": 1615297783
    }
]