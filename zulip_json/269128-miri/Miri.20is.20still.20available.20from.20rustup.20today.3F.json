[
    {
        "content": "<p>I was <a href=\"https://github.com/rust-lang/rust/issues/79129#issuecomment-728797150\">told</a> that Miri won't be shipped in rustup if its <a href=\"https://github.com/rust-lang/rust/issues/81341\">tests failed</a>, and I expected it to be missing today. However Miri is still <a href=\"https://rust-lang.github.io/rustup-components-history/x86_64-pc-windows-msvc.html\">available</a>? Won't it be broken with <code>--target=*windows*</code> today <em>(I haven't tested that, so I may be wrong)</em>?</p>\n<p><em>(first time using <img alt=\":zulip:\" class=\"emoji\" src=\"/static/generated/emoji/images/emoji/unicode/zulip.png\" title=\"zulip\">, not sure if this should be posted in <a class=\"stream\" data-stream-id=\"241545\" href=\"/#narrow/stream/241545-t-release\">#t-release</a>  instead?)</em></p>",
        "id": 223863400,
        "sender_full_name": "hyd-dev",
        "timestamp": 1611560731
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"274471\">@Arlie Davis</span> <a href=\"#narrow/stream/269128-miri/topic/Installing.20and.20using.20a.20local.20miri/near/223866629\">said</a>:</p>\n<blockquote>\n<p>Right, it broke due to my PR in Rust. This broke Miri on Windows, because libstd now directly binds to several DLL imports, where previously libstd use GetProcAddress to dynamically bind to these DLL imports. I had no idea that this would break miri, or I would have delayed that PR.</p>\n</blockquote>\n<p>Did you mean to reply in this topic instead?</p>",
        "id": 223867367,
        "sender_full_name": "hyd-dev",
        "timestamp": 1611563584
    },
    {
        "content": "<p>Probably, yes.  I'm a little sleep-deprived, right now.  :/</p>",
        "id": 223867409,
        "sender_full_name": "Arlie Davis",
        "timestamp": 1611563626
    },
    {
        "content": "<p>If someone could help me figure out how to build miri from sources (which I _think_ I have) and then run the built binaries, I can debug it and get it fixed as soon as possible. But <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> said yesterday that it was probably too much effort to do, for someone who is not yet familiar with getting miri build and tested.</p>",
        "id": 223867792,
        "sender_full_name": "Arlie Davis",
        "timestamp": 1611563947
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"374396\">@hyd-dev</span> the Miri submodule shipped with rustc is separately tested on Linux and Windows, to decide whether or not to ship that version of Miri</p>",
        "id": 223870403,
        "sender_full_name": "RalfJ",
        "timestamp": 1611565700
    },
    {
        "content": "<p>so a Windows-only failure currently doesn't block the Linux rustup component from shipping</p>",
        "id": 223870428,
        "sender_full_name": "RalfJ",
        "timestamp": 1611565720
    },
    {
        "content": "<p>however, you are right that this will break <code>--target $windows</code> on Linux hosts... I haven't thought about that</p>",
        "id": 223870448,
        "sender_full_name": "RalfJ",
        "timestamp": 1611565736
    },
    {
        "content": "<p>Oh, actually we are even shipping the Windows version... yeah, I had to add some special logic to stop shipping Miri when tests fail (it's tricky since the dist builders don't even run the tests), but I only added that for Linux</p>",
        "id": 223870630,
        "sender_full_name": "RalfJ",
        "timestamp": 1611565876
    },
    {
        "content": "<p>it's very rare that tests fail only on Windows so I didn't give that case much thought</p>",
        "id": 223870644,
        "sender_full_name": "RalfJ",
        "timestamp": 1611565893
    },
    {
        "content": "<p>The code for that is <a href=\"https://github.com/rust-lang/rust/blob/d3163e96553ae8cb1fca0e62084b124e8b98310b/src/tools/build-manifest/src/main.rs#L259\">living here</a>; seems like that could be extended to also check the Windows toolstate, if we wanted to fix this problem</p>",
        "id": 223871987,
        "sender_full_name": "RalfJ",
        "timestamp": 1611566746
    },
    {
        "content": "<p>Thanks for the info. I'm digging into this now, but it's not clear to me where <code>toolstates-linux.json</code> comes from. I think I need <code>toolstates-windows.json</code>. It used to <a href=\"https://github.com/rust-lang/rust/pull/65274/files#diff-de85a30ea5d9d8da7aae61a6c99ae29e429f2e821cddd54dce79cec52ea8dff1R268\">exist</a> in <a href=\"https://github.com/rust-lang/rust/issues/65274\">#65274</a>, but disappears now. Will <code>build-manifest</code> be able to <code>File::open(self.input.join(\"toolstates-windows.json\"))</code> if I add <code>DEPLOY_TOOLSTATES_JSON: toolstates-windows.json</code> <a href=\"https://github.com/rust-lang/rust/blob/9b3242982202707be2485b1e4cf5f3b34466a38d/src/ci/github-actions/ci.yml#L531-L533\">here</a>?</p>",
        "id": 224637486,
        "sender_full_name": "hyd-dev",
        "timestamp": 1612089861
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"374396\">@hyd-dev</span> good question, no idea... I recall <span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> did something to make that JSON file be around</p>",
        "id": 224876226,
        "sender_full_name": "RalfJ",
        "timestamp": 1612275348
    },
    {
        "content": "<p>he might know what to do to also keep the windows JSON file around :)</p>",
        "id": 224876240,
        "sender_full_name": "RalfJ",
        "timestamp": 1612275359
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/blob/f6cb45ad01a4518f615926f39801996622f46179/src/ci/github-actions/ci.yml#L425\">https://github.com/rust-lang/rust/blob/f6cb45ad01a4518f615926f39801996622f46179/src/ci/github-actions/ci.yml#L425</a></p>",
        "id": 224878184,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1612276215
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> I was asking</p>\n<blockquote>\n<p>Will <code>build-manifest</code> be able to <code>File::open(self.input.join(\"toolstates-windows.json\"))</code> if I add <code>DEPLOY_TOOLSTATES_JSON: toolstates-windows.json</code> <a href=\"https://github.com/rust-lang/rust/blob/9b3242982202707be2485b1e4cf5f3b34466a38d/src/ci/github-actions/ci.yml#L531-L533\">here</a>?</p>\n</blockquote>\n<p>So the answer is \"yes\"?</p>",
        "id": 224880055,
        "sender_full_name": "hyd-dev",
        "timestamp": 1612277060
    },
    {
        "content": "<p>yes</p>",
        "id": 224880109,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1612277084
    },
    {
        "content": "<p>PR submitted: <a href=\"https://github.com/rust-lang/rust/issues/81666\">#81666</a></p>",
        "id": 224900049,
        "sender_full_name": "hyd-dev",
        "timestamp": 1612284857
    }
]