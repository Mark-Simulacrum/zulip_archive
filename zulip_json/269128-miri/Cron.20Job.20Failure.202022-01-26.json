[
    {
        "content": "<p>Dear <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> and <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></p>\n<p>It would appear that the Miri cron job build failed. Would you mind investigating this issue?</p>\n<p>Thanks in advance!<br>\nSincerely,<br>\nThe Miri Cronjobs Bot</p>",
        "id": 269427873,
        "sender_full_name": "miri cronjobs",
        "timestamp": 1643210423
    },
    {
        "content": "<p>this is like a game of whack-a-mole^^</p>",
        "id": 269432096,
        "sender_full_name": "RalfJ",
        "timestamp": 1643212039
    },
    {
        "content": "<p>looks to be related to the remove_dir_all fix</p>\n<div class=\"codehilite\"><pre><span></span><code>error: unsupported operation: unsupported macOS dlsym: openat\n   --&gt; /Users/runner/.rustup/toolchains/master/lib/rustlib/src/rust/library/std/src/sys/unix/weak.rs:150:5\n    |\n150 |     libc::dlsym(libc::RTLD_DEFAULT, name.as_ptr()) as usize\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unsupported macOS dlsym: openat\n</code></pre></div>",
        "id": 269432112,
        "sender_full_name": "RalfJ",
        "timestamp": 1643212050
    },
    {
        "content": "<p>Uh, is it expected that the fallback implementation still (seemingly) has the same TOCTOU issue as before?<br>\n<a href=\"https://github.com/rust-lang/rust/blob/2c2c1593acc5479a4b502d51bb5fea239766c235/library/std/src/sys_common/fs.rs#L30\">https://github.com/rust-lang/rust/blob/2c2c1593acc5479a4b502d51bb5fea239766c235/library/std/src/sys_common/fs.rs#L30</a></p>",
        "id": 269432850,
        "sender_full_name": "RalfJ",
        "timestamp": 1643212261
    },
    {
        "content": "<p>this similar code has a reassuring comment at least:<br>\n<a href=\"https://github.com/rust-lang/rust/blob/495c7b31aaef783c583d2a0304002367df0a1474/library/std/src/sys/unix/fs.rs#L1697\">https://github.com/rust-lang/rust/blob/495c7b31aaef783c583d2a0304002367df0a1474/library/std/src/sys/unix/fs.rs#L1697</a></p>",
        "id": 269433619,
        "sender_full_name": "RalfJ",
        "timestamp": 1643212456
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span> <a href=\"#narrow/stream/269128-miri/topic/Cron.20Job.20Failure.202022-01-26/near/269432096\">said</a>:</p>\n<blockquote>\n<p>this is like a game of whack-a-mole^^</p>\n</blockquote>\n<p>and here is the next mole :(<br>\n<a href=\"https://github.com/rust-lang/rust/pull/92778\">https://github.com/rust-lang/rust/pull/92778</a></p>",
        "id": 269518743,
        "sender_full_name": "RalfJ",
        "timestamp": 1643251285
    },
    {
        "content": "<p>Is the fix just adding a readdir impl around here? <a href=\"https://github.com/rust-lang/miri/blob/master/src/shims/posix/linux/foreign_items.rs#L46-L51\">https://github.com/rust-lang/miri/blob/master/src/shims/posix/linux/foreign_items.rs#L46-L51</a></p>",
        "id": 269519754,
        "sender_full_name": "Nick12",
        "timestamp": 1643252410
    },
    {
        "content": "<p>I tried running tests locally against /rust head in rust-version and got this error</p>\n<div class=\"codehilite\" data-code-language=\"patch\"><pre><span></span><code>+error: unsupported operation: io error Uncategorized cannot be translated into a raw os error\n+    --&gt; D:/.rustup/toolchains/miri/lib/rustlib/src/rust/library/std/src/sys/unix/fs.rs:1165:18\n+     |\n+1165 |     cvt(unsafe { libc::symlink(original.as_ptr(), link.as_ptr()) })?;\n+     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ io error Uncategorized cannot be translated into a raw os error\n+     |\n+     = help: this is likely not a bug in the program; it indicates that the program performed an operation that the interpreter does not support\n+\n+     = note: inside `std::sys::unix::fs::symlink` at D:/.rustup/toolchains/miri/lib/rustlib/src/rust/library/std/src/sys/unix/fs.rs:1165:18\n+     = note: inside `std::os::unix::fs::symlink::&lt;&amp;std::path::PathBuf, &amp;std::path::PathBuf&gt;` at D:/.rustup/toolchains/miri/lib/rustlib/src/rust/library/std/src/os/unix/fs.rs:900:5\n+note: inside `test_symlink` at $DIR/fs.rs:229:5\n+    --&gt; $DIR/fs.rs:229:5\n+     |\n+229  |     std::os::unix::fs::symlink(&amp;path, &amp;symlink_path).unwrap();\n+     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+note: inside `main` at $DIR/fs.rs:24:5\n+    --&gt; $DIR/fs.rs:24:5\n+     |\n+24   |     test_symlink();\n+     |     ^^^^^^^^^^^^^^\n</code></pre></div>\n<p>On <a href=\"https://github.com/rust-lang/miri/blob/master/src/shims/posix/fs.rs#L818\">https://github.com/rust-lang/miri/blob/master/src/shims/posix/fs.rs#L818</a><br>\nBut I think it's because I am cross-running x86_64-unknown-linux-gnu from windows</p>",
        "id": 269520809,
        "sender_full_name": "Nick12",
        "timestamp": 1643253517
    },
    {
        "content": "<p>yeah the fix is adding a readdir impl</p>",
        "id": 269520915,
        "sender_full_name": "RalfJ",
        "timestamp": 1643253613
    },
    {
        "content": "<p>which could become a bit annoying, in particular managing that memory buffer that it will have to allocate to store the dirent it returns...</p>",
        "id": 269520952,
        "sender_full_name": "RalfJ",
        "timestamp": 1643253674
    },
    {
        "content": "<p>I was about to say that is a strange error... but we do test cross-running x86_64-unknown-linux-gnu from windows on CI so I wonder why it doesnt work for you</p>",
        "id": 269521014,
        "sender_full_name": "RalfJ",
        "timestamp": 1643253729
    },
    {
        "content": "<p>possibly the filesystem we run this on supports symlinks but the one you are on does not?</p>",
        "id": 269521024,
        "sender_full_name": "RalfJ",
        "timestamp": 1643253744
    },
    {
        "content": "<p>Running as admin changed the error to readdir<br>\nCreating symlinks on windows requires admin</p>",
        "id": 269521210,
        "sender_full_name": "Nick12",
        "timestamp": 1643253968
    },
    {
        "content": "<p>I added a dbg! call to check the error to figure it out</p>\n<div class=\"codehilite\"><pre><span></span><code>[src\\shims\\posix\\fs.rs:803] fs::symlink_file(src, dst) = Err(\n    Os {\n        code: 1314,\n        kind: Uncategorized,\n        message: &quot;A required privilege is not held by the client.&quot;,\n    },\n)\n</code></pre></div>",
        "id": 269521233,
        "sender_full_name": "Nick12",
        "timestamp": 1643254019
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"219940\">Nick12</span> <a href=\"#narrow/stream/269128-miri/topic/Cron.20Job.20Failure.202022-01-26/near/269521210\">said</a>:</p>\n<blockquote>\n<p>Running as admin changed the error to readdir<br>\nCreating symlinks on windows requires admin</p>\n</blockquote>\n<p>ah, joy... and it seems GH CI runs windows jobs as admin then? fun fun.<br>\nnot sure if there is a good way to disable that test on windows hosts...</p>",
        "id": 269522128,
        "sender_full_name": "RalfJ",
        "timestamp": 1643254946
    }
]