[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120827\">@Ben Kimock (Saethlin)</span> FWIW, regarding false positives in <code>prctl</code>, I would accept a PR against Miri that treats <code>prctl</code> like we <a href=\"https://github.com/rust-lang/miri/blob/fb01df538e30cf63bdcbadad61828940ca8ec578/src/shims/posix/linux/foreign_items.rs#L135\">treat <code>syscall</code></a>. probably best to add a <code>check_shim_variadic</code> that does that and gets used (almost) everywhere that we currently use <code>check_abi_and_shim_symbol_clash</code> directly. also that would be a good place to properly treat the first N arguments that are <em>not</em> variadic...</p>\n<p>I don't think the <code>check</code> functions even know if the call was variadic or not so I'd punt on checking that for now. (basically, assuming that variadic and non-variadic calls with the same signature are equivalent if all arguments are <code>abi::Scalar</code>.)</p>",
        "id": 278072052,
        "sender_full_name": "RalfJ",
        "timestamp": 1649272384
    },
    {
        "content": "<p>FWIW I am somewhat surprised that you are saying <code>open</code> lead to a reputation of Miri having many false positives... that was just an unsupported (or partially supported) FFI, right? I dont think we ever got a bug report for that, just a PR fixing it one day. We also never got a bug report about a <code>prctl</code> false positive.</p>",
        "id": 278086968,
        "sender_full_name": "RalfJ",
        "timestamp": 1649279621
    },
    {
        "content": "<p>I did not mean that <code>open</code> on its own led to this, just that it added to the poor reputation</p>",
        "id": 278087785,
        "sender_full_name": "Ben Kimock (Saethlin)",
        "timestamp": 1649280108
    },
    {
        "content": "<p>There is a lot more ambient grumbling in the community about Miri than there are bug reports</p>",
        "id": 278087850,
        "sender_full_name": "Ben Kimock (Saethlin)",
        "timestamp": 1649280132
    },
    {
        "content": "<p>Also, you \"just got a PR fixing it one day\" because I managed to nerdsnipe someone into making that PR ;)</p>",
        "id": 278088693,
        "sender_full_name": "Ben Kimock (Saethlin)",
        "timestamp": 1649280486
    },
    {
        "content": "<p>I find it concerning that I know absolutely nothing about that grumbling. I guess I am looking in the wrong spots.</p>",
        "id": 278088707,
        "sender_full_name": "RalfJ",
        "timestamp": 1649280495
    },
    {
        "content": "<p>specifically for false positives I really would have hoped people report bugs...</p>",
        "id": 278088819,
        "sender_full_name": "RalfJ",
        "timestamp": 1649280556
    },
    {
        "content": "<p>I think the experimental nature of Miri is a significant obstacle to getting good feedback flowing directly to the project. It seems like way too often when people encounter a problem, be it with Miri's platform support itself or with the fact that they don't understand an error or they don't understand how to make their code conform to Stacked Borrows, they just throw up their hands and hope that a future revision will accommodate their use or that Miri will just go away.</p>",
        "id": 278089165,
        "sender_full_name": "Ben Kimock (Saethlin)",
        "timestamp": 1649280744
    },
    {
        "content": "<p>With platform/FFI support especially, it seems like people have an impression that the situation is harder to improve than it is. It's not all that hard to write a new shim or to improve a shim. Maybe the error should invite people to do this?</p>",
        "id": 278089254,
        "sender_full_name": "Ben Kimock (Saethlin)",
        "timestamp": 1649280813
    },
    {
        "content": "<p>it depends heavily on the shim</p>",
        "id": 278089391,
        "sender_full_name": "RalfJ",
        "timestamp": 1649280902
    },
    {
        "content": "<p>some shims are a lot of work</p>",
        "id": 278089400,
        "sender_full_name": "RalfJ",
        "timestamp": 1649280907
    },
    {
        "content": "<p>like, I wouldnt even know how to implement the stuff required to make tokio start...</p>",
        "id": 278089430,
        "sender_full_name": "RalfJ",
        "timestamp": 1649280927
    },
    {
        "content": "<p>Oh dear, I've been thinking of looking into <code>epoll_create1</code></p>",
        "id": 278090215,
        "sender_full_name": "Ben Kimock (Saethlin)",
        "timestamp": 1649281327
    },
    {
        "content": "<p>I mean I'd be very happy if someone could pull it off :)</p>",
        "id": 278094477,
        "sender_full_name": "RalfJ",
        "timestamp": 1649283910
    },
    {
        "content": "<p>It's on my todo list for this year</p>",
        "id": 278118741,
        "sender_full_name": "oli",
        "timestamp": 1649308872
    },
    {
        "content": "<p>That would be really cool. Currently we have to disable the IO driver in all of Tokio's miri tests, but it would be cool to test other stuff with miri too.</p>",
        "id": 278128629,
        "sender_full_name": "Alice Ryhl",
        "timestamp": 1649318101
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span> <a href=\"#narrow/stream/269128-miri/topic/prctl/near/278088707\">said</a>:</p>\n<blockquote>\n<p>I find it concerning that I know absolutely nothing about that grumbling. I guess I am looking in the wrong spots.<br>\nspecifically for false positives I really would have hoped people report bugs...</p>\n</blockquote>\n<p>I ran into this one when I tried to use Miri for something that uses <code>mmap</code>. I never voiced my concerns anywhere, but at the time I had a thought that \"I'll revisit this later when more syscalls are added\" <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span> I don't see an open issue at the moment, but saw this issue that is now closed: <a href=\"https://github.com/rust-lang/miri/issues/1181\">https://github.com/rust-lang/miri/issues/1181</a> I'm planning to revisit my <code>mmap</code> use case in the next few months. I would be happy to create a Github issue, unless it is already supported today? :)</p>",
        "id": 278133731,
        "sender_full_name": "Pointerbender",
        "timestamp": 1649321249
    },
    {
        "content": "<p>it's not supported, no. :) yeah feel free to file wishlist bugs for supporting more shims, might be good for others that are looking for good things to work one :D</p>",
        "id": 278197928,
        "sender_full_name": "RalfJ",
        "timestamp": 1649352061
    },
    {
        "content": "<p>I hope the error you get when calling <code>mmap</code> is clear enough that this is not a \"false positive\" but a lack of support?</p>",
        "id": 278197965,
        "sender_full_name": "RalfJ",
        "timestamp": 1649352089
    },
    {
        "content": "<p>Here's a wishlist <a href=\"https://github.com/rust-lang/miri/issues/2057\">https://github.com/rust-lang/miri/issues/2057</a></p>",
        "id": 278213791,
        "sender_full_name": "Ben Kimock (Saethlin)",
        "timestamp": 1649359267
    },
    {
        "content": "<p>in exchange, I made prctl more permissive ;)<br>\n<a href=\"https://github.com/rust-lang/miri/pull/2058\">https://github.com/rust-lang/miri/pull/2058</a></p>",
        "id": 278222141,
        "sender_full_name": "RalfJ",
        "timestamp": 1649363440
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120791\">RalfJ</span> <a href=\"#narrow/stream/269128-miri/topic/prctl/near/278197965\">said</a>:</p>\n<blockquote>\n<p>I hope the error you get when calling <code>mmap</code> is clear enough that this is not a \"false positive\" but a lack of support?</p>\n</blockquote>\n<p>I will give it another try in the next few days and follow up with current status and a new Github issue :)</p>",
        "id": 278271868,
        "sender_full_name": "Pointerbender",
        "timestamp": 1649406667
    },
    {
        "content": "<p>okay. :D<br>\nFWIW <code>mmap</code> sounds like one of those that is very tricky to implement since it is an extremely low-level form of cross-process communication. But maybe there are modes of use of <code>mmap</code> that are not that bad?</p>",
        "id": 278299653,
        "sender_full_name": "RalfJ",
        "timestamp": 1649422590
    },
    {
        "content": "<p>Sometimes its not used to communicate with other processes, but just to read/write to a file.</p>",
        "id": 278300435,
        "sender_full_name": "Alice Ryhl",
        "timestamp": 1649422970
    },
    {
        "content": "<p>There also exist some flags that make the memory \"private\" (either through a private copy-on-write mapping, by reserving it for the instantiating program only, optionally even shielded from passing it down to forked child processes).</p>",
        "id": 278302086,
        "sender_full_name": "Pointerbender",
        "timestamp": 1649423764
    },
    {
        "content": "<p>although my use case also includes data structures shared inter-process :D</p>",
        "id": 278302247,
        "sender_full_name": "Pointerbender",
        "timestamp": 1649423840
    },
    {
        "content": "<p>(maybe that use case can still be tested through Miri if it maps the same memory twice within the same program and accesses those from different threads)</p>",
        "id": 278302453,
        "sender_full_name": "Pointerbender",
        "timestamp": 1649423922
    }
]