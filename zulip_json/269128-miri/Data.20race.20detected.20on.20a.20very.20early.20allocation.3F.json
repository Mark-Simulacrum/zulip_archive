[
    {
        "content": "<p>I recently dug this error out of my archive of Miri errors:</p>\n<div class=\"codehilite\"><pre><span></span><code>thread &#39;rustc&#39; panicked at &#39;called `Result::unwrap()` on an `Err` value: InterpErrorInfo(InterpErrorInfoInner { kind: Data race detected between Deallocate on Thread(id = 1) and Read on Thread(id = 0, name = &quot;main&quot;) at alloc245+0x13 (current vector clock = VClock([10, 2]), conflicting timestamp = VClock([15])), backtrace: None })&#39;, src/tools/miri/src/eval.rs:321:32\n</code></pre></div>\n<p>It happened when running on <code>bevy_asset</code> 0.6.0 with <code>rustc 1.60.0-nightly (6abb6385b 2022-01-26)</code>. Unfortunately I don't have a lockfile for the run that produced this, and it was some time ago. I can't reproduce it, though I haven't tried winding back my toolchain.</p>\n<p>But I'm asking here because that is a <em>really</em> low allocation ID. That's so early that turning on allocation tracking either doesn't print anything for it, or that allocation is solidly part of the Rust runtime, in <code>std::rt::init</code>.</p>\n<p>Does anyone know what's going on here? Kinda hoping I'm just running into a bug that was fixed between January 26 and now.</p>",
        "id": 274634467,
        "sender_full_name": "Ben Kimock (Saethlin)",
        "timestamp": 1646791105
    },
    {
        "content": "<p>do you know which commit of Miri that was with? seems odd that it would show this as a panic</p>",
        "id": 274747618,
        "sender_full_name": "RalfJ",
        "timestamp": 1646857592
    },
    {
        "content": "<p>Decently sure it was <code>deb9bfd</code></p>",
        "id": 274749816,
        "sender_full_name": "Ben Kimock (Saethlin)",
        "timestamp": 1646858718
    },
    {
        "content": "<p>so the panic would be at <a href=\"https://github.com/rust-lang/miri/blob/deb9bfd/src/eval.rs#L321\">https://github.com/rust-lang/miri/blob/deb9bfd/src/eval.rs#L321</a></p>",
        "id": 274770121,
        "sender_full_name": "RalfJ",
        "timestamp": 1646870042
    },
    {
        "content": "<p>so the low alloc_id is probably indeed something related to the runtime, specifically env vars</p>",
        "id": 274770194,
        "sender_full_name": "RalfJ",
        "timestamp": 1646870069
    },
    {
        "content": "<p>and it says some thread read an env var without being synchronized with program termination. which I guess can happen if there is a background thread still lingering around that has not been joined?</p>",
        "id": 274770422,
        "sender_full_name": "RalfJ",
        "timestamp": 1646870182
    },
    {
        "content": "<p>That sounds possible. A <em>lot</em> of crates leak threads.</p>",
        "id": 274772911,
        "sender_full_name": "Ben Kimock (Saethlin)",
        "timestamp": 1646871614
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120827\">@Ben Kimock (Saethlin)</span> could you open an issue for this? Not quite sure what to do about that, but seems worth tracking at least</p>",
        "id": 275100748,
        "sender_full_name": "RalfJ",
        "timestamp": 1647096821
    },
    {
        "content": "<p>Will do</p>",
        "id": 275100796,
        "sender_full_name": "Ben Kimock (Saethlin)",
        "timestamp": 1647096845
    }
]