[
    {
        "content": "<p>For some reason, I'm getting a SIGILL with Miri and <code>less</code>. I can scroll through the logs fine, but when I close them I see there was a SIGILL:</p>\n<div class=\"codehilite\" data-code-language=\"Bash Session\"><pre><span></span><code><span class=\"gp\">$</span> <span class=\"nv\">MIRI_LOG</span><span class=\"o\">=</span>debug <span class=\"nv\">RUSTC_LOG_COLOR</span><span class=\"o\">=</span>always ./miri run tests/run-pass/align.rs <span class=\"p\">&amp;|</span> less -R\n<span class=\"go\">fish: Process 13677, './miri' 'MIRI_LOG=debug RUSTC_LOG_COLOR=…' terminated by signal SIGILL (Illegal instruction)</span>\n</code></pre></div>\n<p>This only happens with <code>&amp;|</code> (which pipes stdout <em>and</em> stderr -- equivalent to <code>2&gt;&amp;1 |</code> in bash), not with <code>|</code> (which only pipes stdout). Is anyone else having this issue?</p>\n<p>I don't see this error in bash, but it could be that it's not reporting it.</p>",
        "id": 221256791,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609372348
    },
    {
        "content": "<p>Have you tried with another shell? It's very unlikely but perhaps fish is not handling the pipes correctly?</p>",
        "id": 221258884,
        "sender_full_name": "Iñaki Garay",
        "timestamp": 1609374750
    },
    {
        "content": "<blockquote>\n<p>I don't see this error in bash, but it could be that it's not reporting it.</p>\n</blockquote>\n<p>^</p>",
        "id": 221259298,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609375344
    },
    {
        "content": "<p>It would be weird if fish were not handling the pipes correctly.</p>",
        "id": 221259305,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609375364
    },
    {
        "content": "<p>I don't have this issue when viewing rustc logs btw.</p>",
        "id": 221259309,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609375374
    },
    {
        "content": "<p>When you close it, the stdout and stderr pipes are closed when you use |&amp;. Only stdout is closed if you use |. When a program attempts to write to stdout after it was closed, it will panick. This will attempt to write the panic message to stderr and upon failing to panics again, which aborts the process.</p>",
        "id": 221273501,
        "sender_full_name": "bjorn3",
        "timestamp": 1609397150
    },
    {
        "content": "<p>But why is it trying to write to stdout when I close it? Also, I don't see any panic message with <code>|</code> so it doesn't seem to be panicking.</p>",
        "id": 221315536,
        "sender_full_name": "Noah Lev",
        "timestamp": 1609447966
    },
    {
        "content": "<p>The log messages are written to stderr, not stdout: <a href=\"https://github.com/rust-lang/rust/blob/44e3daf5eee8263dfc3a2509e78ddd1f6f783a0e/compiler/rustc_driver/src/lib.rs#L1310\">https://github.com/rust-lang/rust/blob/44e3daf5eee8263dfc3a2509e78ddd1f6f783a0e/compiler/rustc_driver/src/lib.rs#L1310</a></p>",
        "id": 221316140,
        "sender_full_name": "bjorn3",
        "timestamp": 1609448644
    },
    {
        "content": "<p><code>tracing_tree</code> panics on every error while writing: <a href=\"https://github.com/davidbarsky/tracing-tree/blob/876f942bda5c31987a73e4177a401c1197b2698c/src/format.rs#L159\">https://github.com/davidbarsky/tracing-tree/blob/876f942bda5c31987a73e4177a401c1197b2698c/src/format.rs#L159</a></p>",
        "id": 221316289,
        "sender_full_name": "bjorn3",
        "timestamp": 1609448855
    }
]