[
    {
        "content": "<p>Hi everyone,</p>\n<p>I'm trying to use miri in the test suite of a work project for our own sake and got an UB error in one of the tests. I tried to reproduce a minimum example and it still returns an UB error.</p>\n<p>The code:</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">tokio</span>::<span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">sync</span>::<span class=\"p\">{</span><span class=\"n\">RwLock</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">RwLockMappedWriteGuard</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">RwLockReadGuard</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">RwLockWriteGuard</span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">time</span>::<span class=\"p\">{</span><span class=\"n\">sleep</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">Duration</span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"k\">use</span><span class=\"w\"> </span><span class=\"n\">std</span>::<span class=\"p\">{</span><span class=\"n\">collections</span>::<span class=\"n\">HashMap</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">hash</span>::<span class=\"n\">Hash</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">sync</span>::<span class=\"n\">Arc</span><span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"k\">struct</span> <span class=\"nc\">Map</span><span class=\"o\">&lt;</span><span class=\"n\">K</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">V</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">inner</span>: <span class=\"nc\">RwLock</span><span class=\"o\">&lt;</span><span class=\"n\">HashMap</span><span class=\"o\">&lt;</span><span class=\"n\">K</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">V</span><span class=\"o\">&gt;&gt;</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">impl</span><span class=\"o\">&lt;</span><span class=\"n\">K</span>: <span class=\"nc\">Hash</span><span class=\"w\"> </span><span class=\"o\">+</span><span class=\"w\"> </span><span class=\"nb\">Eq</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">V</span>: <span class=\"nb\">Default</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">Map</span><span class=\"o\">&lt;</span><span class=\"n\">K</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">V</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">new</span><span class=\"p\">()</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">Self</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"bp\">Self</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">inner</span>: <span class=\"nc\">RwLock</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">HashMap</span>::<span class=\"n\">new</span><span class=\"p\">()),</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">key</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">K</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Option</span><span class=\"o\">&lt;</span><span class=\"n\">RwLockReadGuard</span><span class=\"o\">&lt;'</span><span class=\"nb\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">V</span><span class=\"o\">&gt;&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">map</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">inner</span><span class=\"p\">.</span><span class=\"n\">read</span><span class=\"p\">().</span><span class=\"k\">await</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"w\">        </span><span class=\"n\">RwLockReadGuard</span>::<span class=\"n\">try_map</span><span class=\"p\">(</span><span class=\"n\">map</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">map</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">map</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">)).</span><span class=\"n\">ok</span><span class=\"p\">()</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">get_mut_or_default</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">key</span>: <span class=\"nc\">K</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">RwLockMappedWriteGuard</span><span class=\"o\">&lt;'</span><span class=\"nb\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">V</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">map</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">inner</span><span class=\"p\">.</span><span class=\"n\">write</span><span class=\"p\">().</span><span class=\"k\">await</span><span class=\"p\">;</span><span class=\"w\"></span>\n\n<span class=\"w\">        </span><span class=\"n\">RwLockWriteGuard</span>::<span class=\"n\">map</span><span class=\"p\">(</span><span class=\"n\">map</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">|</span><span class=\"n\">map</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"n\">map</span><span class=\"p\">.</span><span class=\"n\">entry</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">).</span><span class=\"n\">or_default</span><span class=\"p\">())</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"cp\">#[tokio::main]</span><span class=\"w\"></span>\n<span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">map</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Arc</span>::<span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">Map</span>::<span class=\"o\">&lt;</span><span class=\"nb\">String</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nb\">String</span><span class=\"o\">&gt;</span>::<span class=\"n\">new</span><span class=\"p\">());</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">key</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"s\">\"hello\"</span><span class=\"p\">.</span><span class=\"n\">to_string</span><span class=\"p\">();</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">task1</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">map</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Arc</span>::<span class=\"n\">clone</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">map</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">key</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">key</span><span class=\"p\">.</span><span class=\"n\">clone</span><span class=\"p\">();</span><span class=\"w\"></span>\n\n<span class=\"w\">        </span><span class=\"n\">tokio</span>::<span class=\"n\">spawn</span><span class=\"p\">(</span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">move</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">vertex</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">map</span><span class=\"p\">.</span><span class=\"n\">get_mut_or_default</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">).</span><span class=\"k\">await</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"n\">Duration</span>::<span class=\"n\">from_secs</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)).</span><span class=\"k\">await</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nb\">drop</span><span class=\"p\">(</span><span class=\"n\">vertex</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">})</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">task2</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">map</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">Arc</span>::<span class=\"n\">clone</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">map</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">key</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">key</span><span class=\"p\">.</span><span class=\"n\">clone</span><span class=\"p\">();</span><span class=\"w\"></span>\n\n<span class=\"w\">        </span><span class=\"n\">tokio</span>::<span class=\"n\">spawn</span><span class=\"p\">(</span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">move</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">map</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">key</span><span class=\"p\">).</span><span class=\"k\">await</span><span class=\"p\">.</span><span class=\"n\">unwrap</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">})</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">r1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">r2</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">tokio</span>::<span class=\"n\">join</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"n\">task1</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">task2</span><span class=\"p\">);</span><span class=\"w\"></span>\n\n<span class=\"w\">    </span><span class=\"n\">r1</span><span class=\"p\">.</span><span class=\"n\">unwrap</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">r2</span><span class=\"p\">.</span><span class=\"n\">unwrap</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>The error:</p>\n<div class=\"codehilite\"><pre><span></span><code>error: Undefined Behavior: trying to reborrow for SharedReadOnly at alloc24055+0x48, but parent tag &lt;68277&gt; does not have an appropriate item in the borrow stack\n  --&gt; src/main.rs:23:53\n   |\n23 |         RwLockReadGuard::try_map(map, |map| map.get(key)).ok()\n   |                                                     ^^^ trying to reborrow for SharedReadOnly at alloc24055+0x48, but parent tag &lt;68277&gt; does not have an appropriate item in the borrow stack\n   |\n   = help: this indicates a potential bug in the program: it performed an invalid operation, but the rules it violated are still experimental\n   = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information\n\n   = note: inside closure at src/main.rs:23:53\n   = note: inside `tokio::sync::RwLockReadGuard::&lt;std::collections::HashMap&lt;std::string::String, std::string::String&gt;&gt;::try_map::&lt;[closure@src/main.rs:23:39: 23:57], std::string::String&gt;` at /home/christian/.cargo/registry/src/github.com-1e\ncc6299db9ec823/tokio-1.12.0/src/sync/rwlock/read_guard.rs:111:26\n</code></pre></div>\n<p>I wonder if this is a bug in <code>tokio</code> or even <code>std</code> but I wanted to be sure by asking to you first.</p>",
        "id": 258235373,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1634663622
    },
    {
        "content": "<p>can you try to use the tag to find out where it was touched? These flags sometimes take ids that you can track: <a href=\"https://github.com/rust-lang/miri/#miri--z-flags-and-environment-variables\">https://github.com/rust-lang/miri/#miri--z-flags-and-environment-variables</a></p>",
        "id": 258238086,
        "sender_full_name": "oli",
        "timestamp": 1634664543
    },
    {
        "content": "<p>this is really weird <span aria-label=\"laughter tears\" class=\"emoji emoji-1f602\" role=\"img\" title=\"laughter tears\">:laughter_tears:</span></p>",
        "id": 258239275,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1634664953
    },
    {
        "content": "<p>the tag is for the <code>key</code></p>",
        "id": 258239382,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1634664977
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>note: tracking was triggered\n  --&gt; src/main.rs:19:25\n   |\n19 |     async fn get(&amp;self, key: &amp;K) -&gt; Option&lt;RwLockReadGuard&lt;&#39;_, V&gt;&gt; {\n   |                         ^^^ created tag 68277\n   |\n   = note: inside closure at src/main.rs:19:25\n   = note: inside `&lt;std::future::from_generator::GenFuture&lt;[static generator@src/main.rs:19:68: 23:6]&gt; as std::future::Future&gt;::poll` at /home/christian/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/future/mod.rs:80:19\nnote: inside closure at src/main.rs:53:13\n  --&gt; src/main.rs:53:13\n   |\n53 |             map.get(&amp;key).await.unwrap();\n   |             ^^^^^^^^^^^^^^^^^^^\n   = note: inside `&lt;std::future::from_generator::GenFuture&lt;[static generator@src/main.rs:52:33: 54:10]&gt; as std::future::Future&gt;::poll` at /home/christian/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/future/mod.rs:80:19\n   = note: inside closure at /home/christian/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/task/core.rs:161:17\n</code></pre></div>",
        "id": 258239396,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1634664981
    },
    {
        "content": "<p>and the alloc_id corresponds to the <code>Box</code> used for one future (i think):</p>\n<div class=\"codehilite\"><pre><span></span><code>note: tracking was triggered\n  --&gt; /home/christian/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/alloc.rs:86:14\n   |\n86 |     unsafe { __rust_alloc(layout.size(), layout.align()) }\n   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ created allocation with id 24055\n   |\n   = note: inside `std::alloc::alloc` at /home/christian/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/alloc.rs:86:14\n   = note: inside `std::alloc::Global::alloc_impl` at /home/christian/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/alloc.rs:166:73\n   = note: inside `&lt;std::alloc::Global as std::alloc::Allocator&gt;::allocate` at /home/christian/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/alloc.rs:226:9\n   = note: inside `alloc::alloc::exchange_malloc` at /home/christian/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/alloc.rs:315:11\n   = note: inside `std::boxed::Box::&lt;tokio::runtime::task::core::Cell&lt;std::future::from_generator::GenFuture&lt;[static generator@src/main.rs:52:33: 54:10]&gt;, std::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;&gt;::new` at /home/christian/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/boxed.rs:192:9\n   = note: inside `tokio::runtime::task::core::Cell::&lt;std::future::from_generator::GenFuture&lt;[static generator@src/main.rs:52:33: 54:10]&gt;, std::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::new` at /home/christian/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/task/core.rs:108:9\n   = note: inside `tokio::runtime::task::raw::RawTask::new::&lt;std::future::from_generator::GenFuture&lt;[static generator@src/main.rs:52:33: 54:10]&gt;, std::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;` at /home/christian/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/task/raw.rs:50:33\n   = note: inside `tokio::runtime::task::new_task::&lt;std::future::from_generator::GenFuture&lt;[static generator@src/main.rs:52:33: 54:10]&gt;, std::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;` at /home/christian/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/task/mod.rs:249:19\n   = note: inside `tokio::runtime::task::list::OwnedTasks::&lt;std::sync::Arc&lt;tokio::runtime::thread_pool::worker::Shared&gt;&gt;::bind::&lt;std::future::from_generator::GenFuture&lt;[static generator@src/main.rs:52:33: 54:10]&gt;&gt;` at /home/christian/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/task/list.rs:93:38\n   = note: inside `tokio::runtime::thread_pool::worker::Shared::bind_new_task::&lt;std::future::from_generator::GenFuture&lt;[static generator@src/main.rs:52:33: 54:10]&gt;&gt;` at /home/christian/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/thread_pool/worker.rs:695:34\n   = note: inside `tokio::runtime::thread_pool::Spawner::spawn::&lt;std::future::from_generator::GenFuture&lt;[static generator@src/main.rs:52:33: 54:10]&gt;&gt;` at /home/christian/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/thread_pool/mod.rs:102:9\n   = note: inside `tokio::runtime::spawner::Spawner::spawn::&lt;std::future::from_generator::GenFuture&lt;[static generator@src/main.rs:52:33: 54:10]&gt;&gt;` at /home/christian/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/spawner.rs:35:45\n   = note: inside `tokio::task::spawn::spawn_inner::&lt;std::future::from_generator::GenFuture&lt;[static generator@src/main.rs:52:33: 54:10]&gt;&gt;` at /home/christian/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/task/spawn.rs:147:9\n   = note: inside `tokio::spawn::&lt;std::future::from_generator::GenFuture&lt;[static generator@src/main.rs:52:33: 54:10]&gt;&gt;` at /home/christian/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/task/spawn.rs:135:13\nnote: inside closure at src/main.rs:52:9\n  --&gt; src/main.rs:52:9\n   |\n52 | /         tokio::spawn(async move {\n53 | |             map.get(&amp;key).await.unwrap();\n54 | |         })\n   | |__________^\n   = note: inside `&lt;std::future::from_generator::GenFuture&lt;[static generator@src/main.rs:33:17: 61:2]&gt; as std::future::Future&gt;::poll` at /home/christian/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/future/mod.rs:80:19\n</code></pre></div>",
        "id": 258239729,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1634665100
    },
    {
        "content": "<p>so this happens when the future called for <code>get</code> tries to borrow the key or smth like that?</p>",
        "id": 258240664,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1634665394
    },
    {
        "content": "<p>Ok so tracking the tag:</p>\n<p>the tag is created for the borrowed key inside <code>get</code>:</p>\n<div class=\"codehilite\"><pre><span></span><code>  --&gt; src/main.rs:19:25\n   |\n19 |     async fn get(&amp;self, key: &amp;K) -&gt; Option&lt;RwLockReadGuard&lt;&#39;_, V&gt;&gt; {\n   |                         ^^^ created tag 68277\n   |\n   = note: inside closure at src/main.rs:19:25\n   = note: inside `&lt;std::future::from_generator::GenFuture&lt;[static generator@src/main.rs:19:68: 23:6]&gt; as std::future::Future&gt;::poll` at /home/christian/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/future/mod.rs:80:19\nnote: inside closure at src/main.rs:53:13\n  --&gt; src/main.rs:53:13\n   |\n53 |             map.get(&amp;key).await.unwrap();\n   |             ^^^^^^^^^^^^^^^^^^^\n</code></pre></div>\n<p>then the tag is popped from the stack when the tokio runtime tries to poll the future for this task</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">        </span><span class=\"n\">tokio</span>::<span class=\"n\">spawn</span><span class=\"p\">(</span><span class=\"k\">async</span><span class=\"w\"> </span><span class=\"k\">move</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">map</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"n\">key</span><span class=\"p\">).</span><span class=\"k\">await</span><span class=\"p\">.</span><span class=\"n\">unwrap</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">})</span><span class=\"w\"></span>\n</code></pre></div>\n<p>here:</p>\n<div class=\"codehilite\"><pre><span></span><code>note: tracking was triggered\n   --&gt; /home/christian/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/task/core.rs:153:45\n    |\n153 |                 let future = match unsafe { &amp;mut *ptr } {\n    |                                             ^^^^^^^^^ popped tracked tag for item [SharedReadOnly for &lt;68277&gt;]\n    |\n    = note: inside closure at /home/christian/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/runtime/task/core.rs:153:45\n    = note: inside `tokio::loom::std::unsafe_cell::UnsafeCell::&lt;tokio::runtime::task::core::Stage&lt;std::future::from_generator::GenFuture&lt;[static generator@src/main.rs:52:33: 54:10]&gt;&gt;&gt;::with_mut::&lt;std::task::Poll&lt;()&gt;, [closure@tokio::runtime::task::core::CoreStage&lt;std::future::from_generator::GenFuture&lt;[static generator@src/main.rs:52:33: 54:10]&gt;&gt;::poll::{closure#0}]&gt;` at /home/christian/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/loom/std/unsafe_cell.rs:14:9\n</code></pre></div>\n<p>and then the reborrow happens:</p>\n<div class=\"codehilite\"><pre><span></span><code>error: Undefined Behavior: trying to reborrow for SharedReadOnly at alloc24055+0x48, but parent tag &lt;68277&gt; does not have an appropriate item in the borrow stack\n  --&gt; src/main.rs:22:53\n   |\n22 |         RwLockReadGuard::try_map(map, |map| map.get(key)).ok()\n   |                                                     ^^^ trying to reborrow for SharedReadOnly at alloc24055+0x48, but parent tag &lt;68277&gt; does not have an appropriate item in the borrow stack\n   |\n   = help: this indicates a potential bug in the program: it performed an invalid operation, but the rules it violated are still experimental\n   = help: see https://github.com/rust-lang/unsafe-code-guidelines/blob/master/wip/stacked-borrows.md for further information\n\n   = note: inside closure at src/main.rs:22:53\n   = note: inside `tokio::sync::RwLockReadGuard::&lt;std::collections::HashMap&lt;std::string::String, std::string::String&gt;&gt;::try_map::&lt;[closure@src/main.rs:22:39: 22:57], std::string::String&gt;` at /home/christian/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.12.0/src/sync/rwlock/read_guard.rs:111:26\n</code></pre></div>",
        "id": 258254142,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1634670313
    },
    {
        "content": "<p>this is the tokio function where the tag is popped from the stack</p>\n<div class=\"codehilite\" data-code-language=\"Rust\"><pre><span></span><code><span class=\"w\">  </span><span class=\"k\">pub</span><span class=\"p\">(</span><span class=\"k\">super</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"k\">fn</span> <span class=\"nf\">poll</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">cx</span>: <span class=\"nc\">Context</span><span class=\"o\">&lt;'</span><span class=\"nb\">_</span><span class=\"o\">&gt;</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nc\">Poll</span><span class=\"o\">&lt;</span><span class=\"n\">T</span>::<span class=\"n\">Output</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">res</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">stage</span><span class=\"p\">.</span><span class=\"n\">with_mut</span><span class=\"p\">(</span><span class=\"o\">|</span><span class=\"n\">ptr</span><span class=\"o\">|</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"c1\">// Safety: The caller ensures mutual exclusion to the field.</span>\n<span class=\"w\">                </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">future</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"o\">*</span><span class=\"n\">ptr</span><span class=\"w\"> </span><span class=\"p\">}</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"c1\">// &lt;&lt;&lt; HERE</span>\n<span class=\"w\">                    </span><span class=\"n\">Stage</span>::<span class=\"n\">Running</span><span class=\"p\">(</span><span class=\"n\">future</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">future</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">                    </span><span class=\"n\">_</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"fm\">unreachable!</span><span class=\"p\">(</span><span class=\"s\">\"unexpected stage\"</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"w\">                </span><span class=\"c1\">// Safety: The caller ensures the future is pinned.</span>\n<span class=\"w\">                </span><span class=\"kd\">let</span><span class=\"w\"> </span><span class=\"n\">future</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"k\">unsafe</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">Pin</span>::<span class=\"n\">new_unchecked</span><span class=\"p\">(</span><span class=\"n\">future</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"w\">                </span><span class=\"n\">future</span><span class=\"p\">.</span><span class=\"n\">poll</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"k\">mut</span><span class=\"w\"> </span><span class=\"n\">cx</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">})</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">};</span><span class=\"w\"></span>\n\n<span class=\"w\">        </span><span class=\"k\">if</span><span class=\"w\"> </span><span class=\"n\">res</span><span class=\"p\">.</span><span class=\"n\">is_ready</span><span class=\"p\">()</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">drop_future_or_output</span><span class=\"p\">();</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"w\">        </span><span class=\"n\">res</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 258254778,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1634670558
    },
    {
        "content": "<p>And it seems there was a related issue before <a href=\"https://github.com/tokio-rs/tokio/issues/3344\">https://github.com/tokio-rs/tokio/issues/3344</a></p>",
        "id": 258256304,
        "sender_full_name": "Christian Poveda",
        "timestamp": 1634671222
    }
]