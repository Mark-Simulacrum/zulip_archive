[
    {
        "content": "<p>Is there a reason that Miri <code>tests/compiletest.rs</code> is using <code>#![feature(custom_test_frameworks)]</code> and a <code>test_runner()</code> function that receives no <code>#[test_case]</code> instead of a <code>main()</code> function and <a href=\"https://doc.rust-lang.org/nightly/cargo/reference/cargo-targets.html#the-harness-field\"><code>harness = false</code></a> in <code>Cargo.toml</code>?</p>\n<p>There is a comment after that <code>#![feature]</code>:</p>\n<blockquote>\n<p>Custom test runner, to avoid libtest being wrapped around compiletest which wraps libtest.</p>\n</blockquote>\n<p>I think setting <code>harness = false</code> is sufficient to prevent libtest from being used, and IMO it's better since <code>main()</code> doesn't need a dummy <code>_tests: &amp;[&amp;()]</code> parameter and I guess <code>harness = false</code> is designed for the case where you don't need the test harness.<br>\n(Looking at the git blame, it seems added in <a href=\"https://github.com/rust-lang/miri/issues/515\">miri#515</a> in 2018. I don't know if Cargo supported <code>harness = false</code> at that time.)</p>\n<p>Happy to <a href=\"https://github.com/hyd-dev/miri/tree/harness-false\">(verify carefully <code>harness = false</code> works well and) submit a PR</a> if this is desirable.</p>",
        "id": 236802101,
        "sender_full_name": "hyd-dev",
        "timestamp": 1619771124
    },
    {
        "content": "<blockquote>\n<p>Is there a reason that Miri tests/compiletest.rs is using #![feature(custom_test_frameworks)] and a test_runner() function that receives no #[test_case] instead of a main() function and harness = false in Cargo.toml?</p>\n</blockquote>\n<p>The reason is \"I didn't know that <code>harness=false</code> exists\" :D</p>",
        "id": 236957365,
        "sender_full_name": "RalfJ",
        "timestamp": 1619866026
    },
    {
        "content": "<p>So yes please submit a PR :)</p>",
        "id": 236957409,
        "sender_full_name": "RalfJ",
        "timestamp": 1619866064
    }
]