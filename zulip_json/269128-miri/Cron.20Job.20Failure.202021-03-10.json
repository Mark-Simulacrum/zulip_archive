[
    {
        "content": "<p>Dear <span class=\"user-mention\" data-user-id=\"120791\">@RalfJ</span> and <span class=\"user-mention\" data-user-id=\"124288\">@oli</span></p>\n<p>It would appear that the Miri cron job build failed. Would you mind investigating this issue?</p>\n<p>Thanks in advance!<br>\nSincerely,<br>\nThe Miri Cronjobs Bot</p>",
        "id": 229613734,
        "sender_full_name": "miri cronjobs",
        "timestamp": 1615361042
    },
    {
        "content": "<p>Something broke string formatting...</p>",
        "id": 229618725,
        "sender_full_name": "RalfJ",
        "timestamp": 1615364104
    },
    {
        "content": "<p>Probably <a href=\"https://github.com/rust-lang/rust/issues/77511\">#77511</a> but I dont see it yet</p>",
        "id": 229618757,
        "sender_full_name": "RalfJ",
        "timestamp": 1615364116
    },
    {
        "content": "<p>ah got it</p>",
        "id": 229619129,
        "sender_full_name": "RalfJ",
        "timestamp": 1615364342
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/rust/pull/82967\">https://github.com/rust-lang/rust/pull/82967</a></p>",
        "id": 229619456,
        "sender_full_name": "RalfJ",
        "timestamp": 1615364550
    },
    {
        "content": "<p>The changes you made make sense, but I don't see how they affect the tests that you added to rustc</p>",
        "id": 229635630,
        "sender_full_name": "oli",
        "timestamp": 1615372854
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/269128-miri/topic/Cron.20Job.20Failure.202021-03-10/near/229635630\">said</a>:</p>\n<blockquote>\n<p>The changes you made make sense, but I don't see how they affect the tests that you added to rustc</p>\n</blockquote>\n<p>they affect only the first test</p>",
        "id": 229807766,
        "sender_full_name": "RalfJ",
        "timestamp": 1615448874
    },
    {
        "content": "<p>before, the <code>size</code> passed to <code>check_ptr_access</code> was the element size; now it is <code>elem_size * count</code></p>",
        "id": 229807822,
        "sender_full_name": "RalfJ",
        "timestamp": 1615448891
    },
    {
        "content": "<p>That was the bug</p>",
        "id": 229807828,
        "sender_full_name": "RalfJ",
        "timestamp": 1615448896
    },
    {
        "content": "<p>right, but the tests only test the <code>0</code> case</p>",
        "id": 229824942,
        "sender_full_name": "oli",
        "timestamp": 1615457623
    },
    {
        "content": "<p>The <code>()</code> pointers are casted to <code>*const i32</code>, so <code>size</code> is 4, before the PR, it checks access for 4 bytes, after the PR, it checks for <code>4 * 0</code> (which is 0) bytes, which allows the <code>copy_nonoverlapping</code> operation?</p>",
        "id": 229826477,
        "sender_full_name": "hyd-dev",
        "timestamp": 1615458418
    },
    {
        "content": "<p>oh I see. I was looking at it from the wrong direction, thanks!</p>",
        "id": 229827181,
        "sender_full_name": "oli",
        "timestamp": 1615458791
    },
    {
        "content": "<p>Exactly. The 0 case was the buggy one.<br>\n(I guess we could also test to make sure that with count=2, we do indeed check 2*size many bytes... but it seems hard to get that wrong and get the 0 right.)</p>",
        "id": 229889288,
        "sender_full_name": "RalfJ",
        "timestamp": 1615483233
    }
]