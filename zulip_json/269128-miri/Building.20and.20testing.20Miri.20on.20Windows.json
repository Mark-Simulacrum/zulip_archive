[
    {
        "content": "<p>I could use some help building miri for Windows. I need to fix the regression caused by my change to rust-lang, which changed several DLL imports from being dynamic (using GetProcAddress) to direct.  All of the instructions and scripts that I see are for Linux; I don't see any instructions on setting up building for Windows.</p>",
        "id": 223837315,
        "sender_full_name": "Arlie Davis",
        "timestamp": 1611524914
    },
    {
        "content": "<p>Right, it broke due to my PR in Rust. This broke Miri on Windows, because libstd now directly binds to several DLL imports, where previously libstd use GetProcAddress to dynamically bind to these DLL imports. I had no idea that this would break miri, or I would have delayed that PR.</p>",
        "id": 223866629,
        "sender_full_name": "Arlie Davis",
        "timestamp": 1611563097
    },
    {
        "content": "<p>I have successfully built miri, and I wrote some changes that look reasonable, but I have not yet been able to test them.  My prototype commit is here: <a href=\"https://github.com/sivadeilra/miri/commit/d2ebf4b6e355c16c793b37603c64faaa743a078e\">https://github.com/sivadeilra/miri/commit/d2ebf4b6e355c16c793b37603c64faaa743a078e</a></p>",
        "id": 223866781,
        "sender_full_name": "Arlie Davis",
        "timestamp": 1611563192
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"274471\">@Arlie Davis</span> the issue is, I haven't used Windows in years.^^ So I'm afraid I have no idea how to do any Rust development on Windows, let alone Miri (which is a bit tricky)...</p>",
        "id": 223869433,
        "sender_full_name": "RalfJ",
        "timestamp": 1611565064
    },
    {
        "content": "<p>The way I work on the Windows side of Miri is on Linux and using <code>--target &lt;windows target&gt;</code>; Miri is fully cross-capable so that works pretty well</p>",
        "id": 223869497,
        "sender_full_name": "RalfJ",
        "timestamp": 1611565085
    },
    {
        "content": "<p>Ok, that makes sense.</p>",
        "id": 223869523,
        "sender_full_name": "Arlie Davis",
        "timestamp": 1611565107
    },
    {
        "content": "<p>So, for the sake of introductions, my day job at Microsoft is enabling Rust on Windows / Azure. And I think Miri is a very important tool. So I would be happy to invest the time to understand how to do this natively on Windows, or at least to make the cross-compiling experience a bit more obvious for Windows devs.</p>",
        "id": 223869595,
        "sender_full_name": "Arlie Davis",
        "timestamp": 1611565181
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"274471\">Arlie Davis</span> <a href=\"#narrow/stream/269128-miri/topic/Installing.20and.20using.20a.20local.20miri/near/223866781\">said</a>:</p>\n<blockquote>\n<p>I have successfully built miri, and I wrote some changes that look reasonable, but I have not yet been able to test them.  My prototype commit is here: <a href=\"https://github.com/sivadeilra/miri/commit/d2ebf4b6e355c16c793b37603c64faaa743a078e\">https://github.com/sivadeilra/miri/commit/d2ebf4b6e355c16c793b37603c64faaa743a078e</a></p>\n</blockquote>\n<p>Nice! Yes that looks like a good start. However, we actually do have the code for fully implementing the lock acquire/release hooks, so we can just use them and get the right semantics that way... here's how that looks: <a href=\"https://github.com/rust-lang/miri/pull/1688\">https://github.com/rust-lang/miri/pull/1688</a></p>",
        "id": 223869617,
        "sender_full_name": "RalfJ",
        "timestamp": 1611565201
    },
    {
        "content": "<p>Note that making <code>AcquireSRWLockExclusive</code> a NOP is wrong even with just one thread: recursively acquiring the same SRWLock twice must not succeed.</p>",
        "id": 223869688,
        "sender_full_name": "RalfJ",
        "timestamp": 1611565227
    },
    {
        "content": "<p>Oh, certainly. This was my first stab at \"can I make a change at all, and see the results\".</p>",
        "id": 223869712,
        "sender_full_name": "Arlie Davis",
        "timestamp": 1611565248
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"274471\">Arlie Davis</span> <a href=\"#narrow/stream/269128-miri/topic/Installing.20and.20using.20a.20local.20miri/near/223869595\">said</a>:</p>\n<blockquote>\n<p>So, for the sake of introductions, my day job at Microsoft is enabling Rust on Windows / Azure. And I think Miri is a very important tool. So I would be happy to invest the time to understand how to do this natively on Windows, or at least to make the cross-compiling experience a bit more obvious for Windows devs.</p>\n</blockquote>\n<p>that sounds great! currently what I hoped would work is that Windows users would be able to somehow use the script at <a href=\"https://github.com/rust-lang/miri/blob/master/miri\">https://github.com/rust-lang/miri/blob/master/miri</a></p>",
        "id": 223869771,
        "sender_full_name": "RalfJ",
        "timestamp": 1611565311
    },
    {
        "content": "<p>the way to test Miri on Linux is <code>./miri test</code></p>",
        "id": 223869801,
        "sender_full_name": "RalfJ",
        "timestamp": 1611565322
    },
    {
        "content": "<p>I suppose one could port that script to Windows, but if possible I'd prefer to not have two scripts to maintain. I am open to rewriting this script in a different language though, e.g. python.</p>",
        "id": 223869855,
        "sender_full_name": "RalfJ",
        "timestamp": 1611565352
    },
    {
        "content": "<p>I'll give that a try. I know a lot of teams use PowerShell now, for portable scripting between Linux and Windows. But Python might be a bit more popular.</p>",
        "id": 223869923,
        "sender_full_name": "Arlie Davis",
        "timestamp": 1611565395
    },
    {
        "content": "<p>Is there any way for me to submit PR jobs to the CI pipelines on GitHub, for testing?</p>",
        "id": 223869951,
        "sender_full_name": "Arlie Davis",
        "timestamp": 1611565419
    },
    {
        "content": "<p>all PRs run the full CI pipeline</p>",
        "id": 223869965,
        "sender_full_name": "RalfJ",
        "timestamp": 1611565433
    },
    {
        "content": "<p>Even drafts?</p>",
        "id": 223870014,
        "sender_full_name": "Arlie Davis",
        "timestamp": 1611565443
    },
    {
        "content": "<p>I think so? I wouldn't know how to exclude drafts^^</p>",
        "id": 223870035,
        "sender_full_name": "RalfJ",
        "timestamp": 1611565456
    },
    {
        "content": "<p>Ok, sounds good. That will be super helpful.</p>",
        "id": 223870047,
        "sender_full_name": "Arlie Davis",
        "timestamp": 1611565467
    },
    {
        "content": "<p>we don't have that many PRs and CI is not nearly as big as rustc, so this worked for us so far</p>",
        "id": 223870049,
        "sender_full_name": "RalfJ",
        "timestamp": 1611565468
    },
    {
        "content": "<p>I think I'm going to get some sleep now, but tomorrow (today?) I'll see if I can get this working. I might have more noob questions for you, though. :)</p>",
        "id": 223870088,
        "sender_full_name": "Arlie Davis",
        "timestamp": 1611565493
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"274471\">Arlie Davis</span> <a href=\"#narrow/stream/269128-miri/topic/Building.20and.20testing.20Miri.20on.20Windows/near/223869923\">said</a>:</p>\n<blockquote>\n<p>I'll give that a try. I know a lot of teams use PowerShell now, for portable scripting between Linux and Windows. But Python might be a bit more popular.</p>\n</blockquote>\n<p>I've never done PowerShell scripting and wouldn't know how to run it on my Linux system, so I'd prefer Python, but could possibly be convinced otherwise ;)</p>",
        "id": 223870162,
        "sender_full_name": "RalfJ",
        "timestamp": 1611565532
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"274471\">Arlie Davis</span> <a href=\"#narrow/stream/269128-miri/topic/Building.20and.20testing.20Miri.20on.20Windows/near/223870088\">said</a>:</p>\n<blockquote>\n<p>I think I'm going to get some sleep now, but tomorrow (today?) I'll see if I can get this working. I might have more noob questions for you, though. :)</p>\n</blockquote>\n<p>sure! I often close Zulip on weekdays to be able to focus on my dayjob, but async communication (e.g. through a PR) should work. Zulip also sends pretty good email notifications on @mentions, so I'd see those even when Zulip is closed.</p>",
        "id": 223870275,
        "sender_full_name": "RalfJ",
        "timestamp": 1611565604
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"274471\">@Arlie Davis</span> btw, I noticed you added quite a few shims that don't seem required for the test suite, such as <code>CreateSymbolicLinkW</code>... was that just for experimentation?</p>",
        "id": 223870748,
        "sender_full_name": "RalfJ",
        "timestamp": 1611565960
    },
    {
        "content": "<p>Yeah, just wanted to cover all of the functions that I had moved to DLL imports, and then run tests to see which were actually hit.</p>",
        "id": 223870785,
        "sender_full_name": "Arlie Davis",
        "timestamp": 1611566006
    },
    {
        "content": "<p>Miri currently supports Windows targets less well than Posix, which we track at <a href=\"https://github.com/rust-lang/miri/issues/1537\">https://github.com/rust-lang/miri/issues/1537</a>. There's a pretty good work-around though, which is to use <code>--target x86_64-unknown-linux-gnu</code> (and we have CI to ensure that this works well on a Windows host)</p>",
        "id": 223870849,
        "sender_full_name": "RalfJ",
        "timestamp": 1611566044
    },
    {
        "content": "<p>But at least the basics should be working. :) The TLS handling took a bit of work to make it compatible with our memory leak checker and some of the more precise pointer/alias tracking, but <a href=\"https://github.com/rust-lang/miri/pull/1648\">eventually we got that resolved</a>.</p>",
        "id": 223871786,
        "sender_full_name": "RalfJ",
        "timestamp": 1611566630
    },
    {
        "content": "<p>(However, some of that code will probably make you cringe.^^ It was mostly written by people with no experience in the Windows API they are emulating here. ;)</p>",
        "id": 223872890,
        "sender_full_name": "RalfJ",
        "timestamp": 1611567281
    }
]