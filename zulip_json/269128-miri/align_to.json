[
    {
        "content": "<p>When did miri start supporting align_to? i seem to remember it used to return everything in the first arm of the tuple, but it seems to properly handle stuff now.</p>\n<p>Does it still ever return it all in the first arm, or otherwise \"spuriously fail\"? say, aligning &amp;[u8] to &amp;[usize].</p>",
        "id": 233975549,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1618078682
    },
    {
        "content": "<p>I'm optimizing a function in libcore, and in the past when I've done similar optimizations to this, I've had to cfg(not(miri)) it off, because it needed to align pointers. This time normal align_to works for my needs, but i remember miri being a bit... annoying with it in the past</p>",
        "id": 233975980,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1618079060
    },
    {
        "content": "<blockquote>\n<p>When did miri start supporting align_to?</p>\n</blockquote>\n<p><a href=\"https://github.com/rust-lang/miri/pull/1513\">https://github.com/rust-lang/miri/pull/1513</a></p>",
        "id": 233978264,
        "sender_full_name": "RalfJ",
        "timestamp": 1618080951
    },
    {
        "content": "<p>under default flags, Miri should behave exactly like runtime code now. so I guess that is a \"no\" to your 2nd question.</p>",
        "id": 233978313,
        "sender_full_name": "RalfJ",
        "timestamp": 1618080971
    },
    {
        "content": "<p><code>-Zmiri-symbolic-alignment-check</code> opts-in to the old behavior</p>",
        "id": 233978328,
        "sender_full_name": "RalfJ",
        "timestamp": 1618080992
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"209168\">Thom Chiovoloni</span> <a href=\"#narrow/stream/269128-miri/topic/align_to/near/233975980\">said</a>:</p>\n<blockquote>\n<p>I'm optimizing a function in libcore, and in the past when I've done similar optimizations to this, I've had to cfg(not(miri)) it off, because it needed to align pointers. This time normal align_to works for my needs, but i remember miri being a bit... annoying with it in the past</p>\n</blockquote>\n<p>this is surprising; don't these optimizations have to handle the unaligned lead/tail anyway? so they should work under symbolic alignment without extra work, since that will just mean that the lead/tail loop ends up doing <em>all</em> the work?</p>",
        "id": 233978385,
        "sender_full_name": "RalfJ",
        "timestamp": 1618081076
    },
    {
        "content": "<blockquote>\n<p>don't these optimizations have to handle the unaligned lead/tail anyway</p>\n</blockquote>\n<p>They do, but LLVM has some issues determining the size of the slice and ends up unrolling and autovectorizing a lot on a function never called with a slice larger than size_of::&lt;usize&gt;(). might have found another workaround, though</p>",
        "id": 233978804,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1618081408
    },
    {
        "content": "<p>the llvm behavior is not a dealbreaker but the reason i noticed this function was llvm doing a bad job on autovec</p>",
        "id": 233978865,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1618081446
    },
    {
        "content": "<p>oh I see</p>",
        "id": 233978949,
        "sender_full_name": "RalfJ",
        "timestamp": 1618081530
    },
    {
        "content": "<p>well I assume symbolic alignment support will inevitably bitrot over time, I kind of gave up on that fight^^</p>",
        "id": 233978959,
        "sender_full_name": "RalfJ",
        "timestamp": 1618081545
    },
    {
        "content": "<p>so if it's a lot of work... don't feel obliged to support that</p>",
        "id": 233979019,
        "sender_full_name": "RalfJ",
        "timestamp": 1618081565
    },
    {
        "content": "<p>so, while i'm pretty sure this workaround solves the issue, and actually improves performance further</p>",
        "id": 233979624,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1618082101
    },
    {
        "content": "<p>i'm actually glad to hear about that since it made it hard to test alignement-sensitive code over all possible alignments in miri</p>",
        "id": 233979655,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1618082124
    },
    {
        "content": "<p>it felt like the kind of thing that was more useful if you didnt test your code (enough) &gt;_&gt;</p>",
        "id": 233979670,
        "sender_full_name": "Thom Chiovoloni",
        "timestamp": 1618082144
    }
]