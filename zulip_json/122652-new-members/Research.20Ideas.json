[
    {
        "content": "<p>Hi everyone. My name is Nathan. I recently started a masters program as part of a compiler research group. I am exploring topic ideas for my thesis proposal and, being fond of Rust, thought I would drop in to ask: what are some of the open research topics that would be useful for rustc?</p>\n<p>Nice to be here!</p>",
        "id": 257303017,
        "sender_full_name": "Nathan Henderson",
        "timestamp": 1634094059
    },
    {
        "content": "<p>Don’t know much about it but I would recommend the formal methods group, they seem to be doing some very interesting high level work. They have a Zulip stream on here you can subscribe to: <a class=\"stream\" data-stream-id=\"183875\" href=\"/#narrow/stream/183875-wg-formal-methods\">#wg-formal-methods</a></p>",
        "id": 257303764,
        "sender_full_name": "Timothy Maloney",
        "timestamp": 1634094766
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"450553\">@Nathan Henderson</span> What's your area of interest within compilers? Formal methods, type theory, optimization, code generation, compilation performance, query systems, ...</p>",
        "id": 257311025,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1634101125
    },
    {
        "content": "<p>Do you lean more towards the theory, or more towards the implementation? There are dissertation-worthy topics in both.</p>",
        "id": 257311076,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1634101185
    },
    {
        "content": "<p>Thanks Timothy, I'll check that out.</p>",
        "id": 257311516,
        "sender_full_name": "Nathan Henderson",
        "timestamp": 1634101511
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> Good clarification questions. I left it initially broad to get any type of suggestion. More specifically, optimizations, compilation performance, and runtime environments. But I am open and interested in exploring topics outside of those as well.</p>",
        "id": 257311895,
        "sender_full_name": "Nathan Henderson",
        "timestamp": 1634101880
    },
    {
        "content": "<p>Oooh, that's <em>great</em>. Definitely my cup of tea. :)</p>",
        "id": 257311921,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1634101917
    },
    {
        "content": "<p>I can think of several topics in that specific area.</p>",
        "id": 257312039,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1634102023
    },
    {
        "content": "<p>Here are a few high-level ideas; happy to go into more detail on any of them:</p>\n<ul>\n<li>Reducing the impact of splitting code into \"codegen units\" (CGUs), so that we can generate more code in parallel without reducing the runtime performance of that code. (In particular, handling inlining better.)</li>\n<li>Making code generation and intermediate representation generation more \"lazy\", so that we don't generate code or even IR for any code we're not going to use, across an entire crate dependency graph.</li>\n<li>Incremental linking in rustc (either via lld or a new linker like mold).</li>\n</ul>",
        "id": 257312712,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1634102613
    },
    {
        "content": "<p>A quick Google shows that Gold already seems to support incremental linking (at the expense of LTO). Not sure if it could be made more efficient by tying it in with the query system or not, though.<br>\n<a href=\"https://gcc.gnu.org/wiki/GoldIncrementalLinking\">https://gcc.gnu.org/wiki/GoldIncrementalLinking</a></p>",
        "id": 257357413,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1634128600
    },
    {
        "content": "<p>Better codegen unit partitioning would also likely be a good topic.<br>\n<a href=\"https://github.com/rust-lang/rust/issues/89281\">https://github.com/rust-lang/rust/issues/89281</a></p>",
        "id": 257357689,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1634128717
    },
    {
        "content": "<p>Incremental ThinLTO also sounds interesting, do we have that? <a href=\"https://clang.llvm.org/docs/ThinLTO.html#incremental\">https://clang.llvm.org/docs/ThinLTO.html#incremental</a> But I wouldn't call it a research idea per se.</p>",
        "id": 257357849,
        "sender_full_name": "Laurențiu",
        "timestamp": 1634128798
    },
    {
        "content": "<p>Lots of things in <a href=\"https://github.com/rust-lang/rust/issues/47660\">https://github.com/rust-lang/rust/issues/47660</a> might be good research topics.</p>",
        "id": 257358057,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1634128883
    },
    {
        "content": "<p>Sorry for the later response here. Thank you for the input everyone, I really do appreciate it. You have given me a few interesting directions to explore. </p>\n<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> Each of those sound intriguing. Would you be able to elaborate a bit more on the first problem that you outlined about CGUs?</p>",
        "id": 258748541,
        "sender_full_name": "Nathan Henderson",
        "timestamp": 1634925338
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"450553\">Nathan Henderson</span> <a href=\"#narrow/stream/122652-new-members/topic/Research.20Ideas/near/258748541\">said</a>:</p>\n<blockquote>\n<p>Would you be able to elaborate a bit more on the first problem that you outlined about CGUs?</p>\n</blockquote>\n<p>I think it's basically <a href=\"https://github.com/rust-lang/rust/issues/89281\">https://github.com/rust-lang/rust/issues/89281</a>, which has links to previous discussions.</p>",
        "id": 258753177,
        "sender_full_name": "Laurențiu",
        "timestamp": 1634927326
    }
]