[
    {
        "content": "<p>Hi Everyone,</p>\n<p>I've recently joined the RMC (rust model checker) project which is developed on the top of rustc. I'm still learning my way around rustc and I was wondering if it's possible to run rustc in a debugger while executing cargo build.</p>\n<p>Thanks,</p>",
        "id": 254445589,
        "sender_full_name": "Celina V.",
        "timestamp": 1632347861
    },
    {
        "content": "<p>I would just run <code>cargo +stage1 build -v</code>, and then copy the arguments for the crate you want to debug.  Then, launch the debugger with the appropriate <code>rustc</code> and then paste the arguments to the run command.</p>",
        "id": 254447360,
        "sender_full_name": "Eric Huss",
        "timestamp": 1632348670
    },
    {
        "content": "<p>That's what I've been doing too. Happy to know I wasn't far off.</p>\n<p>I was also trying to override the rustc command used by cargo and replace it with a little script that runs rustc inside gdb instead. Everything runs smoothly but gdb never enters the interactive prompt. I assume it has to do with how cargo is spawning the rustc process.</p>\n<div class=\"codehilite\"><pre><span></span><code>RUSTC=$RUSTC_PATH/scripts/rustc-gdb cargo build -v\n   Compiling simple-lib v0.1.0 (~/rustc/src/test/simple-lib)\n     Running `~/rustc/scripts/rustc-gdb --crate-name simple_lib --edition=2018 src/lib.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C metadata=b022fae5f78c955f -C extra-filename=-b022fae5f78c955f --out-dir ~/rustc/src/test/simple-lib/target/debug/deps -C incremental=~/rustc/src/test/simple-lib/target/debug/incremental -L dependency=~/rustc/src/test/simple-lib/target/debug/deps`\ngdb --args ~/rustc/build/x86_64-unknown-linux-gnu/stage1/bin/rustc --crate-name simple_lib --edition=2018 src/lib.rs --error-format=json --json=diagnostic-rendered-ansi --crate-type lib --emit=dep-info,metadata,link -C embed-bitcode=no -C debuginfo=2 -C metadata=b022fae5f78c955f -C extra-filename=-b022fae5f78c955f --out-dir ~/rustc/src/test/simple-lib/target/debug/deps -C incremental=~/rustc/src/test/simple-lib/target/debug/incremental -L dependency=~/rustc/src/test/simple-lib/target/debug/deps\nGNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1\nCopyright (C) 2018 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type &quot;show copying&quot;\nand &quot;show warranty&quot; for details.\nThis GDB was configured as &quot;x86_64-linux-gnu&quot;.\nType &quot;show configuration&quot; for configuration details.\nFor bug reporting instructions, please see:\n&lt;http://www.gnu.org/software/gdb/bugs/&gt;.\nFind the GDB manual and other documentation resources online at:\n&lt;http://www.gnu.org/software/gdb/documentation/&gt;.\nFor help, type &quot;help&quot;.\nType &quot;apropos word&quot; to search for commands related to &quot;word&quot;...\nReading symbols from ~/rustc/build/x86_64-unknown-linux-gnu/stage1/bin/rustc...done.\nwarning: Missing auto-load script at offset 0 in section .debug_gdb_scripts\nof file ~/rustc/build/x86_64-unknown-linux-gnu/stage1/bin/rustc.\nUse `info auto-load python-scripts [REGEXP]&#39; to list them.\n(gdb) quit\n    Finished dev [unoptimized + debuginfo] target(s) in 0.12s\n</code></pre></div>",
        "id": 254450328,
        "sender_full_name": "Celina V.",
        "timestamp": 1632350109
    },
    {
        "content": "<p>AFAIK rustc doesn't forward stdin to the spawned rustc processes.</p>",
        "id": 254451769,
        "sender_full_name": "bjorn3",
        "timestamp": 1632350910
    },
    {
        "content": "<p>That answers my question. Thanks!</p>",
        "id": 254454405,
        "sender_full_name": "Celina V.",
        "timestamp": 1632352260
    },
    {
        "content": "<p>I wonder if it would be useful to have a command line option that makes the compiler print its process ID to standard error and then stop itself and wait for GDB to be attached.</p>",
        "id": 254580348,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1632421068
    },
    {
        "content": "<p>that would be incredible</p>",
        "id": 254590363,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1632425083
    },
    {
        "content": "<p>in node this is <code>--inspect-brk</code> I think</p>",
        "id": 254590373,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1632425088
    },
    {
        "content": "<p>Happy to review a PR for that.</p>",
        "id": 254607360,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1632431987
    }
]