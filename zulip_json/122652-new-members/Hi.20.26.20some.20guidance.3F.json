[
    {
        "content": "<p>Hello everyone! I am a student who enjoys programming and Rust.<br>\nNow to the main reason I'm here: There is a feature in nightly that I am interested but it seems like it has gone silent on github for a few months now. <code>Implement the feature</code> is done but not <code>Stabilization PR</code></p>\n<p>So I am wondering if any of you can guide me to the proper channel where I can ask about it and possibly do it my self. (I have not touched rust internals before but the instructions seem simple enough)</p>\n<p>Edit: I assume <a class=\"stream\" data-stream-id=\"182449\" href=\"/#narrow/stream/182449-t-compiler.2Fhelp\">#t-compiler/help</a> might be the right place for this?</p>",
        "id": 216581727,
        "sender_full_name": "Spyros",
        "timestamp": 1605257490
    },
    {
        "content": "<p>Hello <span class=\"user-mention\" data-user-id=\"364100\">@Spyros</span>. What feature do you want on stable? Does it seem like there are any things blocking stabilization when you skim the tracking issue?</p>",
        "id": 216582931,
        "sender_full_name": "bjorn3",
        "timestamp": 1605258242
    },
    {
        "content": "<p>The right place depends on what kind of feature it is, but I would guess it would be either <a class=\"stream\" data-stream-id=\"213817\" href=\"/#narrow/stream/213817-t-lang\">#t-lang</a> or <a class=\"stream\" data-stream-id=\"219381\" href=\"/#narrow/stream/219381-t-libs\">#t-libs</a>. In many cases it is not the compiler team that decides to stabilize a feature.</p>",
        "id": 216583051,
        "sender_full_name": "bjorn3",
        "timestamp": 1605258329
    },
    {
        "content": "<p>This is the issue: <a href=\"https://github.com/rust-lang/rust/issues/74217\">https://github.com/rust-lang/rust/issues/74217</a><br>\nIt seems like there has been zero conversation on the topic so so nothing's blocking it. It seems like it's forgotten mostly and someone needs to do the stabilization pr</p>",
        "id": 216583065,
        "sender_full_name": "Spyros",
        "timestamp": 1605258335
    },
    {
        "content": "<p>You could try to comment on the issue that you would like it to be stabilized and see if you get a response within a few days. If not, you should ask in <a class=\"stream\" data-stream-id=\"219381\" href=\"/#narrow/stream/219381-t-libs\">#t-libs</a>.</p>",
        "id": 216583269,
        "sender_full_name": "bjorn3",
        "timestamp": 1605258474
    },
    {
        "content": "<p>Thank you, I'll do this then!</p>",
        "id": 216583364,
        "sender_full_name": "Spyros",
        "timestamp": 1605258526
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"364100\">@Spyros</span> Another option would be to send that stabilization PR: A PR that changes the <code>unstable</code> attribute to <code>stable</code> on those functions. Looks like there's not much to discuss for this feature.</p>",
        "id": 216583774,
        "sender_full_name": "Mara",
        "timestamp": 1605258795
    },
    {
        "content": "<p>This was my first thought but since I haven't done it before I asked on a Rust related server on discord and people basically told me to ask here first so hopefully people could tell me what's is left to do.</p>",
        "id": 216584013,
        "sender_full_name": "Spyros",
        "timestamp": 1605258947
    },
    {
        "content": "<p>If you make that PR, feel free to assign it to me (by writing <code>r? @m-ou-se</code> in the PR description). Then I'll kick off the FCP.</p>",
        "id": 216584188,
        "sender_full_name": "Mara",
        "timestamp": 1605259081
    },
    {
        "content": "<p>Thank you, I think I'll just go ahead and try it! I should give back every now and then anyway!</p>",
        "id": 216584411,
        "sender_full_name": "Spyros",
        "timestamp": 1605259232
    },
    {
        "content": "<p>The <code>stable</code> attribute wants a rust version. The bump to 1.50.0 is happening <em>right now</em>, so you can use <code>since = \"1.50.0\"</code> there.</p>",
        "id": 216584564,
        "sender_full_name": "Mara",
        "timestamp": 1605259326
    },
    {
        "content": "<p>Oh I thought since 1.49 is in nightly I should use that, so that's good to know.</p>",
        "id": 216584702,
        "sender_full_name": "Spyros",
        "timestamp": 1605259423
    },
    {
        "content": "<p>normally yes, but the switch to 1.50.0 is happening as we speak: <a href=\"https://github.com/rust-lang/rust/pull/79014\">https://github.com/rust-lang/rust/pull/79014</a></p>",
        "id": 216584800,
        "sender_full_name": "Mara",
        "timestamp": 1605259483
    },
    {
        "content": "<p>Oh so I missed that window basically, this explains it.</p>",
        "id": 216584862,
        "sender_full_name": "Spyros",
        "timestamp": 1605259525
    },
    {
        "content": "<p>I asked <span class=\"user-mention\" data-user-id=\"121055\">@Pietro Albini</span> to add a role for the libs team on the discord server so it'd be easier to know who to ask these things, but apparently those team roles are going away.</p>",
        "id": 216596975,
        "sender_full_name": "Mara",
        "timestamp": 1605266051
    },
    {
        "content": "<p>(I think it's more accurate that team roles are going away for teams that use zulip)</p>",
        "id": 216597062,
        "sender_full_name": "Pietro Albini",
        "timestamp": 1605266125
    },
    {
        "content": "<p>Hey people, not sure if I should make a new thread for this but in any case, things were not exactly the same as in <a href=\"https://rustc-dev-guide.rust-lang.org/stabilization_guide.html#stabilization-pr\">https://rustc-dev-guide.rust-lang.org/stabilization_guide.html#stabilization-pr</a> though I think I did what was necessary. <br>\nMy question is: How can I test it?<br>\nIs running <code>x.py test</code> enough?</p>",
        "id": 216614920,
        "sender_full_name": "Spyros",
        "timestamp": 1605276469
    },
    {
        "content": "<p>x.py test is probably more than you need</p>",
        "id": 216615965,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605276916
    },
    {
        "content": "<p>If x.py check works that's close enough, and CI will catch any test failures</p>",
        "id": 216615991,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605276928
    },
    {
        "content": "<p>Btw, if you're interested in updating the instructions I'd love to make them more helpful :) there's instructions in <br>\n<a href=\"https://github.com/rust-lang/rustc-dev-guide/issues/932\">https://github.com/rust-lang/rustc-dev-guide/issues/932</a></p>",
        "id": 216616186,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1605277004
    },
    {
        "content": "<p>Oh interesting. I will take a look at the links in the issue because honestly I have no idea if I did everything necessary &amp; correct. <br>\nI will think about working on the doc and if I decide to do it i will reply to the issue, sounds good?</p>",
        "id": 216616566,
        "sender_full_name": "Spyros",
        "timestamp": 1605277153
    },
    {
        "content": "<p>Alright yeah, that is extremely easy after all, pretty much just guessed it myself haha</p>",
        "id": 216617513,
        "sender_full_name": "Spyros",
        "timestamp": 1605277560
    },
    {
        "content": "<p>Hi everyone,  <br>\nI have been thinking for a while of a way to speedup generic compile time (okay, my thought were mostly for C++ but I don't see why they wouldn't apply to Rust too). Before trying to  implement anything I would have liked to get some feedbacks on that, do you think this is possible here? (Maybe it's a stupid idea after all!)</p>",
        "id": 216720628,
        "sender_full_name": "Ogg",
        "timestamp": 1605349367
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"364324\">@Ogg</span> it probably makes sense to open a new topic in <a class=\"stream\" data-stream-id=\"247081\" href=\"/#narrow/stream/247081-t-compiler.2Fperformance\">#t-compiler/performance</a> for this</p>",
        "id": 216720646,
        "sender_full_name": "lcnr",
        "timestamp": 1605349429
    },
    {
        "content": "<p>@lcnr: thanks:)</p>",
        "id": 216720815,
        "sender_full_name": "Ogg",
        "timestamp": 1605349727
    },
    {
        "content": "<p>Hi everyone, <br>\nIs anyone here familiar with the inner workings of rust-analyzer?  I'm trying to figure out how to query a crate for its public declarations.  I've spent some time combing through the source of hir &amp; hir_def, and I've gotten as far as getting a set of crate id's for a project, but I'm a bit at a loss as to how to actually query for the crate contents</p>",
        "id": 216808554,
        "sender_full_name": "Spencer Kohan",
        "timestamp": 1605467411
    },
    {
        "content": "<p>Hi! You probably want to check out <code>CrateDefMap</code> and <code>ImportMap</code> then.</p>",
        "id": 216808578,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1605467518
    },
    {
        "content": "<p>Also, the rust-analyzer team is present in <a class=\"stream\" data-stream-id=\"185405\" href=\"/#narrow/stream/185405-t-compiler.2Fwg-rls-2.2E0\">#t-compiler/wg-rls-2.0</a>, so you might want to ask about rust-analyzer there</p>",
        "id": 216808618,
        "sender_full_name": "Jonas Schievink  [he/him]",
        "timestamp": 1605467540
    },
    {
        "content": "<p>cool, thanks!  I will ask over there</p>",
        "id": 216808681,
        "sender_full_name": "Spencer Kohan",
        "timestamp": 1605467652
    },
    {
        "content": "<p>hallo, just wondering, who else has ever had a 9 mb hello world 3 liner binary?</p>",
        "id": 216977021,
        "sender_full_name": "pilo chow",
        "timestamp": 1605602110
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"364811\">@pilo chow</span> that's normal, but you're probably building a debug binary, which includes debug info. There are a couple of articles about making Rust binaries smaller, like <a href=\"https://arusahni.net/blog/2020/03/optimizing-rust-binary-size.html\">https://arusahni.net/blog/2020/03/optimizing-rust-binary-size.html</a> or <a href=\"https://jamesmunns.com/blog/tinyrocket/\">https://jamesmunns.com/blog/tinyrocket/</a></p>",
        "id": 216979321,
        "sender_full_name": "Laurențiu",
        "timestamp": 1605603936
    },
    {
        "content": "<p>My hello world debug binary is 3.1 MB though, while a thin-LTO, stripped, panic=\"abort\" release binary is 259 KB</p>",
        "id": 216979381,
        "sender_full_name": "Laurențiu",
        "timestamp": 1605603966
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"203546\">@Laurențiu Nicola</span>  No, even with the --release tag, it still is roughly about that size, maybe it just goes down by  a kilobyte or so, although i did receive feedback from someone, they told me its a known bug on certain platforms,(maybe like mine, Manjaro)that rust will end up compiling all symbols even the 1s i dint use, so yeah, maybe that's why, but thanks a lot for your feedback to, really appreciated<br>\nAwesome posts btw, they sure will come in handy</p>",
        "id": 216987640,
        "sender_full_name": "pilo chow",
        "timestamp": 1605609751
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"364811\">@pilo chow</span> Try <code>strip -s target/release/hello</code>. I'm on Arch</p>",
        "id": 216989336,
        "sender_full_name": "Laurențiu",
        "timestamp": 1605611032
    }
]