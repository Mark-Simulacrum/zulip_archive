[
    {
        "content": "<p>Hello everybody,<br>\n I am Surya. I have been using Golang for couple of years now. Getting started in rustlang.<br>\n I came to know that this zulip community is equivalent to the the Gopher's slack channel.<br>\n I do have couple of basic newbie doubts that can be easily addressed through dicussion than by google search. Do we have any stream for newbie doubts of sorts?</p>\n<p>From what I understand <code>match</code> seems to be a syntatic sugar for <code>if else</code> blocks.<br>\nI tried to write an if block equivalent for a <code>match</code> <a href=\"https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7f1c5e214d0f80c0f298e7e7ab789840\">https://play.rust-lang.org/?version=stable&amp;mode=debug&amp;edition=2018&amp;gist=7f1c5e214d0f80c0f298e7e7ab789840</a><br>\nand I am getting an error.</p>\n<p>If it works with match, why isn't my code working with if block.</p>\n<p>Thanks again.</p>",
        "id": 227724541,
        "sender_full_name": "Surya",
        "timestamp": 1614235065
    },
    {
        "content": "<p>If you'd like something more like Slack, you might like the community discord over at <a href=\"https://bit.ly/rust-community\">https://bit.ly/rust-community</a></p>",
        "id": 227725416,
        "sender_full_name": "scottmcm",
        "timestamp": 1614235788
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"125270\">@scottmcm</span></p>",
        "id": 227730536,
        "sender_full_name": "Surya",
        "timestamp": 1614239717
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"379674\">@Surya</span> the syntax you're looking for is <code>if let Ok(v) = result</code></p>",
        "id": 227733024,
        "sender_full_name": "Laurențiu",
        "timestamp": 1614241260
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"203546\">@Laurențiu Nicola</span>  that works.<br>\nThe syntax seems unusual to me. ( I have worked in ruby and golang before)<br>\nresult.Ok  would have been more intuitive to me.</p>",
        "id": 227767285,
        "sender_full_name": "Surya",
        "timestamp": 1614260134
    },
    {
        "content": "<p>For that kind of question I think the standard channel is <a href=\"http://users.rust-lang.org/\">users.rust-lang.org/</a></p>",
        "id": 227767430,
        "sender_full_name": "Olivier FAURE",
        "timestamp": 1614260194
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"263609\">@Olivier FAURE</span>  oh can newbies post there too?</p>",
        "id": 227767545,
        "sender_full_name": "Surya",
        "timestamp": 1614260245
    },
    {
        "content": "<p>Of course they can</p>",
        "id": 227767748,
        "sender_full_name": "Laurențiu",
        "timestamp": 1614260344
    },
    {
        "content": "<p>Yup. It's the standard forum for newcomers who have questions about Rust syntax.</p>",
        "id": 227767755,
        "sender_full_name": "Olivier FAURE",
        "timestamp": 1614260347
    },
    {
        "content": "<p>The Zulip (aka here) is more for developers who work on the Rust compiler and tooling</p>",
        "id": 227767789,
        "sender_full_name": "Olivier FAURE",
        "timestamp": 1614260363
    },
    {
        "content": "<p>That said: If you look at the definition of <code>Result</code>, e.g. here in the standard library docs (<a href=\"https://doc.rust-lang.org/std/result/enum.Result.html\">https://doc.rust-lang.org/std/result/enum.Result.html</a>), you'll see that it is indeed <code>Result::Ok(v)</code>. However, there is a module called <code>prelude</code> which includes some often-used or generally important items (types, functions, ...) by default, including <code>Result</code> itself, as well as the <code>Ok</code> and <code>Err</code> variants. You can look at what else is in there here: <a href=\"https://doc.rust-lang.org/std/prelude/index.html\">https://doc.rust-lang.org/std/prelude/index.html</a></p>",
        "id": 227767886,
        "sender_full_name": "Domenic Quirl",
        "timestamp": 1614260406
    },
    {
        "content": "<p>The syntax looks like this because it's a form of pattern matching, just like in <code>match result { Ok(v) =&gt; ... }</code>. It's not an equality comparison</p>",
        "id": 227768160,
        "sender_full_name": "Laurențiu",
        "timestamp": 1614260532
    },
    {
        "content": "<p>Indeed, I think it's a bit of misrepresentation to say that match is sugar for chained if-else. In fact <code>if let</code> is sugar for <code>match</code>, and <code>match</code> is not reducible to more basic operations. (It is desugared internally in the compiler, but the operations it is desugared into have no surface syntax)</p>",
        "id": 227768466,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1614260670
    },
    {
        "content": "<p><code>match</code> is the only (safe) way to get at the contents in the variants of an enum</p>",
        "id": 227768588,
        "sender_full_name": "Mario Carneiro",
        "timestamp": 1614260713
    },
    {
        "content": "<p>Thank you <span class=\"user-mention\" data-user-id=\"203546\">@Laurențiu Nicola</span> and <span class=\"user-mention\" data-user-id=\"271719\">@Mario Carneiro</span>  that is helpful, my doubt is clear now.</p>",
        "id": 227768714,
        "sender_full_name": "Surya",
        "timestamp": 1614260766
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"337115\">@Domenic Quirl</span>  Thank you for the resources, will read on it.</p>",
        "id": 227768762,
        "sender_full_name": "Surya",
        "timestamp": 1614260785
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"263609\">@Olivier FAURE</span>  Thanks for the info. I will keep myself to discord and the other newbie forum. I am just getting started with Rust and I am not sure if I will be working on rust compiler or tooling anytime soon.</p>",
        "id": 227770865,
        "sender_full_name": "Surya",
        "timestamp": 1614261748
    },
    {
        "content": "<p>Yeah, the compiler is tough. Not <em>that</em> tough (I did my first rustc PR with almost no rust experience), but a lot tougher than just learning rust</p>",
        "id": 227771271,
        "sender_full_name": "Olivier FAURE",
        "timestamp": 1614261892
    },
    {
        "content": "<p>Well, <code>rust-analyzer</code> uses Zulip too, and it has a lower entry bar for contributors (you can build it with <code>cargo build</code> and so on)</p>",
        "id": 227771695,
        "sender_full_name": "Laurențiu",
        "timestamp": 1614262046
    },
    {
        "content": "<p>I will contribute someday soon <span aria-label=\"fingers crossed\" class=\"emoji emoji-1f91e\" role=\"img\" title=\"fingers crossed\">:fingers_crossed:</span> :)</p>",
        "id": 227773406,
        "sender_full_name": "Surya",
        "timestamp": 1614262775
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"379674\">@Surya</span> You are still welcome here as well. It's not that questions are unwelcome here; it's more that there are fewer people to answer them compared to Discord or the users forum.</p>",
        "id": 227797515,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1614271353
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span>  Thanks a lot Josh. Yeah, I understood the context. Thanks again for the friendly note :)</p>",
        "id": 227798479,
        "sender_full_name": "Surya",
        "timestamp": 1614271731
    }
]