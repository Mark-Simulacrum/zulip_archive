[
    {
        "content": "<p>Hello everyone, i came because i believe rust is a great language, and i would love to be a part of it.<br>\nI am particularly interesting in things like rustc (LLVM and the borrow checker), however i am totally stumped on where to get started, even looking at the lexer i am a little perplexed due to how many things it relies on lol. So not really sure where to start. If anyone could give me any tips or resources it would be greatly appreciated :)</p>",
        "id": 191565164,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1585022863
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"276242\">@Riccardo D'Ambrosio</span> </p>\n<p>For work on LLVM / codegen, there's a stream t-compiler/wg-llvm, and for the borrow checker you'll want to look at t-compiler/wg-polonius.<br>\nThe lexer is quite far removed from either of those <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 191565727,
        "sender_full_name": "centril",
        "timestamp": 1585023804
    },
    {
        "content": "<p>If you haven't already, you may want to take a peek at <a href=\"https://rustc-dev-guide.rust-lang.org/about-this-guide.html\" target=\"_blank\" title=\"https://rustc-dev-guide.rust-lang.org/about-this-guide.html\">https://rustc-dev-guide.rust-lang.org/about-this-guide.html</a></p>",
        "id": 191565734,
        "sender_full_name": "centril",
        "timestamp": 1585023834
    },
    {
        "content": "<p>lol i was looking for that guide, i remember it  but for some reason i just could not find it, thank you <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span>. I will read the guide then see if i can get any grasp of how the code works. a big challenge is just finding what does what and where by how many directories there are lol.</p>",
        "id": 191565857,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1585024043
    },
    {
        "content": "<p>It's a big machine ^^ -- but it's getting better organized these days</p>",
        "id": 191565864,
        "sender_full_name": "centril",
        "timestamp": 1585024074
    },
    {
        "content": "<p>I would recommend starting out with some simpler task like fixing a bug (e.g., an ICE), improving a diagnostic, or some such</p>",
        "id": 191565905,
        "sender_full_name": "centril",
        "timestamp": 1585024112
    },
    {
        "content": "<p>Who is responsible for the initial lexing and parsing? is it just a general thing and rustc only deals with the AST?</p>",
        "id": 191565906,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1585024115
    },
    {
        "content": "<p>lexing &amp; parsing is handled in <code>rustc_parse</code></p>",
        "id": 191565917,
        "sender_full_name": "centril",
        "timestamp": 1585024144
    },
    {
        "content": "<p>ah alright, so anything in t-compiler deals with the AST or other intermediates as its input?</p>",
        "id": 191565966,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1585024204
    },
    {
        "content": "<p>it spits out an AST, which gets expanded due to macros, and name resolution happens on AST too. Then we desugar the AST into HIR, another form of AST but simpler</p>",
        "id": 191565970,
        "sender_full_name": "centril",
        "timestamp": 1585024209
    },
    {
        "content": "<p>t-compiler means \"the compiler team\" (<a href=\"https://www.rust-lang.org/governance/teams/compiler\" target=\"_blank\" title=\"https://www.rust-lang.org/governance/teams/compiler\">https://www.rust-lang.org/governance/teams/compiler</a>)</p>",
        "id": 191565980,
        "sender_full_name": "centril",
        "timestamp": 1585024242
    },
    {
        "content": "<p>do you happen to know if there is a way of having rustc spit out intermediate representations like the AST, LLVM code, etc?</p>",
        "id": 191565984,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1585024246
    },
    {
        "content": "<p>Ah alright, misinterpreted <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 191565987,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1585024263
    },
    {
        "content": "<p>for example, <code>t-compiler/wg-traits</code> is the compiler team working group for the trait system</p>",
        "id": 191565994,
        "sender_full_name": "centril",
        "timestamp": 1585024295
    },
    {
        "content": "<p>Yeah that makes sense, i wasnt sure what wg meant, thank you</p>",
        "id": 191566002,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1585024322
    },
    {
        "content": "<p>spitting out the AST vs. LLVM differs; the compiler can emit bitcode via <code>--emit</code></p>",
        "id": 191566040,
        "sender_full_name": "centril",
        "timestamp": 1585024359
    },
    {
        "content": "<p>for spitting out other IRs you can use <code>-Z unpretty</code></p>",
        "id": 191566048,
        "sender_full_name": "centril",
        "timestamp": 1585024383
    },
    {
        "content": "<p>MIR can be spit out with <code>--emit mir</code></p>",
        "id": 191566052,
        "sender_full_name": "centril",
        "timestamp": 1585024391
    },
    {
        "content": "<p>Cool!, thank you a lot for your help <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 191566101,
        "sender_full_name": "Riccardo D'Ambrosio",
        "timestamp": 1585024455
    },
    {
        "content": "<p><span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 191566131,
        "sender_full_name": "centril",
        "timestamp": 1585024509
    }
]