[
    {
        "content": "<p>I decided to try and contribute some minor fixes for the first time and have a few issues/questions.</p>\n<p>First of all, this happened during initial setup:</p>\n<div class=\"codehilite\"><pre><span></span><code>Welcome to the Rust project! What do you want to do with x.py?\na) library: Contribute to the standard library\nb) compiler: Contribute to the compiler itself\nc) codegen: Contribute to the compiler, and also modify LLVM or codegen\nd) tools: Contribute to tools which depend on the compiler, but do not modify it directly (e.g. rustdoc, clippy, miri)\ne) user: Install Rust from source\nPlease choose one (a/b/c/d/e): b\n`x.py` will now use the configuration at .../rust/src/bootstrap/defaults/config.compiler.toml\n\n`rustup` failed to link stage 1 build to `stage1` toolchain\nTo manually link stage 1 build to `stage1` toolchain, run:\n\n            `rustup toolchain link stage1 build/x86_64-unknown-linux-gnu/stage1`\n</code></pre></div>\n<p>Not sure what happened and why, but it is not clear whether this is an issue and what to do, I tried to run that command in <code>rust</code> directory before moving forward, but it failed on me. It is a bit unexpected to see such errors during the initial setup.</p>\n<p>Then I tried to test things with <code>python3 x.py</code> test to see if everything works before making changes and it failed like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>Building stage0 tool error_index_generator (x86_64-unknown-linux-gnu)\n   Compiling same-file v1.0.6\n   Compiling walkdir v2.3.1\n   Compiling error_index_generator v0.0.0 (.../rust/src/tools/error_index_generator)\n    Finished release [optimized] target(s) in 1.59s\n.../rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/error_index_generator: error while loading shared libraries: libLLVM-13-rust-1.59.0-nightly.so: cannot open shared object file: No such file or directory\n\n\ncommand did not execute successfully: &quot;.../rust/build/x86_64-unknown-linux-gnu/stage0-tools-bin/error_index_generator&quot; &quot;html&quot; &quot;.../rust/build/x86_64-unknown-linux-gnu/doc/error-index.html&quot; &quot;1.59.0&quot;\nexpected success, got: exit status: 127\n\n\nBuild completed unsuccessfully in 0:14:09\n</code></pre></div>\n<p>No idea what this is either, there is <a href=\"https://github.com/rust-lang/rust/issues/80096\">https://github.com/rust-lang/rust/issues/80096</a> that is opened for a year, but no workaround mentioned there <span aria-label=\"disappointed\" class=\"emoji emoji-1f61e\" role=\"img\" title=\"disappointed\">:disappointed:</span> </p>\n<p>At this point I tried <code>rustup toolchain link stage1 build/x86_64-unknown-linux-gnu/stage1</code> again and it worked for some reason, but tests still fail the same way.</p>",
        "id": 266144043,
        "sender_full_name": "Nazar Mokrynskyi",
        "timestamp": 1640577405
    },
    {
        "content": "<blockquote>\n<p>Not sure what happened and why, but it is not clear whether this is an issue and what to do, I tried to run that command in rust directory before moving forward, but it failed on me. It is a bit unexpected to see such errors during the initial setup.</p>\n</blockquote>\n<p>can you post the error you got? I know rustup expects a directory to already exist there but I thought we'd hacked around it when adding this feature :( the reason it succeeded the next time is probably that x.py actually built the toolchain instead of using empty directories.</p>\n<blockquote>\n<p>Then I tried to test things with python3 x.py test to see if everything works before making changes and it failed like this:</p>\n</blockquote>\n<p>hmm, my advice to you personally is to use <code>x.py test --exclude src/tools/linkchecker</code>, because it's not prone to breaking in CI but it requires you to have <code>--stage 2</code> to pass locally. I don't have ideas for how to avoid this in the future other than just removing the dependency on rustdoc altogether (which shouldn't be <em>that</em> hard, I just haven't had time).</p>",
        "id": 266172526,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1640611676
    },
    {
        "content": "<p>opened an issue for the <code>x.py setup</code> failure: <a href=\"https://github.com/rust-lang/rust/issues/92319\">https://github.com/rust-lang/rust/issues/92319</a></p>",
        "id": 266172826,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1640611930
    },
    {
        "content": "<p>The error was missing directory indeed:</p>\n<blockquote>\n<p>error: not a directory: 'build/x86_64-unknown-linux-gnu/stage1/lib'</p>\n</blockquote>\n<p>I'm <code>nazar-pc</code> on GitHub</p>",
        "id": 266232582,
        "sender_full_name": "Nazar Mokrynskyi",
        "timestamp": 1640669305
    },
    {
        "content": "<p>With <code>x.py test --exclude src/tools/error_index_generator --exclude src/tools/linkchecker</code> the rest of the tests have passed, thanks!</p>",
        "id": 266233578,
        "sender_full_name": "Nazar Mokrynskyi",
        "timestamp": 1640670888
    },
    {
        "content": "<p>Hello everyone!</p>\n<p>I was trying to setup compiler build and got almost exactly <a href=\"#narrow/stream/122652-new-members/topic/Building.2Ftesting.20rust.20itself.20for.20the.20first.20time/near/266172526\">the same error as Joshua Nelson above</a>:</p>\n<div class=\"codehilite\"><pre><span></span><code>`rustup` failed to link stage 1 build to `stage1` toolchain\nTo manually link stage 1 build to `stage1` toolchain, run:\n\n            `rustup toolchain link stage1 build/x86_64-apple-darwin/stage1`\n</code></pre></div>\n<p>However, running suggested command failed:</p>\n<div class=\"codehilite\"><pre><span></span><code>Î» rustup toolchain link stage1 build/x86_64-apple-darwin/stage1\nerror: not a directory: &#39;build/x86_64-apple-darwin/stage1/lib&#39;\n</code></pre></div>\n<p>OS: Mac OS 11.4<br>\nPython: 3.10.0</p>\n<p>Full logs:<br>\n<a href=\"https://gist.github.com/TmLev/5577611af124299f2c61b6dc2ac2eca8#file-x-logs-L205\">https://gist.github.com/TmLev/5577611af124299f2c61b6dc2ac2eca8#file-x-logs-L205</a></p>\n<p>I've just finished waiting for <code>./x.py check</code> and everything seems fine.</p>",
        "id": 266243793,
        "sender_full_name": "Lev Khoroshansky",
        "timestamp": 1640682989
    },
    {
        "content": "<p>ah, I think <a href=\"https://github.com/rust-lang/rust/blob/e91ad5fc62bdee4a29c18baa5fad2ca42fc91bf4/src/bootstrap/setup.rs#L112\">https://github.com/rust-lang/rust/blob/e91ad5fc62bdee4a29c18baa5fad2ca42fc91bf4/src/bootstrap/setup.rs#L112</a> is missing <code>lib/</code> at the end</p>",
        "id": 266263399,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1640701514
    },
    {
        "content": "<p>also that code probably needs to be using whatever the rust equivalent of <code>mkdir -p</code> is: <a href=\"https://github.com/rust-lang/rust/blob/e91ad5fc62bdee4a29c18baa5fad2ca42fc91bf4/src/bootstrap/setup.rs#L163\">https://github.com/rust-lang/rust/blob/e91ad5fc62bdee4a29c18baa5fad2ca42fc91bf4/src/bootstrap/setup.rs#L163</a></p>",
        "id": 266263421,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1640701547
    },
    {
        "content": "<p>Given that <code>mkdir -p</code> creates a directory with <code>rwx</code> permissions for users, groups, and others; should we worry about these permissions at all?</p>\n<p>Also wouldn't adding <code>lib/</code> at the end only link the stage1 compiler's library and not the whole stage1 build? Sorry if these questions are confusing/don't make sense.</p>",
        "id": 266276139,
        "sender_full_name": "Timothy Maloney",
        "timestamp": 1640712044
    },
    {
        "content": "<blockquote>\n<p>Given that mkdir -p creates a directory with rwx permissions for users, groups, and others; should we worry about these permissions at all?</p>\n</blockquote>\n<p>This should depend on the umask like any file/directory creation. For me it creates it with rwx permission for users and r-x for groups and others.</p>",
        "id": 266276377,
        "sender_full_name": "bjorn3",
        "timestamp": 1640712287
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/122652-new-members/topic/Building.2Ftesting.20rust.20itself.20for.20the.20first.20time/near/266263399\">said</a>:</p>\n<blockquote>\n<p>ah, I think <a href=\"https://github.com/rust-lang/rust/blob/e91ad5fc62bdee4a29c18baa5fad2ca42fc91bf4/src/bootstrap/setup.rs#L112\">https://github.com/rust-lang/rust/blob/e91ad5fc62bdee4a29c18baa5fad2ca42fc91bf4/src/bootstrap/setup.rs#L112</a> is missing <code>lib/</code> at the end</p>\n</blockquote>\n<p>The <code>stage1</code> directory itself is the full sysroot, right? <code>bin</code> and <code>lib</code> are subdirectories of the sysroot.</p>",
        "id": 266276436,
        "sender_full_name": "bjorn3",
        "timestamp": 1640712359
    },
    {
        "content": "<p>Sorry, the terms I am using aren't very clear; yes, <code>stage1</code> is the full sysroot.</p>\n<p>AFAIK the problem is that the <code>lib</code> subdirectory doesn't exist when running <code>x.py setup library</code> so we just need to create that directory first.</p>",
        "id": 266277506,
        "sender_full_name": "Timothy Maloney",
        "timestamp": 1640713334
    },
    {
        "content": "<p>So this error still occurs <em>even if</em> both the <code>lib</code> and <code>bin</code> subfolders are created beforehand.</p>",
        "id": 266306703,
        "sender_full_name": "Timothy Maloney",
        "timestamp": 1640740458
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"402099\">Timothy Maloney</span> <a href=\"#narrow/stream/122652-new-members/topic/Building.2Ftesting.20rust.20itself.20for.20the.20first.20time/near/266306703\">said</a>:</p>\n<blockquote>\n<p>So this error still occurs <em>even if</em> both the <code>lib</code> and <code>bin</code> subfolders are created beforehand.</p>\n</blockquote>\n<p>that can't be true; at least the error should say something different. <span class=\"user-mention\" data-user-id=\"402099\">@Timothy Maloney</span> can you post the error you're now seeing?</p>",
        "id": 266432886,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1640874957
    },
    {
        "content": "<p><a href=\"/user_uploads/4715/yKqaRC-dVrEHMtp0yBLeWv0H/Screen-Shot-2022-01-08-at-7.16.34-AM.png\">Screen-Shot-2022-01-08-at-7.16.34-AM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/yKqaRC-dVrEHMtp0yBLeWv0H/Screen-Shot-2022-01-08-at-7.16.34-AM.png\" title=\"Screen-Shot-2022-01-08-at-7.16.34-AM.png\"><img src=\"/user_uploads/4715/yKqaRC-dVrEHMtp0yBLeWv0H/Screen-Shot-2022-01-08-at-7.16.34-AM.png\"></a></div>",
        "id": 267300732,
        "sender_full_name": "Timothy Maloney",
        "timestamp": 1641655229
    },
    {
        "content": "<p>I create PR to fix this if someone wants to take a look: <a href=\"https://github.com/rust-lang/rust/pull/93487\">https://github.com/rust-lang/rust/pull/93487</a></p>",
        "id": 269952431,
        "sender_full_name": "Yerkebulan Tulibergenov",
        "timestamp": 1643572354
    }
]