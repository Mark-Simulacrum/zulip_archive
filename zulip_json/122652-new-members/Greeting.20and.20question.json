[
    {
        "content": "<p>Hello. I am looking into contributing into the compiler, so I cloned, built and ran the tests and found out that the tests are failing for me. I found out what's probably the reason and now I am wondering if I can help fix the test. Also whether at all should I do that since it is related to another work. And if yes, then what's the best way to approach that. I just don't know what's the best place to start. Should I make a draft PR with the explanation? Or jump into some particular stream here? Thanks for any tips. The current fix (or rather an idea I am trying to incorporate) is here: <a href=\"https://github.com/nertpinx/rust/commit/def7bb9bde3e3c337e1e33fa86904290777a821a\">https://github.com/nertpinx/rust/commit/def7bb9bde3e3c337e1e33fa86904290777a821a</a></p>",
        "id": 273425584,
        "sender_full_name": "Martin Kletzander",
        "timestamp": 1645996564
    },
    {
        "content": "<p>One more thing is that I have <code>rust-format-on-save</code> turned on and the file I am changing in the commit is not formatted according to rustfmt (or maybe it's rust-analyzer that's suggesting the changes), is it fine to fix those too?</p>",
        "id": 273425680,
        "sender_full_name": "Martin Kletzander",
        "timestamp": 1645996707
    },
    {
        "content": "<p>I have run into the same problem.</p>\n<p>I suspect this is because most people use an old version of gdb. I suspect this change doesn't pass the CI, and instead it probably needs to accommodate multiple gdb versions.</p>",
        "id": 273425897,
        "sender_full_name": "Ben Kimock (Saethlin)",
        "timestamp": 1645997030
    },
    {
        "content": "<p>I think your format-on-save is picking up the wrong rustfmt config. The compiler/lib is not a normal Rust codebase :/</p>",
        "id": 273425970,
        "sender_full_name": "Ben Kimock (Saethlin)",
        "timestamp": 1645997097
    },
    {
        "content": "<p>The only way I can think of based on the other things that I've seen in the repo is skipping that test or that part for older versions after fixing it. That has downsides, of course, but feels okay. Should I just let this one go because I picked the bad thing to start with?</p>",
        "id": 273450204,
        "sender_full_name": "Martin Kletzander",
        "timestamp": 1646029332
    },
    {
        "content": "<p>Yep, rustfmt behaves correctly for that one, so I guess it's probably lsp + rust-analyzer together that are unhappy. I'll look into that.</p>",
        "id": 273450247,
        "sender_full_name": "Martin Kletzander",
        "timestamp": 1646029410
    },
    {
        "content": "<p>I'm not an expert on the testing systems for the compiler. You should ask about this situation in <a class=\"stream\" data-stream-id=\"182449\" href=\"/#narrow/stream/182449-t-compiler.2Fhelp\">#t-compiler/help</a>. It really sucks that the tests do not pass at the moment for Arch users.</p>",
        "id": 273515836,
        "sender_full_name": "Ben Kimock (Saethlin)",
        "timestamp": 1646065784
    }
]