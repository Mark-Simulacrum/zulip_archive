[
    {
        "content": "<p>Hi, Rust Team.<br>\nI'm new here, trying to figure out the right way to implement a std lib feature I've developed.<br>\nThe Guide leads me here. Perhaps I could move further, but still not sure about some details.</p>\n<p>So, the feature is a variation on the BufRead::fill_buf method. I would like to implement a new<br>\nmethod:</p>\n<p>BufRead::fill_buf_wrapping(&amp;mut self, at_least: usize) -&gt; Result&lt;&amp;[u8]&gt;</p>\n<p>If there's less than at_least bytes left then it moves remaining bytes to the beginning of the<br>\nbuffer and fills buffer further. When at_least == 0 it behaves exactly the same as fill_buf.</p>\n<p>This is a simple fix which allows to take advantage of existing buffer to process/parse input data<br>\nwith push-back-like functionality if decided to not consume any bytes. End-user solution based on<br>\nread_exact method (and friends) doesn't has push-back functionality or has to handle intermediate<br>\nbuffer.</p>\n<p>Does that sound good?<br>\nAny suggestions for better method name?<br>\nShould I proceed by creating a new RFC?</p>",
        "id": 264922899,
        "sender_full_name": "Kamil Becmer",
        "timestamp": 1639514860
    },
    {
        "content": "<p><a class=\"stream\" data-stream-id=\"219381\" href=\"/#narrow/stream/219381-t-libs\">#t-libs</a> or <a class=\"stream\" data-stream-id=\"122651\" href=\"/#narrow/stream/122651-general\">#general</a> would be good places to ask for initial feedback I think.</p>",
        "id": 264923509,
        "sender_full_name": "Noah Lev",
        "timestamp": 1639515106
    },
    {
        "content": "<p>thanks!</p>",
        "id": 264923625,
        "sender_full_name": "Kamil Becmer",
        "timestamp": 1639515148
    }
]