[
    {
        "content": "<p>what are the criteria then? even though it has a force-push it hasn't been reviewed in 16 days</p>",
        "id": 210079174,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600129874
    },
    {
        "content": "<p>there was a review already by eddy (even though not the reviewer but \"credible\" enough - so the reviewer could be likely waiting on those changes to be made</p>",
        "id": 210079315,
        "sender_full_name": "DPC",
        "timestamp": 1600129978
    },
    {
        "content": "<p>it says waiting-on-review though :/</p>",
        "id": 210079349,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600130012
    },
    {
        "content": "<p>yes because it's still waiting on official reviewer, so it's a case of contradictory things being correct <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 210079412,
        "sender_full_name": "DPC",
        "timestamp": 1600130060
    },
    {
        "content": "<p>(could have been s-waiting-on-author and wouldn't be wrong)</p>",
        "id": 210079428,
        "sender_full_name": "DPC",
        "timestamp": 1600130086
    },
    {
        "content": "<p>well, if it had not had changes for 15 days, triage would have taken notice, right? I guess I'm wondering why rebasing to fix merge conflicts should reset the timer</p>",
        "id": 210079496,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600130151
    },
    {
        "content": "<p>this wasn't a rebase though, it was changes to match a review, so slightly different</p>",
        "id": 210079568,
        "sender_full_name": "DPC",
        "timestamp": 1600130186
    },
    {
        "content": "<p>no, that was to address a merge conflict: <a href=\"https://github.com/rust-lang/rust/pull/76043#issuecomment-686853500\">https://github.com/rust-lang/rust/pull/76043#issuecomment-686853500</a><br>\nyou can't see the earlier changes to match a review because github doesn't show them after a force-push</p>",
        "id": 210079619,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600130260
    },
    {
        "content": "<p>also generally reviewers wait for the author to resolve conflicts, so it makes sense to reset the timer</p>",
        "id": 210079685,
        "sender_full_name": "DPC",
        "timestamp": 1600130304
    },
    {
        "content": "<p>it seems like that could lead to <em>really</em> long wait times</p>",
        "id": 210079699,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600130330
    },
    {
        "content": "<p>imagine a PR that keeps hitting merge conflicts every 10 days</p>",
        "id": 210079711,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600130341
    },
    {
        "content": "<p>that has happened tbh, and normally I would re-assign it to speed it once the 2nd iteration of conflicts have been resolved, but this is more from a manual inspection so has to be done on a case-by-case basis</p>",
        "id": 210079803,
        "sender_full_name": "DPC",
        "timestamp": 1600130437
    },
    {
        "content": "<p>also the window was moved to 15 days recently, and was 7 days before that (started at 3 days before this group was formed), so chances of a pr constantly hitting conflicts without being picked in a triage window were slim</p>",
        "id": 210080082,
        "sender_full_name": "DPC",
        "timestamp": 1600130646
    },
    {
        "content": "<p>what was the rationale for increasing that? 15 days without a review seems really frustrating :/</p>",
        "id": 210080122,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600130677
    },
    {
        "content": "<p>it does but then reviewers need the bandwidth to review multiple prs</p>",
        "id": 210080132,
        "sender_full_name": "DPC",
        "timestamp": 1600130697
    },
    {
        "content": "<p>and given that some people took a break from rust organisation or others got busy because of the changes due to the pandemic, it made sense to widen the window given the surge in prs reviewers have to look into</p>",
        "id": 210080232,
        "sender_full_name": "DPC",
        "timestamp": 1600130785
    },
    {
        "content": "<p>yeah that's fair</p>",
        "id": 210080245,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600130802
    },
    {
        "content": "<p>generally I try to reassign the smaller prs or review them if possible, to share the load and some other members do the same as well <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 210080268,
        "sender_full_name": "DPC",
        "timestamp": 1600130835
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> I use <a href=\"https://github.com/rust-lang/rust/pulls?q=is%3Apr+is%3Aopen+-label%3AS-Blocked+sort%3Aupdated-asc+-is%3Adraft\">this filter</a> you can see the conditions. And i clear up the &gt;15 days zone every friday.</p>",
        "id": 210081754,
        "sender_full_name": "Charles Lew",
        "timestamp": 1600132617
    },
    {
        "content": "<p>FWIW I don't personally find reviewing PRs with merge conflicts bad, but it depends on what those look like - normally they're just \"git isn't smart\" not actual conflicts, in which case a review doesn't hurt.</p>",
        "id": 210117191,
        "sender_full_name": "simulacrum",
        "timestamp": 1600169715
    },
    {
        "content": "<p>Sometimes i wish i can <code>@rustbot rebase</code>, but i'm not sure how much is that possible.</p>",
        "id": 210117318,
        "sender_full_name": "Charles Lew",
        "timestamp": 1600169813
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120823\">@DPC</span> are we tracking anywhere something like reviewer latency? I know I try to check everything that's waiting on review for me every few days, but frequently PRs don't get put in my queue and are stuck in some other state</p>",
        "id": 210117333,
        "sender_full_name": "simulacrum",
        "timestamp": 1600169836
    },
    {
        "content": "<p>Triagebot can't really help you rebase, it doesn't know how to resolve those conflicts</p>",
        "id": 210117368,
        "sender_full_name": "simulacrum",
        "timestamp": 1600169872
    },
    {
        "content": "<p>Many times small merge conflicts can be resolved by <a href=\"https://www.git-scm.com/docs/git-mergetool\"><code>mergetool</code></a>.</p>",
        "id": 210117739,
        "sender_full_name": "Charles Lew",
        "timestamp": 1600170142
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120823\">DPC</span> <a href=\"#narrow/stream/242269-t-release.2Ftriage/topic/Criteria.20for.20triage.20to.20look.20at.20a.20PR/near/210079685\">said</a>:</p>\n<blockquote>\n<p>also generally reviewers wait for the author to resolve conflicts, so it makes sense to reset the timer</p>\n</blockquote>\n<p>That's not generally true, and we don't change the label to waiting-on-review on merge conflicts (<a href=\"https://github.com/rust-lang/rust-central-station/pull/34\">https://github.com/rust-lang/rust-central-station/pull/34</a>).</p>",
        "id": 210118297,
        "sender_full_name": "Vadim Petrochenkov",
        "timestamp": 1600170568
    },
    {
        "content": "<p>many reviews got delayed because the reviewer was waiting for conflicts to be resolved while the author was waiting for it to be reviewed to resolve the conflicts, thus resulting in a \"deadlock\". Also the reviewer has to most likely review it again after conflict resolution, so it makes sense to resolve it and then get reviewed and if possible approved straightaway.</p>",
        "id": 210121617,
        "sender_full_name": "DPC",
        "timestamp": 1600172811
    },
    {
        "content": "<p>i know some conflicts are small and can be ignored but that involves someone checking them to ascertain if a conflict applies to a pr or not</p>",
        "id": 210123556,
        "sender_full_name": "DPC",
        "timestamp": 1600173933
    },
    {
        "content": "<p>I think if we're having debate over it, it should be a case-by-case basis. So triage should assume the reviewer isn't waiting for a rebase, and the reviewer should comment if they are.</p>",
        "id": 210123694,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1600174012
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/242269-t-release.2Ftriage/topic/Criteria.20for.20triage.20to.20look.20at.20a.20PR/near/210123694\">said</a>:</p>\n<blockquote>\n<p>I think if we're having debate over it, it should be a case-by-case basis. So triage should assume the reviewer isn't waiting for a rebase, and the reviewer should comment if they are.</p>\n</blockquote>\n<p>that would depend on the type of conflict</p>",
        "id": 210123887,
        "sender_full_name": "DPC",
        "timestamp": 1600174118
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120823\">DPC</span> <a href=\"#narrow/stream/242269-t-release.2Ftriage/topic/Criteria.20for.20triage.20to.20look.20at.20a.20PR/near/210123887\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/242269-t-release.2Ftriage/topic/Criteria.20for.20triage.20to.20look.20at.20a.20PR/near/210123694\">said</a>:</p>\n<blockquote>\n<p>I think if we're having debate over it, it should be a case-by-case basis. So triage should assume the reviewer isn't waiting for a rebase, and the reviewer should comment if they are.</p>\n</blockquote>\n<p>that would depend on the type of conflict</p>\n</blockquote>\n<p>that's kind of my point though - right now we do that for <em>all</em> conflicts, even minor ones that don't make it harder for the reviewer</p>",
        "id": 214353789,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1603480036
    }
]