[
    {
        "content": "<p>In the libs team meeting today it was mentioned that it would be nice to inform users that they can tag their PRs as waiting-on-review without having to ping a contributor (or more likely, they don't realize that it's even a thing and just end up waiting for a triage team member to do it). The proposal was that the very first time that a PR is tagged as waiting-on-author, rustbot automatically comments something like:</p>\n<blockquote>\n<p>This PR is now waiting for changes from the author. When this PR is ready to be reviewed again, please leave a comment with the following to re-add this PR to the review queue:</p>\n<p>@rustbot label -S-waiting-on-author +S-waiting-on-review</p>\n</blockquote>\n<p>what do people think?</p>",
        "id": 246774009,
        "sender_full_name": "bstrie",
        "timestamp": 1626899294
    },
    {
        "content": "<p>There's a <code>@rustbot ready</code> shorthand for that. I learned about that by seeing someone else use that... is there a cheat sheet of available commands?</p>",
        "id": 246777575,
        "sender_full_name": "The 8472",
        "timestamp": 1626901087
    },
    {
        "content": "<p>Sure, although the point here isn't which command to present to the user, it's that we should have some automatic process that ensures the user knows that they have the power to mark the PR as ready, so that they don't have to wait for the triage team to do it. This could take some load off the triage team and also reduce turnaround times for PRs. Also, some members of the libs team also mentioned that they also forget the rustbot syntax, so having such a reminder might be beneficial for more people than just newcomers</p>",
        "id": 246778842,
        "sender_full_name": "bstrie",
        "timestamp": 1626901446
    },
    {
        "content": "<p>I know, I meant learning one command would be a start and help in this particular context, but a link to a cheat sheet might be even more useful.</p>",
        "id": 246779739,
        "sender_full_name": "The 8472",
        "timestamp": 1626901718
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"256342\">bstrie</span> <a href=\"#narrow/stream/242269-t-release.2Ftriage/topic/automatic.20rustbot.20info/near/246774009\">said</a>:</p>\n<blockquote>\n<p>In the libs team meeting today it was mentioned that it would be nice to inform users that they can tag their PRs as waiting-on-review without having to ping a contributor (or more likely, they don't realize that it's even a thing and just end up waiting for a triage team member to do it). The proposal was that the very first time that a PR is tagged as waiting-on-author, rustbot automatically comments something like:</p>\n<blockquote>\n<p>This PR is now waiting for changes from the author. When this PR is ready to be reviewed again, please leave a comment with the following to re-add this PR to the review queue:</p>\n<p>@rustbot label -S-waiting-on-author +S-waiting-on-review</p>\n</blockquote>\n<p>what do people think?</p>\n</blockquote>\n<p>I think this is an excellent idea and we should have done it ages ago :D</p>",
        "id": 246797030,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1626913591
    },
    {
        "content": "<p>what would the next step be towards pursuing this? should I open an issue on some repo? I have no idea where the bots live</p>",
        "id": 247080557,
        "sender_full_name": "bstrie",
        "timestamp": 1627140810
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"256342\">@bstrie</span> it would go in <a href=\"https://github.com/rust-lang/triagebot/\">https://github.com/rust-lang/triagebot/</a> somewhere I think</p>",
        "id": 247080612,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1627140883
    },
    {
        "content": "<p>I _think_ highfive only deals with the inital PR creation, not updates</p>",
        "id": 247080617,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1627140897
    },
    {
        "content": "<p>so does triagebot listen to the stream of all github events coming out of the rust repos? presumably such a thing is possible in the github API, and presumably it should be easy to listen for any one particular tag, although I don't know how difficult it would be to only do a thing <em>only</em> the first time that a tag is applied</p>",
        "id": 247081827,
        "sender_full_name": "bstrie",
        "timestamp": 1627142497
    },
    {
        "content": "<p>and I'm loathe to have this comment go off <em>every</em> time that a tag is applied, since we often remove and re-add these tags as a way of silently bumping github's \"last time since activity happened\" count</p>",
        "id": 247081926,
        "sender_full_name": "bstrie",
        "timestamp": 1627142613
    },
    {
        "content": "<p>Triagebot doesn't have a database that I know of, no. You could see if it had already published that comment on the PR though.</p>",
        "id": 247082301,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1627143205
    },
    {
        "content": "<p>yes, I don't want to have triagebot track this on its own in a database. good point that we could use the comment itself as a marker</p>",
        "id": 247082492,
        "sender_full_name": "bstrie",
        "timestamp": 1627143497
    },
    {
        "content": "<p>filed <a href=\"https://github.com/rust-lang/triagebot/issues/1449\">https://github.com/rust-lang/triagebot/issues/1449</a></p>",
        "id": 247083114,
        "sender_full_name": "bstrie",
        "timestamp": 1627144578
    },
    {
        "content": "<p>maybe we could add the message to highfive message on top (when it auto assigns a reviewer)?</p>",
        "id": 247129910,
        "sender_full_name": "DPC",
        "timestamp": 1627225138
    },
    {
        "content": "<p>that does solve the problem of only-send-a-single-message-per-PR and prevents potential spam, although I think it's easy to overlook and also easy to forget what it's told you since the waiting-on-author label might come long after the PR is filed. still, it would be an improvement. maybe in addition to specifically calling out <code>rustbot ready</code>, we could also link to some kind of rustbot command cheatsheet, if one exists</p>",
        "id": 247130698,
        "sender_full_name": "bstrie",
        "timestamp": 1627226133
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/242269-t-release.2Ftriage/topic/automatic.20rustbot.20info/near/247082301\">said</a>:</p>\n<blockquote>\n<p>Triagebot doesn't have a database that I know of, no. You could see if it had already published that comment on the PR though.</p>\n</blockquote>\n<p>Triagebot actually does have a database; see <code>src/db.rs</code> in the triagebot repo. Migrations are at the bottom of that file, and handlers for different features are in <code>src/db/</code>.</p>\n<p>Also, if you have questions about how to implement things in triagebot, you can ask in <a class=\"stream\" data-stream-id=\"224082\" href=\"/#narrow/stream/224082-t-release.2Ftriagebot\">#t-release/triagebot</a> :)</p>",
        "id": 247288239,
        "sender_full_name": "Noah Lev",
        "timestamp": 1627353692
    },
    {
        "content": "<p>well if there's already a database that answers the question of how this could be done, now people just need to decide if they want it :)</p>",
        "id": 247507315,
        "sender_full_name": "bstrie",
        "timestamp": 1627501186
    },
    {
        "content": "<p>Yes, I think we should do this.</p>",
        "id": 247514745,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1627505034
    },
    {
        "content": "<p>I also think it's a good idea to let people know how they can update the status of their PR.</p>",
        "id": 247648035,
        "sender_full_name": "Noah Lev",
        "timestamp": 1627596688
    },
    {
        "content": "<p>But if rustbot comments every time a PR is put into waiting-on-author for the first time, I feel that would be annoying.</p>",
        "id": 247648069,
        "sender_full_name": "Noah Lev",
        "timestamp": 1627596720
    },
    {
        "content": "<p>Maybe we could do it only if it's someone's first, second, or third PR?</p>",
        "id": 247648124,
        "sender_full_name": "Noah Lev",
        "timestamp": 1627596745
    },
    {
        "content": "<p>Of course, the first time the feature was activated, everyone would get the comment, but it might help people who hadn't seen it before, and it would go away soon for frequent contributors.</p>",
        "id": 247648151,
        "sender_full_name": "Noah Lev",
        "timestamp": 1627596775
    },
    {
        "content": "<p>Highfive already does send a message when first-time contributors open a PR, FWIW</p>",
        "id": 247654712,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1627601570
    },
    {
        "content": "<p><a href=\"https://github.com/rust-lang/highfive/blob/c1b314239752352475aa802b5ae5fcd40f6b6fc9/highfive/newpr.py#L422-L225\">https://github.com/rust-lang/highfive/blob/c1b314239752352475aa802b5ae5fcd40f6b6fc9/highfive/newpr.py#L422-L225</a></p>",
        "id": 247655156,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1627601928
    },
    {
        "content": "<p>Yes, but I think the idea here is to post the message when the PR is put in waiting-in-author state, not when it's opened, so that people notice it.</p>",
        "id": 247655441,
        "sender_full_name": "Noah Lev",
        "timestamp": 1627602192
    },
    {
        "content": "<p>Yup, we could do the same check for a first contributor and post when it goes into waiting-on-author</p>",
        "id": 247662595,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1627609987
    },
    {
        "content": "<p>the problem i see with this is people might not know the pr is waiting for them (e.g. conflicts) and might keep updating it to waiting on review for it to end in a cycle</p>",
        "id": 247666440,
        "sender_full_name": "DPC",
        "timestamp": 1627614947
    },
    {
        "content": "<p>Then someone can tell them not to do that <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> it doesn't seem <em>that</em> likely to me</p>",
        "id": 247666849,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1627615607
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120823\">DPC</span> <a href=\"#narrow/stream/242269-t-release.2Ftriage/topic/automatic.20rustbot.20info/near/247666440\">said</a>:</p>\n<blockquote>\n<p>the problem i see with this is people might not know the pr is waiting for them (e.g. conflicts) and might keep updating it to waiting on review for it to end in a cycle</p>\n</blockquote>\n<p>We could have the message say that it's likely waiting for them because</p>\n<ul>\n<li>the PR has merge conflicts</li>\n<li>a review needs to be addressed</li>\n<li>etc.</li>\n</ul>\n<p>Also, bors usually comments saying that the PR has merge conflicts that need to be addressed.</p>",
        "id": 247770057,
        "sender_full_name": "Noah Lev",
        "timestamp": 1627684720
    },
    {
        "content": "<p>when a PR has merge conflicts, having triagebot automatically mark it as waiting-on-author sounds like a good idea</p>",
        "id": 247822852,
        "sender_full_name": "bstrie",
        "timestamp": 1627763512
    },
    {
        "content": "<p>Isn't that already the case?</p>",
        "id": 247822920,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1627763627
    },
    {
        "content": "<p>Nevermind it's not</p>",
        "id": 247822960,
        "sender_full_name": "Léo Lanteri Thauvin",
        "timestamp": 1627763664
    },
    {
        "content": "<p>I don't agree that's always the case. Adding a new feature gate hits conflicts very rapidly, but usually they don't prevent reviewing, and you're waiting for an MCP to be accepted or something.</p>",
        "id": 247843753,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1627799601
    },
    {
        "content": "<p>So I don't think we should flip the status automatically, the reviewer should have to explicitly say \"this changed enough on master I need you to rebase before I can review\"</p>",
        "id": 247843796,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1627799646
    },
    {
        "content": "<p>resolving the conflicts would require a rereview anywhere since we often hve a \"anyone but the author\" last check on prs</p>",
        "id": 247871321,
        "sender_full_name": "DPC",
        "timestamp": 1627843077
    }
]