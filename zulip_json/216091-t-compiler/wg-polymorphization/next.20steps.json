[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> are we tracking the next steps anywhere? :P</p>",
        "id": 204597203,
        "sender_full_name": "eddyb",
        "timestamp": 1595362190
    },
    {
        "content": "<p>probably an important one is removing all <code>ParamEnv::reveal_all()</code> from codegen, and instead tracking the <code>ParamEnv</code> in the \"mono item\"</p>",
        "id": 204597296,
        "sender_full_name": "eddyb",
        "timestamp": 1595362221
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/216091-t-compiler.2Fwg-polymorphization/topic/progress.20updates/near/204597203\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"116107\">davidtwco</span> are we tracking the next steps anywhere? <span aria-label=\"stuck out tongue\" class=\"emoji emoji-1f61d\" role=\"img\" title=\"stuck out tongue\">:stuck_out_tongue:</span></p>\n</blockquote>\n<p>not anywhere that I'm aware of</p>",
        "id": 204597346,
        "sender_full_name": "davidtwco",
        "timestamp": 1595362258
    },
    {
        "content": "<p>something simple like trying <code>layout_of(ty)</code> on various types in the MIR body and ignoring generics in <code>ty</code> if it succeeds, should work, but the lack of a correct <code>ParamEnv</code> would make it fail later (especially if e.g. it's something like <code>&amp;T</code> which only has a constant layout if <code>T: Sized</code>)</p>",
        "id": 204598186,
        "sender_full_name": "eddyb",
        "timestamp": 1595362757
    },
    {
        "content": "<p>Now that a fix for <a class=\"stream-topic\" data-stream-id=\"216091\" href=\"/#narrow/stream/216091-t-compiler.2Fwg-polymorphization/topic/tokio.20regression.20.28.2374614.29\">#t-compiler/wg-polymorphization &gt; tokio regression (#74614)</a> has landed, I think the next step ought to be opening a PR to re-enable polymorphisation and then run crater - does that make sense?</p>",
        "id": 205926306,
        "sender_full_name": "davidtwco",
        "timestamp": 1596557268
    },
    {
        "content": "<p>(I was myself surprised by the weird perf results, not of the neutral revert, but of the initial loss which didn't appear at all in the try runs IIRC ?)</p>",
        "id": 205927000,
        "sender_full_name": "lqd",
        "timestamp": 1596557601
    },
    {
        "content": "<p>(most of the discrepancies between the try run and the landing perf were explained by the script-servo benchmark changing, as I understand it)</p>",
        "id": 205927462,
        "sender_full_name": "davidtwco",
        "timestamp": 1596557811
    },
    {
        "content": "<p>it was definitely involved in the confusion :)</p>",
        "id": 205927523,
        "sender_full_name": "lqd",
        "timestamp": 1596557852
    },
    {
        "content": "<p>it won't hurt to prepare the PR and get a try build going, at the very least since the crater queue is already long, just in case another PR slips in before yours</p>",
        "id": 205927760,
        "sender_full_name": "lqd",
        "timestamp": 1596557959
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> what I mean is: I'm confused because the last try run results <a href=\"https://github.com/rust-lang/rust/pull/69749#issuecomment-660339009\">GH link so you don't have to unfold 205 comments</a>, <a href=\"https://perf.rust-lang.org/compare.html?start=c2dbebd3d4ad21e80ef4e7535dd1e868aaad7e50&amp;end=bcc129994eb5e74186bdd0853540882aeab82516\">perf.rlo results</a> show +2% on script-servo-2 while the <a href=\"https://github.com/rust-lang/rust/pull/69749#issuecomment-664688297\">perf triage</a> mentions a <a href=\"https://perf.rust-lang.org/compare.html?start=734233d29771869f824d8ddbaddabb90b3b68e03&amp;end=b52522ade1f6979a35b24087dadcf5ba5c981cbe&amp;stat=instructions:u\">+31% loss</a> on different incr cases ...</p>",
        "id": 205928983,
        "sender_full_name": "lqd",
        "timestamp": 1596558656
    },
    {
        "content": "<p>yeah, I don't understand the incr-comp results</p>",
        "id": 205929356,
        "sender_full_name": "davidtwco",
        "timestamp": 1596558878
    },
    {
        "content": "<p>I wonder if the perf.rlo profiling issues (with the std build) were around the same time, if it hid the regression, or if those new results are weird as well</p>",
        "id": 205929478,
        "sender_full_name": "lqd",
        "timestamp": 1596558954
    },
    {
        "content": "<p>do crater runs run with debug assertions on?</p>",
        "id": 205929600,
        "sender_full_name": "lcnr",
        "timestamp": 1596559015
    },
    {
        "content": "<p>if so, I would like to add that when testing this <a href=\"https://github.com/rust-lang/rust/pull/74717#discussion_r463690015\">https://github.com/rust-lang/rust/pull/74717#discussion_r463690015</a></p>",
        "id": 205929700,
        "sender_full_name": "lcnr",
        "timestamp": 1596559078
    },
    {
        "content": "<p>I'm preparing a PR with some small polymorphisation-related changes just now, so I'll add that change shortly.</p>",
        "id": 205929828,
        "sender_full_name": "davidtwco",
        "timestamp": 1596559144
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"216206\">@lcnr</span> <a href=\"https://github.com/rust-lang/rust/issues/75155\">#75155</a></p>",
        "id": 205935279,
        "sender_full_name": "davidtwco",
        "timestamp": 1596562142
    },
    {
        "content": "<p><span aria-label=\"thumbs up\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 205936281,
        "sender_full_name": "lcnr",
        "timestamp": 1596562656
    },
    {
        "content": "<p>Also what is that? <a href=\"/user_uploads/4715/lxXq6tgTCPxSDt8tViNo_NWg/Screenshot-from-2020-08-04-19-37-23.png\">Screenshot-from-2020-08-04-19-37-23.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/4715/lxXq6tgTCPxSDt8tViNo_NWg/Screenshot-from-2020-08-04-19-37-23.png\" title=\"Screenshot-from-2020-08-04-19-37-23.png\"><img src=\"/user_uploads/4715/lxXq6tgTCPxSDt8tViNo_NWg/Screenshot-from-2020-08-04-19-37-23.png\"></a></div>",
        "id": 205936288,
        "sender_full_name": "lcnr",
        "timestamp": 1596562666
    },
    {
        "content": "<p>kiljacken doesn't seem to be a member of the org ? <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 205936649,
        "sender_full_name": "lqd",
        "timestamp": 1596562865
    },
    {
        "content": "<p>yeah</p>",
        "id": 205936796,
        "sender_full_name": "lcnr",
        "timestamp": 1596562932
    },
    {
        "content": "<p>They deleted their review comment which pointed out the same thing your comment did.</p>",
        "id": 205942705,
        "sender_full_name": "davidtwco",
        "timestamp": 1596565819
    },
    {
        "content": "<p>I had replied to both when I fixed it and so my comment was removed.</p>",
        "id": 205942744,
        "sender_full_name": "davidtwco",
        "timestamp": 1596565836
    },
    {
        "content": "<p>Re-enable PR at <a href=\"https://github.com/rust-lang/rust/issues/75185\">#75185</a></p>",
        "id": 206005194,
        "sender_full_name": "davidtwco",
        "timestamp": 1596621375
    },
    {
        "content": "<p>Triggered crater run for it</p>",
        "id": 206008867,
        "sender_full_name": "davidtwco",
        "timestamp": 1596625072
    },
    {
        "content": "<p>A check run?</p>",
        "id": 206008913,
        "sender_full_name": "lcnr",
        "timestamp": 1596625088
    },
    {
        "content": "<p>We need at least build to actually trigger polymorphization, don't we?</p>",
        "id": 206008919,
        "sender_full_name": "lcnr",
        "timestamp": 1596625102
    },
    {
        "content": "<p>I didn't realise that's what that command meant - I just copied the last (and first time) I'd run crater.</p>",
        "id": 206008929,
        "sender_full_name": "davidtwco",
        "timestamp": 1596625112
    },
    {
        "content": "<p>I assumed it was just \"do the crater check\"</p>",
        "id": 206008940,
        "sender_full_name": "davidtwco",
        "timestamp": 1596625122
    },
    {
        "content": "<p>Let me quickly check myself</p>",
        "id": 206008944,
        "sender_full_name": "lcnr",
        "timestamp": 1596625126
    },
    {
        "content": "<p>Now to learn how to cancel crater runs</p>",
        "id": 206008949,
        "sender_full_name": "davidtwco",
        "timestamp": 1596625130
    },
    {
        "content": "<p>if I didn't mix something up here</p>",
        "id": 206008954,
        "sender_full_name": "lcnr",
        "timestamp": 1596625136
    },
    {
        "content": "<p>it looks like you're right</p>",
        "id": 206008964,
        "sender_full_name": "davidtwco",
        "timestamp": 1596625143
    },
    {
        "content": "<p>build-only is probably fine right?</p>",
        "id": 206009060,
        "sender_full_name": "davidtwco",
        "timestamp": 1596625208
    },
    {
        "content": "<p>hmm, we might actually try and run tests to check if we break anything there <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 206009084,
        "sender_full_name": "lcnr",
        "timestamp": 1596625229
    },
    {
        "content": "<p>I don't know how much longer a test build takes than a build one</p>",
        "id": 206009112,
        "sender_full_name": "lcnr",
        "timestamp": 1596625255
    },
    {
        "content": "<p>I guess we'll find out</p>",
        "id": 206009123,
        "sender_full_name": "davidtwco",
        "timestamp": 1596625265
    },
    {
        "content": "<p>yeah, imo let's go with test</p>",
        "id": 206009158,
        "sender_full_name": "lcnr",
        "timestamp": 1596625280
    },
    {
        "content": "<p>If anyone reading this is thinking \"this guy has no idea how to use crater, we have to stop him\" and has the appropriate privileges to do so - feel free to cancel the run and start the appropriate type</p>",
        "id": 206009195,
        "sender_full_name": "davidtwco",
        "timestamp": 1596625304
    },
    {
        "content": "<p>time to wait a few weeks I guess <span aria-label=\"laughter tears\" class=\"emoji emoji-1f602\" role=\"img\" title=\"laughter tears\">:laughter_tears:</span></p>",
        "id": 206009312,
        "sender_full_name": "lcnr",
        "timestamp": 1596625377
    },
    {
        "content": "<p>there are things <a href=\"#narrow/stream/216091-t-compiler.2Fwg-polymorphization/topic/next.20steps/near/204597296\">like this</a> that we can proceed with</p>",
        "id": 206009417,
        "sender_full_name": "davidtwco",
        "timestamp": 1596625461
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"116107\">@davidtwco</span> here's some docs for you <a href=\"https://github.com/rust-lang/crater/blob/master/docs/bot-usage.md\">https://github.com/rust-lang/crater/blob/master/docs/bot-usage.md</a> I <em>think</em> you'd only need \"build-only\" ? IIRC it used to build all targets including tests (but that may another option to ask for) rather than <em>running</em> the tests as well ?</p>",
        "id": 206017500,
        "sender_full_name": "lqd",
        "timestamp": 1596631687
    },
    {
        "content": "<p>it'll be better to check with <span class=\"user-mention\" data-user-id=\"116122\">@simulacrum</span> in any case but looking at the queue there will be time to fiddle with the run's options :)</p>",
        "id": 206017590,
        "sender_full_name": "lqd",
        "timestamp": 1596631760
    },
    {
        "content": "<p>I was looking at that earlier, if it builds the tests too, then <code>build-only</code> would be more appropriate - would need to check with someone from <a class=\"stream\" data-stream-id=\"242791\" href=\"/#narrow/stream/242791-t-infra\">#t-infra</a>.</p>",
        "id": 206017622,
        "sender_full_name": "davidtwco",
        "timestamp": 1596631785
    },
    {
        "content": "<p>getting miscompilations here is hard, isn't it? <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 206017735,
        "sender_full_name": "lcnr",
        "timestamp": 1596631836
    },
    {
        "content": "<p>I think it does yeah, at least I definitely remember seeing some errors in tests in some past runs we did</p>",
        "id": 206017782,
        "sender_full_name": "lqd",
        "timestamp": 1596631868
    },
    {
        "content": "<p>or well, you would have to somehow accidentally mark a param as unused which isn't</p>",
        "id": 206017794,
        "sender_full_name": "lcnr",
        "timestamp": 1596631878
    },
    {
        "content": "<p>(just remembered that there's also getting polymorphisation to work with new symbol mangling)</p>",
        "id": 206022666,
        "sender_full_name": "davidtwco",
        "timestamp": 1596634707
    },
    {
        "content": "<p>Sorry about the permission scare yesterday! I commented before github lazy loaded the existing review comment, and then deleted before github loaded the \"fixed\" reply, resulting in a very confusing experience!</p>",
        "id": 206038369,
        "sender_full_name": "Emil Lauridsen",
        "timestamp": 1596642093
    },
    {
        "content": "<p>Filed an issue about <a href=\"#narrow/stream/216091-t-compiler.2Fwg-polymorphization/topic/next.20steps/near/204597296\">eddy's earlier suggestion in this topic</a> so we don't lose track of it - <a href=\"https://github.com/rust-lang/rust/issues/75327\">#75327</a>.</p>",
        "id": 206389970,
        "sender_full_name": "davidtwco",
        "timestamp": 1596970539
    },
    {
        "content": "<p>I believe <a href=\"https://github.com/rust-lang/rust/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3AA-polymorphization\">these issues</a> represent the majority of the immediate issues or pending work on polymorphization.</p>",
        "id": 206397075,
        "sender_full_name": "davidtwco",
        "timestamp": 1596983028
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"119009\">eddyb</span> <a href=\"#narrow/stream/216091-t-compiler.2Fwg-polymorphization/topic/next.20steps/near/204597296\">said</a>:</p>\n<blockquote>\n<p>probably an important one is removing all <code>ParamEnv::reveal_all()</code> from codegen, and instead tracking the <code>ParamEnv</code> in the \"mono item\"</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"119009\">@eddyb</span> does Miri also need to change its <code>ParamEnv</code> handling?</p>",
        "id": 206673721,
        "sender_full_name": "RalfJ",
        "timestamp": 1597223465
    },
    {
        "content": "<p>I think we already did that in miri, there should be no more reveal_all's in there except for static items, which can't be generic anyway</p>",
        "id": 206675376,
        "sender_full_name": "oli",
        "timestamp": 1597225175
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"124288\">oli</span> <a href=\"#narrow/stream/216091-t-compiler.2Fwg-polymorphization/topic/next.20steps/near/206675376\">said</a>:</p>\n<blockquote>\n<p>I think we already did that in miri, there should be no more reveal_all's in there except for static items, which can't be generic anyway</p>\n</blockquote>\n<p>you are right, I just checked</p>",
        "id": 208186416,
        "sender_full_name": "RalfJ",
        "timestamp": 1598514085
    }
]