[
    {
        "content": "<p>is the meeting still on for today? last time there was discussion about rescheduling or otherwise changing things</p>",
        "id": 272016761,
        "sender_full_name": "Caleb Cartwright",
        "timestamp": 1644949480
    },
    {
        "content": "<p>I'm around to meet.</p>\n<p>I think for discussion, what I would like to cover is pretty much the same as before:</p>\n<ul>\n<li>Is there a better meeting time to get more attendance? Or do people not want to meet at all?</li>\n<li>Still waiting on 3 members to check FCP boxes at <a href=\"https://github.com/rust-lang/rfcs/pull/1615\">https://github.com/rust-lang/rfcs/pull/1615</a> (@GuillaumeGomez, @Xanewok, @fitzgen)</li>\n<li>RLS maintenance. Last update is that the rust-analyzer transition is \"very close\", so hopefully that will help? I will not be able to help with any more issues.</li>\n<li>Closing issues at <a href=\"https://github.com/rust-dev-tools/dev-tools-team/issues\">https://github.com/rust-dev-tools/dev-tools-team/issues</a>? I did not get a response from Manish.</li>\n<li>What are the responsibilities of T-devtools? For example, some people seem to think we're responsible for test frameworks, which is not really true in practice. Other examples: compiletest, debuggers and debugging experience.</li>\n</ul>",
        "id": 272019684,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644950761
    },
    {
        "content": "<p>I ticked my box for 1615 so that's always that done :)</p>",
        "id": 272031707,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1644956088
    },
    {
        "content": "<p>I'll write down for rustdoc:</p>\n<ul>\n<li>We continue the UI changes.</li>\n<li>A few cleanup/perf improvements </li>\n<li>We're getting close for the example scraping feature to get stabilized \\o/</li>\n</ul>",
        "id": 272032576,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1644956541
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> oh, what was your question about closing issues?</p>",
        "id": 272036209,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644958417
    },
    {
        "content": "<p>I was just asking for permission to close most of the issues on dev-tools-team (at least the ones that seem obviously obsolete to me).</p>",
        "id": 272036316,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644958455
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> oh yeah go ahead</p>",
        "id": 272036361,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644958475
    },
    {
        "content": "<p>we don't really use that repo much</p>",
        "id": 272036368,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644958479
    },
    {
        "content": "<p>hey all!</p>",
        "id": 272037221,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644958847
    },
    {
        "content": "<p>meeting time!</p>",
        "id": 272037235,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644958853
    },
    {
        "content": "<p>i think eric had a bunch of things to discuss so i think it might be worth starting with those; team udpates are good but we don't have to each time</p>",
        "id": 272037266,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644958876
    },
    {
        "content": "<p>kinda feel like \"what is the scope of T-devtools\" is a good topic to start with</p>",
        "id": 272037314,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644958897
    },
    {
        "content": "<p>thoughts?</p>",
        "id": 272037316,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644958901
    },
    {
        "content": "<p>Yea, it's a broad question.</p>",
        "id": 272037404,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644958929
    },
    {
        "content": "<p>I think specifically, there seems to be an impression that t-devtools covers everything a developer might want.</p>",
        "id": 272037453,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644958952
    },
    {
        "content": "<p>And that seems overly broad.</p>",
        "id": 272037460,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644958957
    },
    {
        "content": "<p>For me it was simply supporting the tools under our \"responsibility\"</p>",
        "id": 272037462,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1644958958
    },
    {
        "content": "<p>And I might narrow it to more like \"active teams working on specific tools\".</p>",
        "id": 272037491,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644958972
    },
    {
        "content": "<p>So inactive things (like debuggers or whatever) aren't necessarily our responsibility.</p>",
        "id": 272037528,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644958987
    },
    {
        "content": "<p>To make it more complicated, I think there is a group of people starting a debugging working group outside of this team.</p>",
        "id": 272037600,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644959019
    },
    {
        "content": "<p>(Which is fine, just trying to make our purpose clearer.)</p>",
        "id": 272037632,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644959030
    },
    {
        "content": "<p>unless we were working on a debug tool, I don't think it's up to us</p>",
        "id": 272037737,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1644959060
    },
    {
        "content": "<p>This comes up in a few places, such as RFCs, issues and such, where it appears that t-devtools is assigned.  But in practice that isn't true.</p>",
        "id": 272037829,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644959101
    },
    {
        "content": "<p>For example, although Manish is active with <code>compiletest</code>, in practice that is mostly managed by the compiler team.</p>",
        "id": 272037893,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644959129
    },
    {
        "content": "<p>Another example is libtest, which is mostly managed by the libs team.</p>",
        "id": 272037919,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644959138
    },
    {
        "content": "<p>That's about all I was thinking.</p>",
        "id": 272038102,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644959219
    },
    {
        "content": "<p>i was always curious about some of those associated channels back on discord</p>",
        "id": 272038148,
        "sender_full_name": "Caleb Cartwright",
        "timestamp": 1644959233
    },
    {
        "content": "<p>like I said, for me it was really just working on the tools provided by the teams under devtools</p>",
        "id": 272038162,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1644959243
    },
    {
        "content": "<p>fwiw that sounds like a reasonable way to bound things to me. in an abstract sense just about anything _could_ be viewed as a dev tool to some degree, so some bounding scope is needed</p>",
        "id": 272038403,
        "sender_full_name": "Caleb Cartwright",
        "timestamp": 1644959346
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"132040\">@Manish Goregaokar</span> Did you have any thoughts?</p>",
        "id": 272038596,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644959429
    },
    {
        "content": "<p>oh shoot sorry i had to go down to pick yp a thing</p>",
        "id": 272038627,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644959446
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> okay so here's my perspective, and it's the perspective we used when we kinda rebuilt the team after nrc left.</p>\n<p>the devtools team has two functions:</p>\n<ul>\n<li>supporting the individual DT teams, and promoting cross pollination between them</li>\n<li>growing new areas of devtools as desired</li>\n</ul>",
        "id": 272038720,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644959502
    },
    {
        "content": "<p>T-devtools is not _directly_ responsible for subteam work. so yeah, debuggers are inactive, but it's still fine to list that here: what that means is that when there are people interested in setting that up again it's kinda my/our responsibility to help them do that</p>",
        "id": 272038898,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644959564
    },
    {
        "content": "<p>as such right now we have fewer people than we'd like working on the various devtools. so _expansion_ is not something we should be actively pushing for</p>",
        "id": 272038943,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644959588
    },
    {
        "content": "<p>so i think the perspective here is a bit flawed: we do not need to artificially restrict our scope based on what we have the capacity to do; rather we can restrict _what we are actively working on_ based on capacity</p>",
        "id": 272039075,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644959646
    },
    {
        "content": "<p>if a group comes up to do debugger work, or build semverver, or whatever, we make space for them</p>",
        "id": 272039107,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644959665
    },
    {
        "content": "<p>so we're not \"responsible\" for _work_ on inactive things, but if there are people who want to be, we're responsible for helping them set up</p>",
        "id": 272039176,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644959700
    },
    {
        "content": "<p>this kind of bootstrapping is tricky of course, you don't just give random people r+ access</p>",
        "id": 272039215,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644959714
    },
    {
        "content": "<p>Oh yea.  I think it would be great to spin up more teams.  I'm just thinking of the immediate assumptions.  For example, if someone wants to change libtest, we won't be involved.  Similarly for llvm tools, debuggers (can be handled by t-compiler), etc.</p>",
        "id": 272039253,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644959730
    },
    {
        "content": "<p>but basically this would mean that folks can volunteer to help review their stuff and bootstrap them into a team. i'd definitely be doing that</p>",
        "id": 272039260,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644959733
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> correct. testing tooling is technically under devtools but hasn't been super active</p>",
        "id": 272039304,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644959752
    },
    {
        "content": "<p>_we_ (the group of people in this room) don't need to worry about it</p>",
        "id": 272039367,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644959767
    },
    {
        "content": "<p>much like <span class=\"user-mention\" data-user-id=\"320317\">@Caleb Cartwright</span> does not typically need to worry about rustdoc unless he _wants_ to</p>",
        "id": 272039397,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644959781
    },
    {
        "content": "<p>(you have to worry about rustdoc a bit more due to the dependency bw cargo/rustdoc)</p>",
        "id": 272039419,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644959798
    },
    {
        "content": "<p>this is kinda why i draw the line bw responsibility for _work_ and responsibility for _management_</p>",
        "id": 272039492,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644959829
    },
    {
        "content": "<p>T-devtools doesn't do _work_ on these projects, but it helps them spin up/etc as necessary</p>",
        "id": 272039528,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644959849
    },
    {
        "content": "<p>also we do have a couple teamless projects like semverver that are chugging along and we're kinda the \"backstop\" team for them too</p>",
        "id": 272039544,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644959866
    },
    {
        "content": "<p>also yeah if the compiler team is doing more work on a thing we can migrate responsibility</p>",
        "id": 272039613,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644959892
    },
    {
        "content": "<p>anyway, does this all make sense?</p>",
        "id": 272039621,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644959899
    },
    {
        "content": "<p>yea, I think so.</p>",
        "id": 272039635,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644959908
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 272039652,
        "sender_full_name": "GuillaumeGomez",
        "timestamp": 1644959920
    },
    {
        "content": "<p>and just to be clear, is there any objection to redirecting labels to other teams for some issues?  For example <a href=\"https://github.com/rust-lang/rfcs/pull/3221\">https://github.com/rust-lang/rfcs/pull/3221</a> which is really a change to libtest and the language.  Although I would love to see a team responsible for testing, in practice there is nobody doing that other than the libs team.</p>",
        "id": 272039759,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644959998
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> go for it</p>",
        "id": 272039823,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644960020
    },
    {
        "content": "<p>T-devtools can also be used as \"get people who care about devtools involved\" so sometimes we can leav eit in if that's the intent</p>",
        "id": 272039852,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644960049
    },
    {
        "content": "<p>also to answer the rust-analyzer question quickly: still held up at an administrative level. idk if there's been progress. I believe matklad's plan is for r-a to be a compiler subteam, and maybe <em>eventually</em> also a devtools subteam (working on the frontend bits). until then I'd say RLS is on maintenance mode</p>",
        "id": 272039893,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644960077
    },
    {
        "content": "<p>and ocne that happens we can deprecate</p>",
        "id": 272039900,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644960083
    },
    {
        "content": "<p>i guess it's already deprecated</p>",
        "id": 272039905,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644960088
    },
    {
        "content": "<p>Yea, rylev commented <a href=\"#narrow/stream/301329-t-devtools/topic/rls.20fix/near/271811332\">https://rust-lang.zulipchat.com/#narrow/stream/301329-t-devtools/topic/rls.20fix/near/271811332</a> a couple days ago that they are getting closer.</p>",
        "id": 272040017,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644960130
    },
    {
        "content": "<p>great!</p>",
        "id": 272040212,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644960231
    },
    {
        "content": "<p>i was pushing on this back when i was on core but couldn't get it done quickly</p>",
        "id": 272040287,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644960247
    },
    {
        "content": "<p>good to see progress</p>",
        "id": 272040298,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644960250
    },
    {
        "content": "<p>i guess, maybe it isn't clear to me, why is this a challenge?</p>",
        "id": 272040336,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644960272
    },
    {
        "content": "<p>ah</p>",
        "id": 272040370,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644960284
    },
    {
        "content": "<p>well</p>",
        "id": 272040372,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644960286
    },
    {
        "content": "<p>so it started as a project outside of rust-lang, right? and it has its own funding source (the rust-analyzer opencollective)</p>",
        "id": 272040412,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644960304
    },
    {
        "content": "<p>unfortunately it's kinda tricky to do that _inside_ the rust project: like, it would be okay if the foundation managed funding and distribution (but this is _very_ tricky to do fairly and they likely wouldn't)</p>",
        "id": 272040466,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644960336
    },
    {
        "content": "<p>ah, I forgot about that.  That does seem a little awkward to deal with.</p>",
        "id": 272040495,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644960352
    },
    {
        "content": "<p>and you can't just have a \"rust-analyzer funding bucket\" that only funds certain members of the project based on governance decisions made outside the project</p>",
        "id": 272040512,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644960359
    },
    {
        "content": "<p>to their credit they absolutely intend to try and be fair there</p>",
        "id": 272040572,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644960370
    },
    {
        "content": "<p>it's not just \"pay matklad\", they're doing grants/etc</p>",
        "id": 272040590,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644960381
    },
    {
        "content": "<p>but it's definitely tricky</p>",
        "id": 272040601,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644960387
    },
    {
        "content": "<p>we also don't want the funding source to go away, so the idea will generalyl be to rename it or something</p>",
        "id": 272040635,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644960406
    },
    {
        "content": "<p>it's totally fine for such funding sources to exist, they just cannot claim to be the official source of funding for a project</p>",
        "id": 272040666,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644960428
    },
    {
        "content": "<p>anyway the plan was to rename it, which is tricky and takes time but i don't know the status</p>",
        "id": 272040717,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644960457
    },
    {
        "content": "<hr>",
        "id": 272040724,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644960462
    },
    {
        "content": "<p>makes sense.  Hope they can come to an agreeable solution.</p>",
        "id": 272040726,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644960463
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"132040\">Manish Goregaokar</span> <a href=\"#narrow/stream/301329-t-devtools/topic/2022-02-15.20meeting/near/272040717\">said</a>:</p>\n<blockquote>\n<p>anyway the plan was to rename it, which is tricky and takes time but i don't know the status</p>\n</blockquote>\n<p><code>s/rust-analyzer/unofficial rust-analyzer/g</code> or something more complex?</p>",
        "id": 272040806,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644960490
    },
    {
        "content": "<p>does this means that RLS is still in limbo for the time being? in practice it seems deprecated, but also still seems to popup with blocking challenges from time to time too</p>",
        "id": 272040830,
        "sender_full_name": "Caleb Cartwright",
        "timestamp": 1644960506
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span> no idea, ask ryan or florian for status</p>",
        "id": 272040837,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644960508
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"320317\">@Caleb Cartwright</span> yes unfortunately</p>",
        "id": 272040849,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644960516
    },
    {
        "content": "<p>one of the reasons i wanted this Over And Done With and pushed for it is that rls is causing problems by being in deprecation limbo</p>",
        "id": 272040886,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644960538
    },
    {
        "content": "<p>as for meeting times, i think the discussion was to try and do something more async? like, perhaps we still have a meeting slot scheduled in case people want to discuss stuff, but otherwise the friday before the meeting i totally coudl just ping team members and ask them to post async updates, and _if_ we want to discuss some topic you tell me then, and we either have that discussion sync or async depending on needs</p>",
        "id": 272040973,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644960586
    },
    {
        "content": "<p>likely try to have it async and if it doesn't work then use the scheduled time</p>",
        "id": 272040994,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644960599
    },
    {
        "content": "<p>Yea, I meant to start async discussions on some of the above topics here on Zulip, but I didn't.</p>\n<p>Related to that, I am significantly cutting back my Rust involvement due to nerve pain in my arm.  I'm still doing stuff sporadically, but reviews and stuff are taking longer than usual for the foreseeable future.</p>",
        "id": 272041178,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644960678
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120518\">Eric Huss</span> <a href=\"#narrow/stream/301329-t-devtools/topic/2022-02-15.20meeting/near/272041178\">said</a>:</p>\n<blockquote>\n<p>Yea, I meant to start async discussions on some of the above topics here on Zulip, but I didn't.</p>\n<p>Related to that, I am significantly cutting back my Rust involvement due to nerve pain in my arm.  I'm still doing stuff sporadically, but reviews and stuff are taking longer than usual for the foreseeable future.</p>\n</blockquote>\n<p>yikes, sorry to hear that. hope you feel better soon</p>",
        "id": 272041401,
        "sender_full_name": "Caleb Cartwright",
        "timestamp": 1644960772
    },
    {
        "content": "<p>(and many other things like t-devtools tend to fall in the cracks)</p>",
        "id": 272041412,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644960778
    },
    {
        "content": "<p>&lt;3 &lt;3</p>",
        "id": 272041579,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644960876
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span> <span class=\"user-mention\" data-user-id=\"320317\">@Caleb Cartwright</span> i've been meaning to offer: i'm happy to try and take over some review burden on rustfmt/cargo so i can get more familiar with the codebase , if y'all need. with the eventual goal of being able to help grow the team</p>",
        "id": 272041655,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644960926
    },
    {
        "content": "<p>i think <span class=\"user-mention\" data-user-id=\"220273\">@Jane Lusby [she/her]</span> has stronger plans for growing contributions (i have lots of ideas but not enough time) but in the meantime I can do this with the goal of enticing new contributors</p>",
        "id": 272041707,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1644960961
    },
    {
        "content": "<p>the more eyes the better with rustfmt so definitely appreciated from my end</p>",
        "id": 272041841,
        "sender_full_name": "Caleb Cartwright",
        "timestamp": 1644961022
    },
    {
        "content": "<p>i could use that as my segue, as i've got a broader topic beyond the typical checkins<br>\n<span class=\"user-mention\" data-user-id=\"120518\">@Eric Huss</span>  were there other topics in your list?</p>",
        "id": 272042483,
        "sender_full_name": "Caleb Cartwright",
        "timestamp": 1644961398
    },
    {
        "content": "<p>No, that's all.</p>",
        "id": 272042497,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644961416
    },
    {
        "content": "<p>for the checkin, rustfmt</p>\n<ul>\n<li>Typical steady flow of small bug fixes from a good mix of contributors, though largely casual/one-time committers</li>\n<li>Haven't had much free time yet in 2022 due to the typical hectic weeks that follow the year end holiday season. Hoping to be able to get back to some meatier items on the rustfmt backlog now that things are getting back to normal</li>\n<li>There's been some interesting and relevant discussion happening around feature stabilization and dev tools, originating around rustfmt in particular.</li>\n</ul>",
        "id": 272042578,
        "sender_full_name": "Caleb Cartwright",
        "timestamp": 1644961449
    },
    {
        "content": "<p>last one leads to the broader topic which includes some info for awareness and a potential ask as well</p>",
        "id": 272042601,
        "sender_full_name": "Caleb Cartwright",
        "timestamp": 1644961471
    },
    {
        "content": "<p>Should note as a follow up to <a href=\"#narrow/stream/301329-t-devtools/topic/tools.20and.20feature.20stabilization\">https://rust-lang.zulipchat.com/#narrow/stream/301329-t-devtools/topic/tools.20and.20feature.20stabilization</a> that as I understand there's no longer any active proposals to incorporate any hard/blocking gates on dev tool readiness/completness into the lang/feature stabilization process. </p>\n<p><span class=\"user-mention\" data-user-id=\"116009\">@nikomatsakis</span>  made some suggestions on those discussions though that I think are worth sharing here (Niko - don't mean to put words in your mouth so please correct me if necessary) The theme I took from it was essentially whether there were any process enhancements we should consider that could potentially help ensure tooling is in a better state/farther along by the time lang features were ready to be stabilized. It was specifically in the context of rustfmt, but seems like some questions/considerations could potentially be relevant for some other dev tools as well.</p>\n<p>One proposal coming out of this from <span class=\"user-mention\" data-user-id=\"239881\">@Josh Triplett</span>  was that we revive the old Style Team, which was priorly tasked with the development and maintenance of the <a href=\"https://github.com/rust-dev-tools/fmt-rfcs\">Style Guide</a> which defines the style/formatting rules rustfmt is then responsible for implementing.</p>\n<p>I'm quite excited about this idea, as it seems far better to get back to a state where multiple people are directly involved with getting rules codified vs. current state where it can appear like there's only one person (me) defining both the rules in the guide and implementation in rustfmt. Assuming that moves forward we may need an assist from one of you for things like access (I've only got write access to that repo) since that repo resides under the rust-dev-tools org.</p>",
        "id": 272042695,
        "sender_full_name": "Caleb Cartwright",
        "timestamp": 1644961541
    },
    {
        "content": "<p>Getting more people involved with defining the style sounds great.</p>",
        "id": 272043069,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644961744
    },
    {
        "content": "<p>Re this, I was a little surprised that you pushed back on having rustfmt ready for new language additions.  I would think that requiring rustfmt to handle new language stuff could help get more people involved and aware of rustfmt.</p>",
        "id": 272043089,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644961754
    },
    {
        "content": "<p>Is the problem that it puts pressure/responsibility on you?</p>",
        "id": 272043125,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644961782
    },
    {
        "content": "<p>remember until relatively recently, rustfmt saw things in terms of 6+ month old versions of the AP crates, so some drift was inevitable (it was quite common for rustfmt to choke on relatively old syntax). i think another pro of the subtree approach is that it opens up some new avenues</p>",
        "id": 272043231,
        "sender_full_name": "Caleb Cartwright",
        "timestamp": 1644961839
    },
    {
        "content": "<p>yea, I hope that transition is turning out to work well.  It sounded like the right direction to me, but I understand having two repos can be challenging.</p>",
        "id": 272043340,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644961917
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120518\">Eric Huss</span> <a href=\"#narrow/stream/301329-t-devtools/topic/2022-02-15.20meeting/near/272043089\">said</a>:</p>\n<blockquote>\n<p>Re this, I was a little surprised that you pushed back on having rustfmt ready for new language additions.  I would think that requiring rustfmt to handle new language stuff could help get more people involved and aware of rustfmt.</p>\n</blockquote>\n<p>in my perfect world, towards the end/shortly after an RFC was completed we'd have a solid proposal open to the style guide that would receive feedback while the feature was still unstable (so folks have the benefit of hands on experience which always ends up influencing desired formatting). then as feat. stabilization was approaching we'd be able to finalize the style rules and implement in rustfmt with a couple weeks of nightly experience (basic bug catching) and be good to go come feature stabilization.</p>\n<p>it's a problem today though when a feature is ready for stabilization and there's been no input we've seen on what the formatting should even be</p>",
        "id": 272043512,
        "sender_full_name": "Caleb Cartwright",
        "timestamp": 1644962015
    },
    {
        "content": "<p>I was just going to ask if you thought the Style Guide had enough visibility. <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 272043654,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644962078
    },
    {
        "content": "<p>I'll be honest, I don't really pay attention to it.</p>",
        "id": 272043674,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644962088
    },
    {
        "content": "<p>I was wondering if you had concrete ideas to improve that?</p>",
        "id": 272043690,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644962100
    },
    {
        "content": "<p>there's historically been zero tolerance for rustfmt to change, even if it's better, in some cases bordering on the asinine e.g. rustfmt still inserts unnecessary spaces on nested tuple access because it was necessary once upon a time</p>",
        "id": 272043751,
        "sender_full_name": "Caleb Cartwright",
        "timestamp": 1644962134
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120518\">Eric Huss</span> <a href=\"#narrow/stream/301329-t-devtools/topic/2022-02-15.20meeting/near/272043674\">said</a>:</p>\n<blockquote>\n<p>I'll be honest, I don't really pay attention to it.</p>\n</blockquote>\n<p>i think that's the general state of affairs for everyone which is part of the problem</p>\n<p>as far as improving it, i think pushing certain discussions that way in the rfc will both help increase awareness and help get some relevant discussion in context. realize there's a similar problem there of bifurcation across repos but at a certain point we need things to end up in the \"spec\" so to speak</p>",
        "id": 272043952,
        "sender_full_name": "Caleb Cartwright",
        "timestamp": 1644962233
    },
    {
        "content": "<p>personally I'm fine with most changes. The thing that is a problem is if it \"flaps\" between two styles on stable/nightly.  That can cause a lot of contributor friction.</p>",
        "id": 272043957,
        "sender_full_name": "Eric Huss",
        "timestamp": 1644962235
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120518\">Eric Huss</span> <a href=\"#narrow/stream/301329-t-devtools/topic/2022-02-15.20meeting/near/272043957\">said</a>:</p>\n<blockquote>\n<p>personally I'm fine with most changes. The thing that is a problem is if it \"flaps\" between two styles on stable/nightly.  That can cause a lot of contributor friction.</p>\n</blockquote>\n<p>maybe not directly related, but one cause of this is that a project will primarily be on nightly and using nightly-only options, a contributor will come along and use stable which currently ignores those stable options but formats anyway (resulting in different values)  that can lead to mass undesired changes.</p>\n<p>we are working on fixing that already</p>",
        "id": 272044208,
        "sender_full_name": "Caleb Cartwright",
        "timestamp": 1644962383
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"320317\">@Caleb Cartwright</span> I'm hoping that the (currently unstable) rustfmt version mechanism (\"Two\") would address that. Perhaps with rustfmt in-tree we could tie that to editions, instead?</p>",
        "id": 272044853,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644962675
    },
    {
        "content": "<p>e.g. \"we can change rustfmt's formatting in an edition; rustfmt formats code according to the edition of that code\"</p>",
        "id": 272044877,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644962688
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"120518\">Eric Huss</span> <a href=\"#narrow/stream/301329-t-devtools/topic/2022-02-15.20meeting/near/272043089\">said</a>:</p>\n<blockquote>\n<p>Re this, I was a little surprised that you pushed back on having rustfmt ready for new language additions.  I would think that requiring rustfmt to handle new language stuff could help get more people involved and aware of rustfmt.</p>\n</blockquote>\n<p>and to circle back to this a bit, it's not a lack of desire to align, but trying to be realistic about the fact that with the current state of affairs the lang feature stabilization is essentially an arbitrary date in this particular context. the concern, given rustfmt's 1 and only shot to apply formatting, is that we'd either severely degrade the pace at which features can be made available on stable, or we'd end up rushing formatting rules through with minimal input that we'd be locked into, likely permanently</p>",
        "id": 272044905,
        "sender_full_name": "Caleb Cartwright",
        "timestamp": 1644962706
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/301329-t-devtools/topic/2022-02-15.20meeting/near/272044853\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"320317\">Caleb Cartwright</span> I'm hoping that the (currently unstable) rustfmt version mechanism (\"Two\") would address that. Perhaps with rustfmt in-tree we could tie that to editions, instead?</p>\n</blockquote>\n<p>i'm criss-crossing between threads and lost a little context, which aspect do you think that might address?</p>",
        "id": 272045050,
        "sender_full_name": "Caleb Cartwright",
        "timestamp": 1644962782
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"320317\">Caleb Cartwright</span> <a href=\"#narrow/stream/301329-t-devtools/topic/2022-02-15.20meeting/near/272043751\">said</a>:</p>\n<blockquote>\n<p>there's historically been zero tolerance for rustfmt to change, even if it's better, in some cases bordering on the asinine e.g. rustfmt still inserts unnecessary spaces on nested tuple access because it was necessary once upon a time</p>\n</blockquote>\n<p>^ this</p>",
        "id": 272045318,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644962946
    },
    {
        "content": "<p>gotcha. i actually think the separate <code>version</code> opt gives us much more flexibility to cover different scenarios and would prefer to keep the edition as nothing more than a pass through to rustc for parsing. folks can get around that issue (amongst others) by setting version=Two already, regardless of whether they need to use 2015 or 2021 for non-formatting reasons</p>",
        "id": 272045384,
        "sender_full_name": "Caleb Cartwright",
        "timestamp": 1644962992
    },
    {
        "content": "<p>Fair. Not trying to suggest that rustfmt <em>should</em> exclusively be tied to edition, but rather that if the edition could change the defaults, that would mean people don't have to have a <code>.rustfmt.toml</code> to set the rustfmt version.</p>",
        "id": 272045507,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644963054
    },
    {
        "content": "<p>Which would make the shiny new formatting Just Work.</p>",
        "id": 272045539,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644963074
    },
    {
        "content": "<p>i have some loose ideas around how we could potentially iterate the defaults and would want to align to edition changes (e.g. the version of rustfmt that ships starting with 2024 edition has version default set to Two, override it to One if you want to live in the past) but need to flesh those out some more</p>",
        "id": 272045555,
        "sender_full_name": "Caleb Cartwright",
        "timestamp": 1644963089
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/301329-t-devtools/topic/2022-02-15.20meeting/near/272045507\">said</a>:</p>\n<blockquote>\n<p>Fair. Not trying to suggest that rustfmt <em>should</em> exclusively be tied to edition, but rather that if the edition could change the defaults, that would mean people don't have to have a <code>.rustfmt.toml</code> to set the rustfmt version.</p>\n</blockquote>\n<p>yup, sounds like a similar line of thought</p>",
        "id": 272045704,
        "sender_full_name": "Caleb Cartwright",
        "timestamp": 1644963169
    },
    {
        "content": "<p>Would also be valid if <code>One</code> just couldn't format things that don't exist in old editions.</p>",
        "id": 272045732,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644963185
    },
    {
        "content": "<p>Which might simplify the task of maintaining the old compatible version of rustfmt.</p>",
        "id": 272045757,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644963198
    },
    {
        "content": "<p>since i've pulled everyone down the rustfmt rabbit hole already <span aria-label=\"smiling face\" class=\"emoji emoji-263a\" role=\"img\" title=\"smiling face\">:smiling_face:</span>  the other thing i expect will happen one day, which i'm not sure how to handle, is a modification or addition to the style guide that's \"breaking\" in the sense that if rustfmt were updated to comply, would result in lots of <code>cargo fmt --check</code> failures after upgrades</p>\n<p>e.g. <a href=\"https://github.com/rust-dev-tools/fmt-rfcs/pull/147\">https://github.com/rust-dev-tools/fmt-rfcs/pull/147</a></p>",
        "id": 272045922,
        "sender_full_name": "Caleb Cartwright",
        "timestamp": 1644963292
    },
    {
        "content": "<p>i feel like there's inevitable cases where rustfmt's defaults cannot simultaneously comply with the guide, and not introduce breaking changes. the original RFC for rustfmt wanted to address this with major version changes, but that no longer makes sense given the rustup distribution channel/not publishing on <a href=\"http://crates.io\">crates.io</a></p>",
        "id": 272046186,
        "sender_full_name": "Caleb Cartwright",
        "timestamp": 1644963440
    },
    {
        "content": "<p>anyway, that's enough from me, but anyone here have org admin or equivalent rights on the dev-tools org that could help with access?</p>",
        "id": 272046229,
        "sender_full_name": "Caleb Cartwright",
        "timestamp": 1644963463
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"320317\">Caleb Cartwright</span> <a href=\"#narrow/stream/301329-t-devtools/topic/2022-02-15.20meeting/near/272045922\">said</a>:</p>\n<blockquote>\n<p>since i've pulled everyone down the rustfmt rabbit hole already <span aria-label=\"smiling face\" class=\"emoji emoji-263a\" role=\"img\" title=\"smiling face\">:smiling_face:</span>  the other thing i expect will happen one day, which i'm not sure how to handle, is a modification or addition to the style guide that's \"breaking\" in the sense that if rustfmt were updated to comply, would result in lots of <code>cargo fmt --check</code> failures after upgrades</p>\n<p>e.g. <a href=\"https://github.com/rust-dev-tools/fmt-rfcs/pull/147\">https://github.com/rust-dev-tools/fmt-rfcs/pull/147</a></p>\n</blockquote>\n<p>That does seem like something that could be handled with an edition-based or version-based upgrade.</p>",
        "id": 272047916,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644964380
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"320317\">Caleb Cartwright</span> <a href=\"#narrow/stream/301329-t-devtools/topic/2022-02-15.20meeting/near/272046186\">said</a>:</p>\n<blockquote>\n<p>i feel like there's inevitable cases where rustfmt's defaults cannot simultaneously comply with the guide, and not introduce breaking changes. the original RFC for rustfmt wanted to address this with major version changes, but that no longer makes sense given the rustup distribution channel/not publishing on <a href=\"http://crates.io\">crates.io</a></p>\n</blockquote>\n<p>(Aside: I very much appreciate the rustup distribution channel, and also wish that rustfmt were available as a library on <a href=\"http://crates.io\">crates.io</a>, but that's probably a rabbit hole itself.)</p>",
        "id": 272047962,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1644964414
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"239881\">Josh Triplett</span> <a href=\"#narrow/stream/301329-t-devtools/topic/2022-02-15.20meeting/near/272047916\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"320317\">Caleb Cartwright</span> <a href=\"#narrow/stream/301329-t-devtools/topic/2022-02-15.20meeting/near/272045922\">said</a>:</p>\n<blockquote>\n<p>since i've pulled everyone down the rustfmt rabbit hole already <span aria-label=\"smiling face\" class=\"emoji emoji-263a\" role=\"img\" title=\"smiling face\">:smiling_face:</span>  the other thing i expect will happen one day, which i'm not sure how to handle, is a modification or addition to the style guide that's \"breaking\" in the sense that if rustfmt were updated to comply, would result in lots of <code>cargo fmt --check</code> failures after upgrades</p>\n<p>e.g. <a href=\"https://github.com/rust-dev-tools/fmt-rfcs/pull/147\">https://github.com/rust-dev-tools/fmt-rfcs/pull/147</a></p>\n</blockquote>\n<p>That does seem like something that could be handled with an edition-based or version-based upgrade.</p>\n</blockquote>\n<p>indeed. something will have to give one day, in some shape or form, to allow a known/expected/well-communicated intentional batch of changes</p>",
        "id": 272048286,
        "sender_full_name": "Caleb Cartwright",
        "timestamp": 1644964582
    },
    {
        "content": "<p><span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span>  <a href=\"https://github.com/rust-lang/blog.rust-lang.org/pull/930\">https://github.com/rust-lang/blog.rust-lang.org/pull/930</a></p>",
        "id": 272135046,
        "sender_full_name": "Eric Huss",
        "timestamp": 1645027170
    },
    {
        "content": "<p>came here to note this :D</p>",
        "id": 272144525,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1645030983
    },
    {
        "content": "<p>ha, same. awesome to see this</p>",
        "id": 272190730,
        "sender_full_name": "Caleb Cartwright",
        "timestamp": 1645051818
    }
]