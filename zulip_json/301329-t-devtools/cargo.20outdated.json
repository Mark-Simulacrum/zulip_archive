[
    {
        "content": "<p>Do I understand correctly, that you want to integrate this directly into cargo and not patch the <code>cargo-outdated</code> crate? If so, this is probably better to ask in <a class=\"stream\" data-stream-id=\"246057\" href=\"/#narrow/stream/246057-t-cargo\">#t-cargo</a>.  (Sadly I can't give you more advice here, because I'm not really familiar with cargo)</p>",
        "id": 264294110,
        "sender_full_name": "flip1995",
        "timestamp": 1639053456
    },
    {
        "content": "<blockquote>\n<p>Do I understand correctly, that you want to integrate this directly into cargo and not patch the cargo-outdated crate?</p>\n</blockquote>\n<p>Sorry about that! That's part of my question really, \"what's the process of getting this into cargo?\" or is it no longer desirable for this to be a feature of cargo (should the issue be closed?). Ideally a fully working version would be integrated into cargo one day so I was curious if I could work on that effort</p>\n<blockquote>\n<p>If so, this is probably better to ask in #t-cargo. (Sadly I can't give you more advice here, because I'm not really familiar with cargo)</p>\n</blockquote>\n<p>Ops, I didn't realize there was a dedicated stream for Cargo, thank you! (Just signed up for Zulip today...)</p>",
        "id": 264295168,
        "sender_full_name": "Mathspy",
        "timestamp": 1639054005
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"463269\">@Mathspy</span> I'd recommend making this an external tool to start - if people use it a lot, that makes a convincing case for upstreaming :) and the advantage is you can iterate a lot quicker without having to wait days or weeks for the changes to show up on nightly/stable</p>",
        "id": 264305819,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1639058862
    },
    {
        "content": "<p>Yeah I'll point out that <code>cargo add</code> isn't in cargo yet, it takes a really long time to add functionality this large</p>",
        "id": 264340325,
        "sender_full_name": "Manish Goregaokar",
        "timestamp": 1639072693
    },
    {
        "content": "<p>well, that's kind of a different case - <code>cargo add</code> is blocked on cargo being able to edit toml files, this would just be some text output</p>",
        "id": 264340440,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1639072750
    },
    {
        "content": "<p>(my understanding is the rust library for editing toml has some regressions compared to what cargo currently uses)</p>",
        "id": 264340485,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1639072772
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/301329-t-devtools/topic/cargo.20outdated/near/264305819\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"463269\">Mathspy</span> I'd recommend making this an external tool to start - if people use it a lot, that makes a convincing case for upstreaming :) and the advantage is you can iterate a lot quicker without having to wait days or weeks for the changes to show up on nightly/stable</p>\n</blockquote>\n<p>I feel confused; I thought this thread was about upstreaming the existing tool <code>cargo-outdated</code> tool that <span class=\"user-mention silent\" data-user-id=\"463269\">Mathspy</span> linked to?</p>",
        "id": 264362881,
        "sender_full_name": "Noah Lev",
        "timestamp": 1639082352
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"307537\">@Noah Lev</span> my impression was Mathspy wanted this to be part of cargo itself</p>",
        "id": 264365317,
        "sender_full_name": "Joshua Nelson",
        "timestamp": 1639083573
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"232545\">@Joshua Nelson</span> That's what I'm saying. You said \"I'd recommend making this an external tool to start\" ... but there already <em>is</em> an external tool: <a href=\"https://github.com/kbknapp/cargo-outdated\">https://github.com/kbknapp/cargo-outdated</a></p>",
        "id": 264368902,
        "sender_full_name": "Noah Lev",
        "timestamp": 1639085250
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"232545\">Joshua Nelson</span> <a href=\"#narrow/stream/301329-t-devtools/topic/cargo.20outdated/near/264340485\">said</a>:</p>\n<blockquote>\n<p>(my understanding is the rust library for editing toml has some regressions compared to what cargo currently uses)</p>\n</blockquote>\n<p>Someone's actively working on those, and we think it's on a path for merging in the not too distant future.</p>",
        "id": 264370735,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1639086128
    },
    {
        "content": "<p>The list of regressions in case anyone else wants to take some and help out: <a href=\"https://github.com/ordian/toml_edit/issues?q=is%3Aissue+is%3Aopen+label%3Acargo\">https://github.com/ordian/toml_edit/issues?q=is%3Aissue+is%3Aopen+label%3Acargo</a></p>",
        "id": 264374177,
        "sender_full_name": "Ed Page",
        "timestamp": 1639087642
    },
    {
        "content": "<p>To clarify my original intent, the current <code>cargo-outdated</code> works in a fairly suboptimal way that involves creating temporary projects and updating the dependencies there and then comparing the lock files and finally emitting the difference as text output.<br>\nA more optimal implementation would just read <code>Cargo.toml</code> and <code>Cargo.lock</code> and figure out the needed updates from the local index. I created a quick draft of that and on paper it's simple enough and seems to be a desired feature (there's an issue open for it from 2017) so I was wondering if I could just upstream it directly instead of creating yet another external command</p>",
        "id": 264429475,
        "sender_full_name": "Mathspy",
        "timestamp": 1639133222
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"463269\">@Mathspy</span> I think that'd be quite welcome. I think there might be some bikeshedding involved, in terms of what that should look like, but I think it's a good idea.</p>",
        "id": 264436086,
        "sender_full_name": "Josh Triplett",
        "timestamp": 1639137233
    },
    {
        "content": "<p>Yep, I understand and I don't mind bikeshedding!</p>",
        "id": 264482819,
        "sender_full_name": "Mathspy",
        "timestamp": 1639158721
    }
]